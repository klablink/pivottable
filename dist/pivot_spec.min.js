let fixtureData=[["name","gender","colour","birthday","trials","successes"],["Nick","male","blue","1982-11-07",103,12],["Jane","female","red","1982-11-08",95,25],["John","male","blue","1982-12-08",112,30],["Carol","female","yellow","1983-12-08",102,14]],raggedFixtureData=[{name:"Nick",colour:"red",age:34},{name:"Jane",gender:"female"},{name:"John",gender:"male",age:12},{name:"Jim",gender:null,age:12}];describe("$.pivotUI()",function(){describe("with no rows/cols, default count aggregator, default TableRenderer",function(){let t=null;beforeEach(e=>{t=$("<div>").pivotUI(fixtureData,{onRefresh:e,multiple:!1,parametersActive:!0})}),it("has all the basic UI elements",function(e){return expect(t.find(".pvtUiParameters .pvtAxisContainer").length).toBe(3),expect(t.find(".pvtRendererArea").length).toBe(1),expect(t.find(".pvtVals").length).toBe(1),expect(t.find("select.pvtRenderer").length).toBe(1),expect(t.find("select.pvtAggregator").length).toBe(1),expect(t.find("span.pvtAttr").length).toBe(6),e()}),it("reflects its inputs",function(e){return expect(t.find(".pvtUiParameters .pvtUnused span.pvtAttr").length).toBe(6),expect(t.find("select.pvtRenderer").val()).toBe("Table"),expect(t.find("select.pvtAggregator").val()).toBe("Count"),e()}),it("renders a table",function(e){return expect(t.find("table.pvtTable").length).toBe(1),e()}),describe("its renderer output",function(){it("has the correct type and number of cells",function(e){return expect(t.find("th.pvtTotalLabel").length).toBe(1),expect(t.find("td.pvtGrandTotal").length).toBe(1),e()}),it("has the correct textual representation",function(e){return expect(t.find("table.pvtTable").text()).toBe(["Totals","4"].join("")),e()}),it("has a correct grand total with data value",function(e){return expect(t.find("td.pvtGrandTotal").text()).toBe("4"),expect(t.find("td.pvtGrandTotal").data("value")).toBe(4),e()})})}),describe("with rows/cols, sum-over-sum aggregator, Heatmap renderer",function(){let t=null;beforeEach(e=>t=$("<div>").pivotUI(fixtureData,{rows:["gender"],cols:["colour"],aggregatorName:"Sum over Sum",vals:["successes","trials"],rendererName:"Heatmap",onRefresh:e,multiple:!1,parametersActive:!0})),it("has all the basic UI elements",function(e){return expect(t.find(".pvtAxisContainer").length).toBe(3),expect(t.find(".pvtRendererArea").length).toBe(1),expect(t.find(".pvtVals").length).toBe(1),expect(t.find("select.pvtRenderer").length).toBe(1),expect(t.find("select.pvtAggregator").length).toBe(1),expect(t.find("span.pvtAttr").length).toBe(6),e()}),it("reflects its inputs",function(e){return expect(t.find(".pvtUnused span.pvtAttr").length).toBe(4),expect(t.find(".pvtRows span.pvtAttr").length).toBe(1),expect(t.find(".pvtCols span.pvtAttr").length).toBe(1),expect(t.find("select.pvtRenderer").val()).toBe("Heatmap"),expect(t.find("select.pvtAggregator").val()).toBe("Sum over Sum"),e()}),it("renders a table",function(e){return expect(t.find("table.pvtTable").length).toBe(1),e()}),describe("its renderer output",function(){it("has the correct type and number of cells",function(e){return expect(t.find("th.pvtAxisLabel").length).toBe(2),expect(t.find("th.pvtRowLabel").length).toBe(2),expect(t.find("th.pvtColLabel").length).toBe(3),expect(t.find("th.pvtTotalLabel").length).toBe(2),expect(t.find("td.pvtVal").length).toBe(6),expect(t.find("td.pvtTotal").length).toBe(5),expect(t.find("td.pvtGrandTotal").length).toBe(1),e()}),it("has the correct textual representation",function(e){return expect(t.find("table.pvtTable").text()).toBe(["colour","blue","red","yellow","Totals","gender","female","0.26","0.14","0.20","male","0.20","0.20","Totals","0.20","0.26","0.14","0.20"].join("")),e()}),it("has a correct spot-checked cell with data value",function(e){return expect(t.find("td.col0.row1").text()).toBe("0.20"),expect(t.find("td.col0.row1").data("value")).toBe(42/215),e()})})}),describe("with ragged input",function(){let e=$("<div>").pivotUI(raggedFixtureData,{multiple:!1,parametersActive:!0,rows:["gender"],cols:["age"]});it("renders a table with the correct textual representation",()=>expect(e.find("table.pvtTable").text()).toBe(["age","12","34","null","Totals","gender","female","1","1","male","1","1","null","1","1","2","Totals","2","1","1","4"].join("")))})}),describe("$.pivot()",function(){describe("with no rows/cols, default count aggregator, default TableRenderer",function(){let e=$("<div>").pivot(fixtureData);it("renders a table",()=>expect(e.find("table.pvtTable").length).toBe(1)),describe("its renderer output",function(){it("has the correct textual representation",()=>expect(e.find("table.pvtTable").text()).toBe(["Totals","4"].join(""))),it("has a correct grand total with data value",function(){return expect(e.find("td.pvtGrandTotal").text()).toBe("4"),expect(e.find("td.pvtGrandTotal").data("value")).toBe(4)})})}),describe("with rows/cols, sum aggregator, derivedAttributes, filter and sorters",function(){let{sortAs:t,derivers:e,aggregators:r}=$.pivotUtilities,a=$("<div>").pivot(fixtureData,{rows:["gender"],cols:["birthyear"],aggregator:r.Sum(["trialbins"]),filter(e){return"Nick"!==e.name},derivedAttributes:{birthyear:e.dateFormat("birthday","%y"),trialbins:e.bin("trials",10)},sorters(e){if("gender"===e)return t(["male","female"])}});it("renders a table with the correct textual representation",()=>expect(a.find("table.pvtTable").text()).toBe(["birthyear","1982","1983","Totals","gender","male","110.00","110.00","female","90.00","100.00","190.00","Totals","200.00","100.00","300.00"].join("")))}),describe("with rows/cols, fraction-of aggregator",function(){var e=$.pivotUtilities.aggregators;let t=$("<div>").pivot(fixtureData,{rows:["gender"],aggregator:e["Sum as Fraction of Total"](["trials"])});it("renders a table with the correct textual representation",()=>expect(t.find("table.pvtTable").text()).toBe(["gender","Totals","female","47.8%","male","52.2%","Totals","100.0%"].join("")))}),describe("with rows/cols, custom aggregator, custom renderer with options",function(){let r=null,a,e=$("<div>").pivot(fixtureData,{rows:["name","colour"],cols:["trials","successes"],aggregator(){return{count2x:0,push(){return this.count2x+=2},value(){return this.count2x},format(e){return"formatted "+e}}},renderer(e,t){return r=e,a=t,$("<div>").addClass(t.greeting).text("world")},rendererOptions:{greeting:"hithere"}});it("renders the custom renderer as per options",()=>expect(e.find("div.hithere").length).toBe(1)),describe("its received PivotData object",()=>it("has a correct grand total value and format for custom aggregator",function(){var e=r.getAggregator([],[]),t=e.value();return expect(t).toBe(8),expect(e.format(t)).toBe("formatted 8")}))}),describe("with ragged input",function(){let e=$("<div>").pivot(raggedFixtureData,{rows:["gender"],cols:["age"]});it("renders a table with the correct textual representation",()=>expect(e.find("table.pvtTable").text()).toBe(["age","12","34","null","Totals","gender","female","1","1","male","1","1","null","1","1","2","Totals","2","1","1","4"].join("")))})}),describe("$.pivot()",function(){var e=$("<div>").pivot(fixtureData,{multiple:!1,rows:["gender"],cols:["colour"],aggregatorName:["Count"],rendererOptions:{headCellRenderer:function(e,t){return document.createTextNode("h_"+t+"_"+e)},dataCellRenderer:function(e){return document.createTextNode("d_"+e)}}});it("renders a table with the correct textual representation",function(){expect(e.find("table.pvtTable").text()).toBe(["colour","h_colour_blue","h_colour_red","h_colour_yellow","Totals","gender","h_gender_female","d_","d_1","d_1","d_2","h_gender_male","d_2","d_","d_","d_2","Totals","d_2","d_1","d_1","d_4"].join(""))})}),describe("$.pivotUtilities",function(){describe(".PivotData()",function(){let r={aggregator:$.pivotUtilities.aggregators["Sum over Sum"](["a","b"])};describe("with no options",function(){let e=new $.pivotUtilities.PivotData([["a","b"],[1,2],[3,4]]);it("has the correct grand total value",()=>expect(e.getAggregator([],[]).value()).toBe(2))}),describe("with array-of-array input",function(){let e=new $.pivotUtilities.PivotData([["a","b"],[1,2],[3,4]],r);it("has the correct grand total value",()=>expect(e.getAggregator([],[]).value()).toBe(4/6))}),describe("with array-of-object input",function(){let e=new $.pivotUtilities.PivotData([{a:1,b:2},{a:3,b:4}],r);it("has the correct grand total value",()=>expect(e.getAggregator([],[]).value()).toBe(4/6))}),describe("with ragged array-of-object input",function(){let e=new $.pivotUtilities.PivotData([{a:1},{b:4},{a:3,b:2}],r);it("has the correct grand total value",()=>expect(e.getAggregator([],[]).value()).toBe(4/6))}),describe("with function input",function(){let e=new $.pivotUtilities.PivotData(function(e){return e({a:1,b:2}),e({a:3,b:4})},r);it("has the correct grand total value",()=>expect(e.getAggregator([],[]).value()).toBe(4/6))}),describe("with jQuery table element input",function(){var e=$(`<table>
    <thead>
        <tr> <th>a</th><th>b</th> </tr>
    </thead>
    <tbody>
        <tr> <td>1</td> <td>2</td> </tr>
        <tr> <td>3</td> <td>4</td> </tr>
    </tbody>
</table>`);let t=new $.pivotUtilities.PivotData(e,r);it("has the correct grand total value",()=>expect(t.getAggregator([],[]).value()).toBe(4/6))}),describe("with rows/cols",function(){let i=new $.pivotUtilities.PivotData(fixtureData,{rows:["name","colour"],cols:["trials","successes"]});it("has correctly-ordered row keys",()=>expect(i.getRowKeys()).toEqual([["Carol","yellow"],["Jane","red"],["John","blue"],["Nick","blue"]])),it("has correctly-ordered col keys",()=>expect(i.getColKeys()).toEqual([[95,25],[102,14],[103,12],[112,30]])),it("can be iterated over",function(){let e=0,t=0;for(var r of Array.from(i.getRowKeys()))for(var a of Array.from(i.getColKeys()))null!=i.getAggregator(r,a).value()?e++:t++;return expect(e).toBe(4),expect(t).toBe(12)}),it("returns matching records",function(){let t=[];return i.forEachMatchingRecord({gender:"male"},e=>t.push(e.name)),expect(t).toEqual(["Nick","John"])}),it("has a correct spot-checked aggregator",function(){var e=i.getAggregator(["Carol","yellow"],[102,14]),t=e.value();return expect(t).toBe(1),expect(e.format(t)).toBe("1")}),it("has a correct grand total aggregator",function(){var e=i.getAggregator([],[]),t=e.value();return expect(t).toBe(4),expect(e.format(t)).toBe("4")})})}),describe(".aggregatorTemplates",function(){function e(e){return new $.pivotUtilities.PivotData(fixtureData,{aggregator:e}).getAggregator([],[]).value()}let t=$.pivotUtilities.aggregatorTemplates;describe(".count",()=>it("works",()=>expect(e(t.count()())).toBe(4))),describe(".countUnique",()=>it("works",()=>expect(e(t.countUnique()(["gender"]))).toBe(2))),describe(".listUnique",()=>it("works",()=>expect(e(t.listUnique()(["gender"]))).toBe("female,male"))),describe(".average",()=>it("works",()=>expect(e(t.average()(["trials"]))).toBe(103))),describe(".sum",()=>it("works",()=>expect(e(t.sum()(["trials"]))).toBe(412))),describe(".min",()=>it("works",()=>expect(e(t.min()(["trials"]))).toBe(95))),describe(".max",()=>it("works",()=>expect(e(t.max()(["trials"]))).toBe(112))),describe(".first",()=>it("works",()=>expect(e(t.first()(["name"]))).toBe("Carol"))),describe(".last",()=>it("works",()=>expect(e(t.last()(["name"]))).toBe("Nick"))),describe(".average",()=>it("works",()=>expect(e(t.average()(["trials"]))).toBe(103))),describe(".median",()=>it("works",()=>expect(e(t.median()(["trials"]))).toBe(102.5))),describe(".quantile",()=>it("works",function(){return expect(e(t.quantile(0)(["trials"]))).toBe(95),expect(e(t.quantile(.1)(["trials"]))).toBe(98.5),expect(e(t.quantile(.25)(["trials"]))).toBe(98.5),expect(e(t.quantile(1/3)(["trials"]))).toBe(102),expect(e(t.quantile(1)(["trials"]))).toBe(112)})),describe(".var",()=>it("works",()=>expect(e(t.var()(["trials"]))).toBe(48.666666666666686))),describe(".stdev",()=>it("works",()=>expect(e(t.stdev()(["trials"]))).toBe(6.976149845485451))),describe(".sumOverSum",()=>it("works",()=>expect(e(t.sumOverSum()(["successes","trials"]))).toBe(81/412)))}),describe(".naturalSort()",function(){let e=$.pivotUtilities.naturalSort,t=[null,NaN,-1/0,"-Infinity",-3,"-3",-2,"-2",-1,"-1",0,"2e-1",1,"01","1",2,"002","002e0","02","2","2e-0",3,10,"10","11","12","1e2","112",1/0,"Infinity","1a","2a","12a","20a","A","A","NaN","a","a","a01","a012","a02","a1","a2","a12","a12","a21","a21","b","c","d","null"];it("sorts naturally (null, NaN, numbers & numbery strings, Alphanum for text strings)",()=>expect(t.slice().sort(e)).toEqual(t))}),describe(".sortAs()",function(){let e=$.pivotUtilities.sortAs;it("sorts with unknown values sorted at the end",()=>expect([5,2,3,4,1].sort(e([4,3,2]))).toEqual([4,3,2,1,5])),it("sorts lowercase after uppercase",()=>expect(["Ab","aA","aa","ab"].sort(e(["Ab","Aa"]))).toEqual(["Ab","ab","aa","aA"]))}),describe(".numberFormat()",function(){let t=$.pivotUtilities.numberFormat;it("formats numbers",function(){var e=t();return expect(e(1234567.89123456)).toEqual("1,234,567.89")}),it("formats booleans",function(){var e=t();return expect(e(!0)).toEqual("1.00")}),it("formats numbers in strings",function(){var e=t();return expect(e("1234567.89123456")).toEqual("1,234,567.89")}),it("doesn't formats strings",function(){var e=t();return expect(e("hi there")).toEqual("")}),it("doesn't formats objects",function(){var e=t();return expect(e({a:1})).toEqual("")}),it("formats percentages",function(){var e=t({scaler:100,suffix:"%"});return expect(e(.12345)).toEqual("12.35%")}),it("adds separators",function(){var e=t({thousandsSep:"a",decimalSep:"b"});return expect(e(1234567.89123456)).toEqual("1a234a567b89")}),it("adds prefixes and suffixes",function(){var e=t({prefix:"a",suffix:"b"});return expect(e(1234567.89123456)).toEqual("a1,234,567.89b")}),it("scales and rounds",function(){var e=t({digitsAfterDecimal:3,scaler:1e3});return expect(e(1234567.89123456)).toEqual("1,234,567,891.235")}),describe(".date",function(){it("from date",function(){var e=t({});return expect(e(new Date("2024-01-01"),$.pivotUtilities.fieldsType.date)).toEqual("01/01/2024")}),it("from ISO string",function(){var e=t({});return expect(e(new Date("2024-01-01").toISOString(),$.pivotUtilities.fieldsType.date)).toEqual("01/01/2024")}),it("to integer",function(){var e=t({});return expect(e(10,$.pivotUtilities.fieldsType.integer)).toEqual(10)}),it("to integer",function(){var e=t({});return expect(e(10,e=>"hello_"+e)).toEqual("hello_10")})})}),describe(".derivers",function(){describe(".dateFormat()",function(){let e=$.pivotUtilities.derivers.dateFormat("x","abc % %% %%% %a %y %m %n %d %w %x %H %M %S",!0);it("formats date objects",()=>expect(e({x:new Date("2015-01-02T23:43:11Z")})).toBe("abc % %% %%% %a 2015 01 Jan 02 Fri 5 23 43 11")),it("formats input parsed by Date.parse()",function(){return expect(e({x:"2015-01-02T23:43:11Z"})).toBe("abc % %% %%% %a 2015 01 Jan 02 Fri 5 23 43 11"),expect(e({x:"bla"})).toBe("")})}),describe(".bin()",function(){let e=$.pivotUtilities.derivers.bin("x",10);it("bins numbers",function(){return expect(e({x:11})).toBe(10),expect(e({x:9})).toBe(0),expect(e({x:111})).toBe(110)}),it("bins booleans",()=>expect(e({x:!0})).toBe(0)),it("bins negative numbers",()=>expect(e({x:-12})).toBe(-10)),it("doesn't bin strings",()=>expect(e({x:"a"})).toBeNaN()),it("doesn't bin objects",()=>expect(e({x:{a:1}})).toBeNaN())})}),describe(".cellRenderers",function(){it("cellRenderers string",()=>expect($.pivotUtilities.cellRenderers.text.call({},"x").data).toBe("x")),it("cellRenderers string",()=>expect($.pivotUtilities.cellRenderers.text.call({fieldsType:{fname:$.pivotUtilities.fieldsType.date}},new Date("2024-01-01"),"fname").data).toBe("01/01/2024"))})});
//# sourceMappingURL=pivot_spec.min.js.map
