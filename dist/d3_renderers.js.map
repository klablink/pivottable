{"version":3,"file":"d3_renderers.js","names":["callWithJQueryAndD3","pivotModule","exports","_typeof","module","require","define","amd","jQuery","d3","$","pivotUtilities","d3_renderers","Treemap","pivotData","opts","value","defaults","localeStrings","width","window","height","extend","result","css","tree","name","children","addToTree","path","length","x","shift","_i","_Array$from","Array","from","child","newChild","push","_i2","_Array$from2","getRowKeys","rowKey","getAggregator","color","scale","category10","treemap","layout","size","sticky","d","select","append","style","datum","selectAll","data","padding","nodes","enter","attr","text","call","y","Math","max","dx","dy"],"sources":["d3_renderers.js"],"sourcesContent":["/*\n * decaffeinate suggestions:\n * DS101: Remove unnecessary use of Array.from\n * DS102: Remove unnecessary code created because of implicit returns\n * DS207: Consider shorter variations of null checks\n * Full docs: https://github.com/decaffeinate/decaffeinate/blob/main/docs/suggestions.md\n */\n\nconst callWithJQueryAndD3 = function(pivotModule) {\n    if ((typeof exports === \"object\") && (typeof module === \"object\")) { // CommonJS\n        return pivotModule(require(\"jquery\"), require(\"d3\"));\n    } else if ((typeof define === \"function\") && define.amd) { // AMD\n        return define([\"jquery\", \"d3\"], pivotModule);\n        // Plain browser env\n    } else {\n        return pivotModule(jQuery, d3);\n    }\n};\n\ncallWithJQueryAndD3(($, d3) => $.pivotUtilities.d3_renderers = {\n    Treemap(pivotData, opts) {\n        let value;\n        const defaults = {\n            localeStrings: {},\n            d3: {\n                width() {\n                    return $(window).width() / 1.4;\n                },\n                height() {\n                    return $(window).height() / 1.4;\n                },\n            },\n        };\n\n        opts = $.extend(true, {}, defaults, opts);\n\n\n        const result = $('<div>').css({ width: '100%', height: '100%' });\n\n        const tree = { name: 'All', children: [] };\n        var addToTree = function (tree, path, value) {\n            if (path.length === 0) {\n                tree.value = value;\n                return;\n            }\n            if (tree.children == null) {\n                tree.children = [];\n            }\n            const x = path.shift();\n            for (var child of Array.from(tree.children)) {\n                if (child.name === x) {\n                    addToTree(child, path, value);\n                    return;\n                }\n            }\n            const newChild = { name: x };\n            addToTree(newChild, path, value);\n            return tree.children.push(newChild);\n        };\n\n        for (var rowKey of Array.from(pivotData.getRowKeys())) {\n            value = pivotData.getAggregator(rowKey, []).value();\n            if (value != null) {\n                addToTree(tree, rowKey, value);\n            }\n        }\n\n        const color = d3.scale.category10();\n        const width = opts.d3.width();\n        const height = opts.d3.height();\n\n        const treemap = d3.layout.treemap()\n            .size([width, height])\n            .sticky(true)\n            .value(d => d.size);\n\n        d3.select(result[0])\n            .append('div')\n            .style('position', 'relative')\n            .style('width', width + 'px')\n            .style('height', height + 'px')\n            .datum(tree).selectAll('.node')\n            .data(treemap.padding([15, 0, 0, 0]).value(d => d.value).nodes)\n            .enter().append('div')\n            .attr('class', 'node')\n            .style('background', function (d) {\n                if (d.children != null) {\n                    return 'lightgrey';\n                } else {\n                    return color(d.name);\n                }\n            })\n            .text(d => d.name)\n            .call(function () {\n                this.style('left', d => d.x + 'px')\n                    .style('top', d => d.y + 'px')\n                    .style('width', d => Math.max(0, d.dx - 1) + 'px')\n                    .style('height', d => Math.max(0, d.dy - 1) + 'px');\n            });\n\n        return result;\n    },\n});\n\n\n\n"],"mappings":"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","ignoreList":[]}