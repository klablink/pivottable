{"version":3,"file":"pivot.es.js","names":["callWithJQuery","$","nf","pivotUtilities","numberFormat","tpl","aggregatorTemplates","frFmt","thousandsSep","decimalSep","frFmtInt","digitsAfterDecimal","frFmtPct","scaler","suffix","locales","es","formatters","format","formatInt","formatPct","localeStrings","renderError","computeError","uiRenderError","selectAll","selectNone","tooMany","filterResults","apply","cancel","totals","vs","by","rendererLabel","valuesLabel","fieldsLabel","colsLabel","rowsLabel","groupsLabel","renderers"],"sources":["pivot.es.js"],"sourcesContent":["// TODO: This file was created by bulk-decaffeinate.\n// Sanity-check the conversion and remove this comment.\n/*\n * decaffeinate suggestions:\n * DS102: Remove unnecessary code created because of implicit returns\n * Full docs: https://github.com/decaffeinate/decaffeinate/blob/main/docs/suggestions.md\n */\n\ncallWithJQuery(function($) {\n    const nf = $.pivotUtilities.numberFormat;\n    const tpl = $.pivotUtilities.aggregatorTemplates;\n\n    const frFmt =    nf({thousandsSep: \".\", decimalSep: \",\"});\n    const frFmtInt = nf({digitsAfterDecimal: 0, thousandsSep: \" \", decimalSep: \",\"});\n    const frFmtPct = nf({digitsAfterDecimal: 1, scaler: 100, suffix: \"%\", thousandsSep: \" \", decimalSep: \",\"});\n\n    return $.pivotUtilities.locales.es = {\n        formatters: {\n            format:     frFmt,\n            formatInt:  frFmtInt,\n            formatPct:  frFmtPct\n        },\n        localeStrings: {\n            renderError: \"Ocurrió un error durante la interpretación de la tabla dinámica.\",\n            computeError: \"Ocurrió un error durante el cálculo de la tabla dinámica.\",\n            uiRenderError: \"Ocurrió un error durante el dibujado de la tabla dinámica.\",\n            selectAll: \"Seleccionar todo\",\n            selectNone: \"Deseleccionar todo\",\n            tooMany: \"(demasiados valores)\",\n            filterResults: \"Filtrar resultados\",\n            apply: \"Aplicar\",\n            cancel: \"Cancelar\",\n            totals: \"Totales\",\n            vs: \"vs\",\n            by: \"por\",\n            rendererLabel: \"Renderizador\",\n            valuesLabel: \"Valores\",\n            fieldsLabel: \"Campos\",\n            colsLabel: \"Columnas\",\n            rowsLabel: \"Filas\",\n            groupsLabel: \"Grupos\",\n            \"Count\": \"Cuenta\",\n            \"Count Unique Values\": \"Cuenta de valores únicos\",\n            \"List Unique Values\": \"Lista de valores únicos\",\n            \"Sum\": \"Suma\",\n            \"Integer Sum\": \"Suma de enteros\",\n            \"Average\": \"Promedio\",\n            \"Median\": \"Mediana\",\n            \"Sample Variance\": \"Diferencia\",\n            \"Sample Standard Deviation\": \"Desviación estándar de la muestra\",\n            \"Minimum\": \"Mínimo\",\n            \"Maximum\": \"Máximo\",\n            \"First\": \"Primero\",\n            \"Last\": \"Pasado\",\n            \"Sum over Sum\": \"Suma de sumas\",\n            \"80% Upper Bound\": \"Cota 80% superior\",\n            \"80% Lower Bound\": \"Cota 80% inferior\",\n            \"Sum as Fraction of Total\": \"Suma como fracción del total\",\n            \"Sum as Fraction of Rows\": \"Suma como fracción de filas\",\n            \"Sum as Fraction of Columns\": \"Suma como fracción de columnas\",\n            \"Count as Fraction of Total\": \"Contar como fracción del total\",\n            \"Count as Fraction of Rows\": \"Contar como fracción de filas\",\n            \"Count as Fraction of Columns\": \"Contar como fracción de columnas\"\n        },\n\n\n        renderers: {\n            \"Tabla\":                           $.pivotUtilities.renderers[\"Table\"],\n            \"Tabla con barras\":               $.pivotUtilities.renderers[\"Table Barchart\"],\n            \"Heatmap\":                $.pivotUtilities.renderers[\"Heatmap\"],\n            \"Heatmap por filas\":      $.pivotUtilities.renderers[\"Row Heatmap\"],\n            \"Heatmap por columnas\":    $.pivotUtilities.renderers[\"Col Heatmap\"]\n        }\n    };});\n\n\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAA,cAAc,CAAC,UAASC,CAAC,EAAE;EACvB,IAAMC,EAAE,GAAGD,CAAC,CAACE,cAAc,CAACC,YAAY;EACxC,IAAMC,GAAG,GAAGJ,CAAC,CAACE,cAAc,CAACG,mBAAmB;EAEhD,IAAMC,KAAK,GAAML,EAAE,CAAC;IAACM,YAAY,EAAE,GAAG;IAAEC,UAAU,EAAE;EAAG,CAAC,CAAC;EACzD,IAAMC,QAAQ,GAAGR,EAAE,CAAC;IAACS,kBAAkB,EAAE,CAAC;IAAEH,YAAY,EAAE,GAAG;IAAEC,UAAU,EAAE;EAAG,CAAC,CAAC;EAChF,IAAMG,QAAQ,GAAGV,EAAE,CAAC;IAACS,kBAAkB,EAAE,CAAC;IAAEE,MAAM,EAAE,GAAG;IAAEC,MAAM,EAAE,GAAG;IAAEN,YAAY,EAAE,GAAG;IAAEC,UAAU,EAAE;EAAG,CAAC,CAAC;EAE1G,OAAOR,CAAC,CAACE,cAAc,CAACY,OAAO,CAACC,EAAE,GAAG;IACjCC,UAAU,EAAE;MACRC,MAAM,EAAMX,KAAK;MACjBY,SAAS,EAAGT,QAAQ;MACpBU,SAAS,EAAGR;IAChB,CAAC;IACDS,aAAa,EAAE;MACXC,WAAW,EAAE,kEAAkE;MAC/EC,YAAY,EAAE,2DAA2D;MACzEC,aAAa,EAAE,4DAA4D;MAC3EC,SAAS,EAAE,kBAAkB;MAC7BC,UAAU,EAAE,oBAAoB;MAChCC,OAAO,EAAE,sBAAsB;MAC/BC,aAAa,EAAE,oBAAoB;MACnCC,KAAK,EAAE,SAAS;MAChBC,MAAM,EAAE,UAAU;MAClBC,MAAM,EAAE,SAAS;MACjBC,EAAE,EAAE,IAAI;MACRC,EAAE,EAAE,KAAK;MACTC,aAAa,EAAE,cAAc;MAC7BC,WAAW,EAAE,SAAS;MACtBC,WAAW,EAAE,QAAQ;MACrBC,SAAS,EAAE,UAAU;MACrBC,SAAS,EAAE,OAAO;MAClBC,WAAW,EAAE,QAAQ;MACrB,OAAO,EAAE,QAAQ;MACjB,qBAAqB,EAAE,0BAA0B;MACjD,oBAAoB,EAAE,yBAAyB;MAC/C,KAAK,EAAE,MAAM;MACb,aAAa,EAAE,iBAAiB;MAChC,SAAS,EAAE,UAAU;MACrB,QAAQ,EAAE,SAAS;MACnB,iBAAiB,EAAE,YAAY;MAC/B,2BAA2B,EAAE,mCAAmC;MAChE,SAAS,EAAE,QAAQ;MACnB,SAAS,EAAE,QAAQ;MACnB,OAAO,EAAE,SAAS;MAClB,MAAM,EAAE,QAAQ;MAChB,cAAc,EAAE,eAAe;MAC/B,iBAAiB,EAAE,mBAAmB;MACtC,iBAAiB,EAAE,mBAAmB;MACtC,0BAA0B,EAAE,8BAA8B;MAC1D,yBAAyB,EAAE,6BAA6B;MACxD,4BAA4B,EAAE,gCAAgC;MAC9D,4BAA4B,EAAE,gCAAgC;MAC9D,2BAA2B,EAAE,+BAA+B;MAC5D,8BAA8B,EAAE;IACpC,CAAC;IAGDC,SAAS,EAAE;MACP,OAAO,EAA4BvC,CAAC,CAACE,cAAc,CAACqC,SAAS,CAAC,OAAO,CAAC;MACtE,kBAAkB,EAAgBvC,CAAC,CAACE,cAAc,CAACqC,SAAS,CAAC,gBAAgB,CAAC;MAC9E,SAAS,EAAiBvC,CAAC,CAACE,cAAc,CAACqC,SAAS,CAAC,SAAS,CAAC;MAC/D,mBAAmB,EAAOvC,CAAC,CAACE,cAAc,CAACqC,SAAS,CAAC,aAAa,CAAC;MACnE,sBAAsB,EAAKvC,CAAC,CAACE,cAAc,CAACqC,SAAS,CAAC,aAAa;IACvE;EACJ,CAAC;AAAC,CAAC,CAAC","ignoreList":[]}