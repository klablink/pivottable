{"version":3,"file":"pivot.pl.js","names":["callWithJQuery","$","nf","pivotUtilities","numberFormat","tpl","aggregatorTemplates","plFmt","thousandsSep","decimalSep","plFmtInt","digitsAfterDecimal","plFmtPct","scaler","suffix","locales","pl","formatters","format","formatInt","formatPct","localeStrings","renderError","computeError","uiRenderError","selectAll","selectNone","tooMany","filterResults","apply","cancel","totals","vs","by","rendererLabel","valuesLabel","fieldsLabel","colsLabel","rowsLabel","groupsLabel","renderers"],"sources":["pivot.pl.js"],"sourcesContent":["// TODO: This file was created by bulk-decaffeinate.\n// Sanity-check the conversion and remove this comment.\n/*\n * decaffeinate suggestions:\n * DS102: Remove unnecessary code created because of implicit returns\n * Full docs: https://github.com/decaffeinate/decaffeinate/blob/main/docs/suggestions.md\n */\n\ncallWithJQuery(function($) {\n    const nf = $.pivotUtilities.numberFormat;\n    const tpl = $.pivotUtilities.aggregatorTemplates;\n\n    const plFmt =    nf({thousandsSep: \".\", decimalSep: \",\"});\n    const plFmtInt = nf({digitsAfterDecimal: 0, thousandsSep: \".\", decimalSep: \",\"});\n    const plFmtPct = nf({digitsAfterDecimal: 1, scaler: 100, suffix: \"%\", thousandsSep: \".\", decimalSep: \",\"});\n\n    return $.pivotUtilities.locales.pl = {\n        formatters: {\n            format: plFmt,\n            formatInt: plFmtInt,\n            formatPct: plFmtPct\n        },\n        localeStrings: {\n            renderError: \"Wystąpił błąd podczas renderowania wyników PivotTable.\",\n            computeError: \"Wystąpił błąd podczas obliczania wyników PivotTable.\",\n            uiRenderError: \"Wystąpił błąd podczas renderowania UI PivotTable.\",\n            selectAll: \"Zaznacz wszystko\",\n            selectNone: \"Odznacz wszystkie\",\n            tooMany: \"(za dużo do wylistowania)\",\n            filterResults: \"Filtruj wartości\",\n            apply: \"Zastosuj\",\n            cancel: \"Anuluj\",\n            totals: \"Podsumowanie\",\n            vs: \"vs\",\n            by: \"przez\",\n            rendererLabel: \"Renderowanie\",\n            valuesLabel: \"Wartości\",\n            fieldsLabel: \"Pola\",\n            colsLabel: \"Kolumny\",\n            rowsLabel: \"Wiersze\",\n            groupsLabel: \"Grupy\",\n            \"Count\": \"Liczba\",\n            \"Count Unique Values\": \"Liczba unikatowych wartości\",\n            \"List Unique Values\": \"Lista unikatowych wartości\",\n            \"Sum\": \"Suma\",\n            \"Integer Sum\": \"Suma całkowita\",\n            \"Average\": \"Średnia\",\n            \"Median\": \"Mediana\",\n            \"Sample Variance\": \"Wariancja próbki\",\n            \"Sample Standard Deviation\": \"Odchylenie standardowe próbki\",\n            \"Minimum\": \"Minimum\",\n            \"Maximum\": \"Maksimum\",\n            \"First\": \"Pierwszy\",\n            \"Last\": \"Ostatni\",\n            \"Sum over Sum\": \"Suma po sumie\",\n            \"80% Upper Bound\": \"80% Kres Dolny\",\n            \"80% Lower Bound\": \"80% Kres Górny\",\n            \"Sum as Fraction of Total\": \"Suma jako Ułamek Całości\",\n            \"Sum as Fraction of Rows\": \"Suma jako Ułamek w Wierszach\",\n            \"Sum as Fraction of Columns\": \"Suma jako Ułamek w Kolumnach\",\n            \"Count as Fraction of Total\": \"Liczba jako Ułamek Całości\",\n            \"Count as Fraction of Rows\": \"Liczba jako Ułamek w Wierszach\",\n            \"Count as Fraction of Columns\": \"Liczba jako Ułamek w Kolumnach\"\n        },\n\n        renderers: {\n            \"Tabela\":                       $.pivotUtilities.renderers[\"Table\"],\n            \"Tabela z Wykresem Słupkowym\":  $.pivotUtilities.renderers[\"Table Barchart\"],\n            \"Mapa cieplna\":                 $.pivotUtilities.renderers[\"Heatmap\"],\n            \"Mapa cieplna po Wierszach\":    $.pivotUtilities.renderers[\"Row Heatmap\"],\n            \"Mapa cieplna po Kolumnach\":    $.pivotUtilities.renderers[\"Col Heatmap\"]\n        }\n    };});\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAA,cAAc,CAAC,UAASC,CAAC,EAAE;EACvB,IAAMC,EAAE,GAAGD,CAAC,CAACE,cAAc,CAACC,YAAY;EACxC,IAAMC,GAAG,GAAGJ,CAAC,CAACE,cAAc,CAACG,mBAAmB;EAEhD,IAAMC,KAAK,GAAML,EAAE,CAAC;IAACM,YAAY,EAAE,GAAG;IAAEC,UAAU,EAAE;EAAG,CAAC,CAAC;EACzD,IAAMC,QAAQ,GAAGR,EAAE,CAAC;IAACS,kBAAkB,EAAE,CAAC;IAAEH,YAAY,EAAE,GAAG;IAAEC,UAAU,EAAE;EAAG,CAAC,CAAC;EAChF,IAAMG,QAAQ,GAAGV,EAAE,CAAC;IAACS,kBAAkB,EAAE,CAAC;IAAEE,MAAM,EAAE,GAAG;IAAEC,MAAM,EAAE,GAAG;IAAEN,YAAY,EAAE,GAAG;IAAEC,UAAU,EAAE;EAAG,CAAC,CAAC;EAE1G,OAAOR,CAAC,CAACE,cAAc,CAACY,OAAO,CAACC,EAAE,GAAG;IACjCC,UAAU,EAAE;MACRC,MAAM,EAAEX,KAAK;MACbY,SAAS,EAAET,QAAQ;MACnBU,SAAS,EAAER;IACf,CAAC;IACDS,aAAa,EAAE;MACXC,WAAW,EAAE,wDAAwD;MACrEC,YAAY,EAAE,sDAAsD;MACpEC,aAAa,EAAE,mDAAmD;MAClEC,SAAS,EAAE,kBAAkB;MAC7BC,UAAU,EAAE,mBAAmB;MAC/BC,OAAO,EAAE,2BAA2B;MACpCC,aAAa,EAAE,kBAAkB;MACjCC,KAAK,EAAE,UAAU;MACjBC,MAAM,EAAE,QAAQ;MAChBC,MAAM,EAAE,cAAc;MACtBC,EAAE,EAAE,IAAI;MACRC,EAAE,EAAE,OAAO;MACXC,aAAa,EAAE,cAAc;MAC7BC,WAAW,EAAE,UAAU;MACvBC,WAAW,EAAE,MAAM;MACnBC,SAAS,EAAE,SAAS;MACpBC,SAAS,EAAE,SAAS;MACpBC,WAAW,EAAE,OAAO;MACpB,OAAO,EAAE,QAAQ;MACjB,qBAAqB,EAAE,6BAA6B;MACpD,oBAAoB,EAAE,4BAA4B;MAClD,KAAK,EAAE,MAAM;MACb,aAAa,EAAE,gBAAgB;MAC/B,SAAS,EAAE,SAAS;MACpB,QAAQ,EAAE,SAAS;MACnB,iBAAiB,EAAE,kBAAkB;MACrC,2BAA2B,EAAE,+BAA+B;MAC5D,SAAS,EAAE,SAAS;MACpB,SAAS,EAAE,UAAU;MACrB,OAAO,EAAE,UAAU;MACnB,MAAM,EAAE,SAAS;MACjB,cAAc,EAAE,eAAe;MAC/B,iBAAiB,EAAE,gBAAgB;MACnC,iBAAiB,EAAE,gBAAgB;MACnC,0BAA0B,EAAE,0BAA0B;MACtD,yBAAyB,EAAE,8BAA8B;MACzD,4BAA4B,EAAE,8BAA8B;MAC5D,4BAA4B,EAAE,4BAA4B;MAC1D,2BAA2B,EAAE,gCAAgC;MAC7D,8BAA8B,EAAE;IACpC,CAAC;IAEDC,SAAS,EAAE;MACP,QAAQ,EAAwBvC,CAAC,CAACE,cAAc,CAACqC,SAAS,CAAC,OAAO,CAAC;MACnE,6BAA6B,EAAGvC,CAAC,CAACE,cAAc,CAACqC,SAAS,CAAC,gBAAgB,CAAC;MAC5E,cAAc,EAAkBvC,CAAC,CAACE,cAAc,CAACqC,SAAS,CAAC,SAAS,CAAC;MACrE,2BAA2B,EAAKvC,CAAC,CAACE,cAAc,CAACqC,SAAS,CAAC,aAAa,CAAC;MACzE,2BAA2B,EAAKvC,CAAC,CAACE,cAAc,CAACqC,SAAS,CAAC,aAAa;IAC5E;EACJ,CAAC;AAAC,CAAC,CAAC","ignoreList":[]}