{"version":3,"file":"pivot.it.js","names":["callWithJQuery","$","nf","pivotUtilities","numberFormat","tpl","aggregatorTemplates","frFmt","thousandsSep","decimalSep","frFmtInt","digitsAfterDecimal","frFmtPct","scaler","suffix","locales","it","formatters","format","formatInt","formatPct","localeStrings","renderError","computeError","uiRenderError","selectAll","selectNone","tooMany","filterResults","apply","cancel","totals","vs","by","rendererLabel","valuesLabel","fieldsLabel","colsLabel","rowsLabel","groupsLabel","renderers"],"sources":["pivot.it.js"],"sourcesContent":["// TODO: This file was created by bulk-decaffeinate.\n// Sanity-check the conversion and remove this comment.\n/*\n * decaffeinate suggestions:\n * DS102: Remove unnecessary code created because of implicit returns\n * Full docs: https://github.com/decaffeinate/decaffeinate/blob/main/docs/suggestions.md\n */\n\ncallWithJQuery(function($) {\n    const nf = $.pivotUtilities.numberFormat;\n    const tpl = $.pivotUtilities.aggregatorTemplates;\n\n    const frFmt = nf({thousandsSep: \".\", decimalSep: \",\"});\n    const frFmtInt = nf({digitsAfterDecimal: 0, thousandsSep: \".\", decimalSep: \",\"});\n    const frFmtPct = nf({digitsAfterDecimal: 1, scaler: 100, suffix: \"%\", thousandsSep: \".\", decimalSep: \",\"});\n\n    $.pivotUtilities.locales.it = {\n        formatters: {\n            format: frFmt,\n            formatInt: frFmtInt,\n            formatPct: frFmtPct\n        },\n        localeStrings: {\n            renderError: \"Si è verificato un errore durante la creazione della tabella.\",\n            computeError: \"Si è verificato un errore di calcolo nella tabella.\",\n            uiRenderError: \"Si è verificato un errore durante il disegno di interfaccia della tabella pivot.\",\n            selectAll: \"Seleziona tutto\",\n            selectNone: \"Deseleziona tutto\",\n            tooMany: \"(troppi valori da visualizzare)\",\n            filterResults: \"Filtra i valori\",\n            apply: \"Applica\",\n            cancel: \"Annulla\",\n            totals: \"Totali\",\n            vs: \"su\",\n            by: \"da\",\n            rendererLabel: \"Visualizza come\",\n            valuesLabel: \"Valori\",\n            fieldsLabel: \"Campi\",\n            colsLabel: \"Colonne\",\n            rowsLabel: \"Righe\",\n            groupsLabel: \"Gruppi\",\n            \"Count\": \"Conteggio\",\n            \"Count Unique Values\": \"Conteggio valori unici\",\n            \"List Unique Values\": \"Elenco valori unici\",\n            \"Sum\": \"Somma\",\n            \"Integer Sum\": \"Somma intera\",\n            \"Average\": \"Media\",\n            \"Median\": \"Mediana\",\n            \"Sample Variance\": \"Variazione standard\",\n            \"Sample Standard Deviation\": \"Deviazione standard\",\n            \"Minimum\": \"Minimo\",\n            \"Maximum\": \"Massimo\",\n            \"First\": \"Primo\",\n            \"Last\": \"Ultimo\",\n            \"Sum over Sum\": \"Somma su somma\",\n            \"80% Upper Bound\": \"Limite superiore 80%\",\n            \"80% Lower Bound\": \"Limite inferiore 80%\",\n            \"Sum as Fraction of Total\": \"Somma come frazione del totale\",\n            \"Sum as Fraction of Rows\": \"Somma come frazione di righe\",\n            \"Sum as Fraction of Columns\": \"Somma come frazione di colonne\",\n            \"Count as Fraction of Total\": \"Conteggio come frazione del totale\",\n            \"Count as Fraction of Rows\": \"Conteggio come frazione di righe\",\n            \"Count as Fraction of Columns\": \"Conteggio come frazione di colonne\"\n        }\n    };\n\n    return {\n        renderers: {\n            \"Tabella\": $.pivotUtilities.renderers[\"Table\"],\n            \"Tabella con grafico\": $.pivotUtilities.renderers[\"Table Barchart\"],\n            \"Mappa di calore\": $.pivotUtilities.renderers[\"Heatmap\"],\n            \"Mappa di calore per righe\": $.pivotUtilities.renderers[\"Row Heatmap\"],\n            \"Mappa di calore per colonne\": $.pivotUtilities.renderers[\"Col Heatmap\"]\n        }\n    };});\n\n\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAA,cAAc,CAAC,UAASC,CAAC,EAAE;EACvB,IAAMC,EAAE,GAAGD,CAAC,CAACE,cAAc,CAACC,YAAY;EACxC,IAAMC,GAAG,GAAGJ,CAAC,CAACE,cAAc,CAACG,mBAAmB;EAEhD,IAAMC,KAAK,GAAGL,EAAE,CAAC;IAACM,YAAY,EAAE,GAAG;IAAEC,UAAU,EAAE;EAAG,CAAC,CAAC;EACtD,IAAMC,QAAQ,GAAGR,EAAE,CAAC;IAACS,kBAAkB,EAAE,CAAC;IAAEH,YAAY,EAAE,GAAG;IAAEC,UAAU,EAAE;EAAG,CAAC,CAAC;EAChF,IAAMG,QAAQ,GAAGV,EAAE,CAAC;IAACS,kBAAkB,EAAE,CAAC;IAAEE,MAAM,EAAE,GAAG;IAAEC,MAAM,EAAE,GAAG;IAAEN,YAAY,EAAE,GAAG;IAAEC,UAAU,EAAE;EAAG,CAAC,CAAC;EAE1GR,CAAC,CAACE,cAAc,CAACY,OAAO,CAACC,EAAE,GAAG;IAC1BC,UAAU,EAAE;MACRC,MAAM,EAAEX,KAAK;MACbY,SAAS,EAAET,QAAQ;MACnBU,SAAS,EAAER;IACf,CAAC;IACDS,aAAa,EAAE;MACXC,WAAW,EAAE,+DAA+D;MAC5EC,YAAY,EAAE,qDAAqD;MACnEC,aAAa,EAAE,kFAAkF;MACjGC,SAAS,EAAE,iBAAiB;MAC5BC,UAAU,EAAE,mBAAmB;MAC/BC,OAAO,EAAE,iCAAiC;MAC1CC,aAAa,EAAE,iBAAiB;MAChCC,KAAK,EAAE,SAAS;MAChBC,MAAM,EAAE,SAAS;MACjBC,MAAM,EAAE,QAAQ;MAChBC,EAAE,EAAE,IAAI;MACRC,EAAE,EAAE,IAAI;MACRC,aAAa,EAAE,iBAAiB;MAChCC,WAAW,EAAE,QAAQ;MACrBC,WAAW,EAAE,OAAO;MACpBC,SAAS,EAAE,SAAS;MACpBC,SAAS,EAAE,OAAO;MAClBC,WAAW,EAAE,QAAQ;MACrB,OAAO,EAAE,WAAW;MACpB,qBAAqB,EAAE,wBAAwB;MAC/C,oBAAoB,EAAE,qBAAqB;MAC3C,KAAK,EAAE,OAAO;MACd,aAAa,EAAE,cAAc;MAC7B,SAAS,EAAE,OAAO;MAClB,QAAQ,EAAE,SAAS;MACnB,iBAAiB,EAAE,qBAAqB;MACxC,2BAA2B,EAAE,qBAAqB;MAClD,SAAS,EAAE,QAAQ;MACnB,SAAS,EAAE,SAAS;MACpB,OAAO,EAAE,OAAO;MAChB,MAAM,EAAE,QAAQ;MAChB,cAAc,EAAE,gBAAgB;MAChC,iBAAiB,EAAE,sBAAsB;MACzC,iBAAiB,EAAE,sBAAsB;MACzC,0BAA0B,EAAE,gCAAgC;MAC5D,yBAAyB,EAAE,8BAA8B;MACzD,4BAA4B,EAAE,gCAAgC;MAC9D,4BAA4B,EAAE,oCAAoC;MAClE,2BAA2B,EAAE,kCAAkC;MAC/D,8BAA8B,EAAE;IACpC;EACJ,CAAC;EAED,OAAO;IACHC,SAAS,EAAE;MACP,SAAS,EAAEvC,CAAC,CAACE,cAAc,CAACqC,SAAS,CAAC,OAAO,CAAC;MAC9C,qBAAqB,EAAEvC,CAAC,CAACE,cAAc,CAACqC,SAAS,CAAC,gBAAgB,CAAC;MACnE,iBAAiB,EAAEvC,CAAC,CAACE,cAAc,CAACqC,SAAS,CAAC,SAAS,CAAC;MACxD,2BAA2B,EAAEvC,CAAC,CAACE,cAAc,CAACqC,SAAS,CAAC,aAAa,CAAC;MACtE,6BAA6B,EAAEvC,CAAC,CAACE,cAAc,CAACqC,SAAS,CAAC,aAAa;IAC3E;EACJ,CAAC;AAAC,CAAC,CAAC","ignoreList":[]}