{"version":3,"sources":["pivot_spec.js"],"names":["fixtureData","raggedFixtureData","name","colour","age","gender","describe","table","beforeEach","done","$","pivotUI","onRefresh","multiple","parametersActive","it","expect","find","length","toBe","val","text","join","data","rows","cols","aggregatorName","vals","rendererName","pivot","_$$pivotUtilities","pivotUtilities","sortAs","derivers","aggregators","aggregator","filter","record","derivedAttributes","birthyear","dateFormat","trialbins","bin","sorters","attr","received_PivotData","count2x","push","this","value","format","x","renderer","a","b","addClass","greeting","rendererOptions","agg","getAggregator","sumOverSumOpts","pd","PivotData","tableInput","getRowKeys","toEqual","getColKeys","numNotNull","numNull","_i","_Array$from","Array","from","r","_i2","_Array$from2","c","records","forEachMatchingRecord","getVal","tpl","aggregatorTemplates","count","countUnique","listUnique","average","sum","min","max","first","last","median","quantile","var","stdev","sumOverSum","naturalSort","sortedArr","NaN","Infinity","slice","sort","numberFormat","nf","scaler","suffix","thousandsSep","decimalSep","prefix","digitsAfterDecimal","df","Date","binner","toBeNaN"],"mappings":"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","file":"pivot_spec.min.js","sourcesContent":["\n// TODO: This file was created by bulk-decaffeinate.\n// Sanity-check the conversion and remove this comment.\n/*\n * decaffeinate suggestions:\n * DS101: Remove unnecessary use of Array.from\n * DS102: Remove unnecessary code created because of implicit returns\n * DS207: Consider shorter variations of null checks\n * Full docs: https://github.com/decaffeinate/decaffeinate/blob/main/docs/suggestions.md\n */\nconst fixtureData = [\n    ['name', 'gender', 'colour', 'birthday', 'trials', 'successes'],\n    ['Nick', 'male', 'blue', '1982-11-07', 103, 12],\n    ['Jane', 'female', 'red', '1982-11-08', 95, 25],\n    ['John', 'male', 'blue', '1982-12-08', 112, 30],\n    ['Carol', 'female', 'yellow', '1983-12-08', 102, 14],\n];\n\nconst raggedFixtureData = [\n    { name: 'Nick', 'colour': 'red', 'age': 34 },\n    { name: 'Jane', 'gender': 'female' },\n    { name: 'John', 'gender': 'male', 'age': 12 },\n    { name: 'Jim', 'gender': null, 'age': 12 },\n];\n\ndescribe('$.pivotUI()', function () {\n    describe('with no rows/cols, default count aggregator, default TableRenderer', function () {\n        let table = null;\n\n        beforeEach(done => {\n            table = $('<div>').pivotUI(fixtureData, { onRefresh: done, multiple: false, parametersActive: true });\n        });\n        it('has all the basic UI elements', function (done) {\n            expect(table.find('.pvtUiParameters .pvtAxisContainer').length)\n                .toBe(3);\n            // noinspection DuplicatedCode\n            expect(table.find('.pvtRendererArea').length)\n                .toBe(1);\n            expect(table.find('.pvtVals').length)\n                .toBe(1);\n            expect(table.find('select.pvtRenderer').length)\n                .toBe(1);\n            expect(table.find('select.pvtAggregator').length)\n                .toBe(1);\n            expect(table.find('span.pvtAttr').length)\n                .toBe(6);\n            return done();\n        });\n\n        it('reflects its inputs', function (done) {\n            expect(table.find('.pvtUiParameters .pvtUnused span.pvtAttr').length)\n                .toBe(6);\n            expect(table.find('select.pvtRenderer').val())\n                .toBe('Table');\n            expect(table.find('select.pvtAggregator').val())\n                .toBe('Count');\n            return done();\n        });\n\n        it('renders a table', function (done) {\n            expect(table.find('table.pvtTable').length)\n                .toBe(1);\n            return done();\n        });\n\n\n        return describe('its renderer output', function () {\n            it('has the correct type and number of cells', function (done) {\n                expect(table.find('th.pvtTotalLabel').length)\n                    .toBe(1);\n                expect(table.find('td.pvtGrandTotal').length)\n                    .toBe(1);\n                return done();\n            });\n\n            it('has the correct textual representation', function (done) {\n                expect(table.find('table.pvtTable').text())\n                    .toBe(['Totals', '4'].join(''));\n                return done();\n            });\n\n            return it('has a correct grand total with data value', function (done) {\n                expect(table.find('td.pvtGrandTotal').text())\n                    .toBe('4');\n                expect(table.find('td.pvtGrandTotal').data('value'))\n                    .toBe(4);\n                return done();\n            });\n        });\n    });\n\n    describe('with rows/cols, sum-over-sum aggregator, Heatmap renderer', function () {\n        let table = null;\n\n        beforeEach(done => table = $('<div>').pivotUI(fixtureData, {\n                rows: ['gender'], cols: ['colour'],\n                aggregatorName: 'Sum over Sum',\n                vals: ['successes', 'trials'],\n                rendererName: 'Heatmap',\n                onRefresh: done,\n                multiple: false,\n                parametersActive: true,\n            },\n        ));\n\n        it('has all the basic UI elements', function (done) {\n            expect(table.find('.pvtAxisContainer').length)\n                .toBe(3);\n            // noinspection DuplicatedCode\n            expect(table.find('.pvtRendererArea').length)\n                .toBe(1);\n            expect(table.find('.pvtVals').length)\n                .toBe(1);\n            expect(table.find('select.pvtRenderer').length)\n                .toBe(1);\n            expect(table.find('select.pvtAggregator').length)\n                .toBe(1);\n            expect(table.find('span.pvtAttr').length)\n                .toBe(6);\n            return done();\n        });\n\n        it('reflects its inputs', function (done) {\n            expect(table.find('.pvtUnused span.pvtAttr').length)\n                .toBe(4);\n            expect(table.find('.pvtRows span.pvtAttr').length)\n                .toBe(1);\n            expect(table.find('.pvtCols span.pvtAttr').length)\n                .toBe(1);\n            expect(table.find('select.pvtRenderer').val())\n                .toBe('Heatmap');\n            expect(table.find('select.pvtAggregator').val())\n                .toBe('Sum over Sum');\n            return done();\n        });\n\n        it('renders a table', function (done) {\n            expect(table.find('table.pvtTable').length)\n                .toBe(1);\n            return done();\n        });\n\n        return describe('its renderer output', function () {\n            it('has the correct type and number of cells', function (done) {\n                expect(table.find('th.pvtAxisLabel').length)\n                    .toBe(2);\n                expect(table.find('th.pvtRowLabel').length)\n                    .toBe(2);\n                expect(table.find('th.pvtColLabel').length)\n                    .toBe(3);\n                expect(table.find('th.pvtTotalLabel').length)\n                    .toBe(2);\n                expect(table.find('td.pvtVal').length)\n                    .toBe(6);\n                expect(table.find('td.pvtTotal').length)\n                    .toBe(5);\n                expect(table.find('td.pvtGrandTotal').length)\n                    .toBe(1);\n                return done();\n            });\n\n            it('has the correct textual representation', function (done) {\n                expect(table.find('table.pvtTable').text())\n                    .toBe([\n                            'colour', 'blue', 'red', 'yellow', 'Totals',\n                            'gender',\n                            'female', '0.26', '0.14', '0.20',\n                            'male', '0.20', '0.20',\n                            'Totals', '0.20', '0.26', '0.14', '0.20',\n                        ].join(''),\n                    );\n                return done();\n            });\n\n            return it('has a correct spot-checked cell with data value', function (done) {\n                expect(table.find('td.col0.row1').text())\n                    .toBe('0.20');\n                expect(table.find('td.col0.row1').data('value'))\n                    .toBe((12 + 30) / (103 + 112));\n                return done();\n            });\n        });\n    });\n\n    return describe('with ragged input', function () {\n        const table = $('<div>').pivotUI(raggedFixtureData, {\n            multiple: false,\n            parametersActive: true,\n            rows: ['gender'],\n            cols: ['age'],\n        });\n\n        return it('renders a table with the correct textual representation', () => expect(table.find('table.pvtTable').text())\n            .toBe([\n                    'age', '12', '34', 'null', 'Totals',\n                    'gender',\n                    'female', '1', '1',\n                    'male', '1', '1',\n                    'null', '1', '1', '2',\n                    'Totals', '2', '1', '1', '4',\n                ].join(''),\n            ));\n    });\n});\n\ndescribe('$.pivot()', function () {\n\n    describe('with no rows/cols, default count aggregator, default TableRenderer', function () {\n        const table = $('<div>').pivot(fixtureData);\n\n        it('renders a table', () => expect(table.find('table.pvtTable').length)\n            .toBe(1));\n\n        return describe('its renderer output', function () {\n\n            it('has the correct textual representation', () => expect(table.find('table.pvtTable').text())\n                .toBe(['Totals', '4'].join('')));\n\n            return it('has a correct grand total with data value', function () {\n                expect(table.find('td.pvtGrandTotal').text())\n                    .toBe('4');\n                return expect(table.find('td.pvtGrandTotal').data('value'))\n                    .toBe(4);\n            });\n        });\n    });\n\n    describe('with rows/cols, sum aggregator, derivedAttributes, filter and sorters', function () {\n        const { sortAs, derivers, aggregators } = $.pivotUtilities;\n        const table = $('<div>').pivot(fixtureData, {\n                rows: ['gender'], cols: ['birthyear'], aggregator: aggregators['Sum'](['trialbins']),\n                filter(record) {\n                    return record.name !== 'Nick';\n                },\n                derivedAttributes: {\n                    birthyear: derivers.dateFormat('birthday', '%y'),\n                    trialbins: derivers.bin('trials', 10),\n                },\n                sorters(attr) {\n                    if (attr === 'gender') {\n                        return sortAs(['male', 'female']);\n                    }\n                },\n            },\n        );\n\n        return it('renders a table with the correct textual representation', () => expect(table.find('table.pvtTable').text())\n            .toBe([\n                    'birthyear', '1982', '1983', 'Totals',\n                    'gender',\n                    'male', '110.00', '110.00',\n                    'female', '90.00', '100.00', '190.00',\n                    'Totals', '200.00', '100.00', '300.00',\n                ].join(''),\n            ));\n    });\n\n    describe('with rows/cols, fraction-of aggregator', function () {\n        const { aggregators } = $.pivotUtilities;\n        const table = $('<div>').pivot(fixtureData, {\n                rows: ['gender'],\n                aggregator: aggregators['Sum as Fraction of Total'](['trials']),\n            },\n        );\n\n        return it('renders a table with the correct textual representation', () => expect(table.find('table.pvtTable').text())\n            .toBe([\n                    'gender', 'Totals',\n                    'female', '47.8%',\n                    'male', '52.2%',\n                    'Totals', '100.0%',\n                ].join(''),\n            ));\n    });\n\n    describe('with rows/cols, custom aggregator, custom renderer with options', function () {\n        let received_PivotData = null;\n        let received_rendererOptions = null;\n\n        const table = $('<div>').pivot(fixtureData, {\n            rows: ['name', 'colour'], cols: ['trials', 'successes'],\n            aggregator() {\n                return {\n                    count2x: 0,\n                    push() {\n                        return this.count2x += 2;\n                    },\n                    value() {\n                        return this.count2x;\n                    },\n                    format(x) {\n                        return 'formatted ' + x;\n                    },\n                };\n            },\n            renderer(a, b) {\n                received_PivotData = a;\n                received_rendererOptions = b;\n                return $('<div>').addClass(b.greeting).text('world');\n            },\n            rendererOptions: { greeting: 'hithere' },\n        });\n\n        it('renders the custom renderer as per options', () => expect(table.find('div.hithere').length)\n            .toBe(1));\n\n        return describe('its received PivotData object', () => it('has a correct grand total value and format for custom aggregator', function () {\n            const agg = received_PivotData.getAggregator([], []);\n            const val = agg.value();\n            expect(val).toBe(8);\n            return expect(agg.format(val)).toBe('formatted 8');\n        }));\n    });\n\n\n    return describe('with ragged input', function () {\n        const table = $('<div>').pivot(raggedFixtureData, { rows: ['gender'], cols: ['age'] });\n\n        return it('renders a table with the correct textual representation', () => expect(table.find('table.pvtTable').text())\n            .toBe([\n                    'age', '12', '34', 'null', 'Totals',\n                    'gender',\n                    'female', '1', '1',\n                    'male', '1', '1',\n                    'null', '1', '1', '2',\n                    'Totals', '2', '1', '1', '4',\n                ].join(''),\n            ));\n    });\n});\n\ndescribe('$.pivotUtilities', function () {\n\n    describe('.PivotData()', function () {\n        const sumOverSumOpts =\n            { aggregator: $.pivotUtilities.aggregators['Sum over Sum'](['a', 'b']) };\n\n        describe('with no options', function () {\n            const aoaInput = [['a', 'b'], [1, 2], [3, 4]];\n            const pd = new $.pivotUtilities.PivotData(aoaInput);\n\n            return it('has the correct grand total value', () => expect(pd.getAggregator([], []).value())\n                .toBe(2));\n        });\n\n        describe('with array-of-array input', function () {\n            const aoaInput = [['a', 'b'], [1, 2], [3, 4]];\n            const pd = new $.pivotUtilities.PivotData(aoaInput, sumOverSumOpts);\n\n            return it('has the correct grand total value', () => expect(pd.getAggregator([], []).value())\n                .toBe((1 + 3) / (2 + 4)));\n        });\n\n        describe('with array-of-object input', function () {\n            const aosInput = [{ a: 1, b: 2 }, { a: 3, b: 4 }];\n            const pd = new $.pivotUtilities.PivotData(aosInput, sumOverSumOpts);\n\n            return it('has the correct grand total value', () => expect(pd.getAggregator([], []).value())\n                .toBe((1 + 3) / (2 + 4)));\n        });\n\n        describe('with ragged array-of-object input', function () {\n            const raggedAosInput = [{ a: 1 }, { b: 4 }, { a: 3, b: 2 }];\n            const pd = new $.pivotUtilities.PivotData(raggedAosInput, sumOverSumOpts);\n\n            return it('has the correct grand total value', () => expect(pd.getAggregator([], []).value())\n                .toBe((1 + 3) / (2 + 4)));\n        });\n\n        describe('with function input', function () {\n            const functionInput = function (record) {\n                record({ a: 1, b: 2 });\n                return record({ a: 3, b: 4 });\n            };\n            const pd = new $.pivotUtilities.PivotData(functionInput, sumOverSumOpts);\n\n            return it('has the correct grand total value', () => expect(pd.getAggregator([], []).value())\n                .toBe((1 + 3) / (2 + 4)));\n        });\n\n        describe('with jQuery table element input', function () {\n            const tableInput = $(`\\\n<table>\n    <thead>\n        <tr> <th>a</th><th>b</th> </tr>\n    </thead>\n    <tbody>\n        <tr> <td>1</td> <td>2</td> </tr>\n        <tr> <td>3</td> <td>4</td> </tr>\n    </tbody>\n</table>\\\n`,\n            );\n            const pd = new $.pivotUtilities.PivotData(tableInput, sumOverSumOpts);\n\n            return it('has the correct grand total value', () => expect(pd.getAggregator([], []).value())\n                .toBe((1 + 3) / (2 + 4)));\n        });\n\n\n        return describe('with rows/cols', function () {\n            const pd = new $.pivotUtilities.PivotData(fixtureData, {\n                rows: ['name', 'colour'],\n                cols: ['trials', 'successes'],\n            });\n\n            it('has correctly-ordered row keys', () => expect(pd.getRowKeys())\n                .toEqual([['Carol', 'yellow'], ['Jane', 'red'], ['John', 'blue'], ['Nick', 'blue']]));\n\n            it('has correctly-ordered col keys', () => expect(pd.getColKeys())\n                .toEqual([[95, 25], [102, 14], [103, 12], [112, 30]]));\n\n            it('can be iterated over', function () {\n                let numNotNull = 0;\n                let numNull = 0;\n                for (const r of Array.from(pd.getRowKeys())) {\n                    for (const c of Array.from(pd.getColKeys())) {\n                        if (pd.getAggregator(r, c).value() != null) {\n                            numNotNull++;\n                        } else {\n                            numNull++;\n                        }\n                    }\n                }\n                expect(numNotNull)\n                    .toBe(4);\n                return expect(numNull)\n                    .toBe(12);\n            });\n\n            it('returns matching records', function () {\n                const records = [];\n                pd.forEachMatchingRecord({ gender: 'male' }, x => records.push(x.name));\n                return expect(records)\n                    .toEqual(['Nick', 'John']);\n            });\n\n            it('has a correct spot-checked aggregator', function () {\n                const agg = pd.getAggregator(['Carol', 'yellow'], [102, 14]);\n                const val = agg.value();\n                expect(val).toBe(1);\n                return expect(agg.format(val)).toBe('1');\n            });\n\n            return it('has a correct grand total aggregator', function () {\n                const agg = pd.getAggregator([], []);\n                const val = agg.value();\n                expect(val).toBe(4);\n                return expect(agg.format(val)).toBe('4');\n            });\n        });\n    });\n\n    describe('.aggregatorTemplates', function () {\n\n        const getVal = function (aggregator) {\n            const pd = new $.pivotUtilities.PivotData(fixtureData, { aggregator });\n            return pd.getAggregator([], []).value();\n        };\n        const tpl = $.pivotUtilities.aggregatorTemplates;\n\n        describe('.count', () => it('works', () => expect(getVal(tpl.count()()))\n            .toBe(4)));\n\n        describe('.countUnique', () => it('works', () => expect(getVal(tpl.countUnique()(['gender'])))\n            .toBe(2)));\n\n        describe('.listUnique', () => it('works', () => expect(getVal(tpl.listUnique()(['gender'])))\n            .toBe('female,male')));\n\n        describe('.average', () => it('works', () => expect(getVal(tpl.average()(['trials'])))\n            .toBe(103)));\n\n        describe('.sum', () => it('works', () => expect(getVal(tpl.sum()(['trials'])))\n            .toBe(412)));\n\n        describe('.min', () => it('works', () => expect(getVal(tpl.min()(['trials'])))\n            .toBe(95)));\n\n        describe('.max', () => it('works', () => expect(getVal(tpl.max()(['trials'])))\n            .toBe(112)));\n\n        describe('.first', () => it('works', () => expect(getVal(tpl.first()(['name'])))\n            .toBe('Carol')));\n\n        describe('.last', () => it('works', () => expect(getVal(tpl.last()(['name'])))\n            .toBe('Nick')));\n\n        describe('.average', () => it('works', () => expect(getVal(tpl.average()(['trials'])))\n            .toBe(103)));\n\n        describe('.median', () => it('works', () => expect(getVal(tpl.median()(['trials'])))\n            .toBe(102.5)));\n\n        describe('.quantile', () => it('works', function () {\n            expect(getVal(tpl.quantile(0)(['trials'])))\n                .toBe(95);\n            expect(getVal(tpl.quantile(0.1)(['trials'])))\n                .toBe(98.5);\n            expect(getVal(tpl.quantile(0.25)(['trials'])))\n                .toBe(98.5);\n            expect(getVal(tpl.quantile(1 / 3)(['trials'])))\n                .toBe(102);\n            return expect(getVal(tpl.quantile(1)(['trials'])))\n                .toBe(112);\n        }));\n\n        describe('.var', () => it('works', () => expect(getVal(tpl.var()(['trials'])))\n            .toBe(48.666666666666686)));\n\n        describe('.stdev', () => it('works', () => expect(getVal(tpl.stdev()(['trials'])))\n            .toBe(6.976149845485451)));\n\n        return describe('.sumOverSum', () => it('works', () => expect(getVal(tpl.sumOverSum()(['successes', 'trials'])))\n            .toBe((12 + 25 + 30 + 14) / (95 + 102 + 103 + 112))));\n    });\n\n    describe('.naturalSort()', function () {\n        const {\n            naturalSort,\n        } = $.pivotUtilities;\n\n        const sortedArr = [\n            null, NaN,\n            -Infinity, '-Infinity', -3, '-3', -2, '-2', -1, '-1',\n            0, '2e-1', 1, '01', '1', 2, '002', '002e0', '02', '2', '2e-0',\n            3, 10, '10', '11', '12', '1e2', '112', Infinity, 'Infinity',\n            '1a', '2a', '12a', '20a',\n            'A', 'A', 'NaN', 'a', 'a',\n            'a01', 'a012', 'a02', 'a1', 'a2', 'a12', 'a12', 'a21', 'a21',\n            'b', 'c', 'd', 'null',\n        ];\n\n        return it('sorts naturally (null, NaN, numbers & numbery strings, Alphanum for text strings)', () => expect(sortedArr.slice().sort(naturalSort))\n            .toEqual(sortedArr));\n    });\n\n    describe('.sortAs()', function () {\n        const {\n            sortAs,\n        } = $.pivotUtilities;\n\n        it('sorts with unknown values sorted at the end', () => expect([5, 2, 3, 4, 1].sort(sortAs([4, 3, 2])))\n            .toEqual([4, 3, 2, 1, 5]));\n\n        return it('sorts lowercase after uppercase', () => expect(['Ab', 'aA', 'aa', 'ab'].sort(sortAs(['Ab', 'Aa'])))\n            .toEqual(['Ab', 'ab', 'aa', 'aA']));\n    });\n\n    describe('.numberFormat()', function () {\n        const {\n            numberFormat,\n        } = $.pivotUtilities;\n\n        it('formats numbers', function () {\n            const nf = numberFormat();\n            return expect(nf(1234567.89123456))\n                .toEqual('1,234,567.89');\n        });\n\n        it('formats booleans', function () {\n            const nf = numberFormat();\n            return expect(nf(true))\n                .toEqual('1.00');\n        });\n\n        it('formats numbers in strings', function () {\n            const nf = numberFormat();\n            return expect(nf('1234567.89123456'))\n                .toEqual('1,234,567.89');\n        });\n\n        it('doesn\\'t formats strings', function () {\n            const nf = numberFormat();\n            return expect(nf('hi there'))\n                .toEqual('');\n        });\n\n        it('doesn\\'t formats objects', function () {\n            const nf = numberFormat();\n            return expect(nf({ a: 1 }))\n                .toEqual('');\n        });\n\n        it('formats percentages', function () {\n            const nf = numberFormat({ scaler: 100, suffix: '%' });\n            return expect(nf(0.12345))\n                .toEqual('12.35%');\n        });\n\n        it('adds separators', function () {\n            const nf = numberFormat({ thousandsSep: 'a', decimalSep: 'b' });\n            return expect(nf(1234567.89123456))\n                .toEqual('1a234a567b89');\n        });\n\n        it('adds prefixes and suffixes', function () {\n            const nf = numberFormat({ prefix: 'a', suffix: 'b' });\n            return expect(nf(1234567.89123456))\n                .toEqual('a1,234,567.89b');\n        });\n\n        return it('scales and rounds', function () {\n            const nf = numberFormat({ digitsAfterDecimal: 3, scaler: 1000 });\n            return expect(nf(1234567.89123456))\n                .toEqual('1,234,567,891.235');\n        });\n    });\n\n    return describe('.derivers', function () {\n        describe('.dateFormat()', function () {\n            const df = $.pivotUtilities.derivers.dateFormat('x', 'abc % %% %%% %a %y %m %n %d %w %x %H %M %S', true);\n\n            it('formats date objects', () => expect(df({ x: new Date('2015-01-02T23:43:11Z') }))\n                .toBe('abc % %% %%% %a 2015 01 Jan 02 Fri 5 23 43 11'));\n\n            return it('formats input parsed by Date.parse()', function () {\n                expect(df({ x: '2015-01-02T23:43:11Z' }))\n                    .toBe('abc % %% %%% %a 2015 01 Jan 02 Fri 5 23 43 11');\n\n                return expect(df({ x: 'bla' }))\n                    .toBe('');\n            });\n        });\n\n        return describe('.bin()', function () {\n            const binner = $.pivotUtilities.derivers.bin('x', 10);\n\n            it('bins numbers', function () {\n                expect(binner({ x: 11 }))\n                    .toBe(10);\n\n                expect(binner({ x: 9 }))\n                    .toBe(0);\n\n                return expect(binner({ x: 111 }))\n                    .toBe(110);\n            });\n\n            it('bins booleans', () => expect(binner({ x: true }))\n                .toBe(0));\n\n            it('bins negative numbers', () => expect(binner({ x: -12 }))\n                .toBe(-10));\n\n            it('doesn\\'t bin strings', () => expect(binner({ x: 'a' }))\n                .toBeNaN());\n\n            return it('doesn\\'t bin objects', () => expect(binner({ x: { a: 1 } }))\n                .toBeNaN());\n        });\n    });\n});\n"]}