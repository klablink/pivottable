{"version":3,"sources":["export_renderers.js"],"names":["$","pivotUtilities","export_renderers","TSV Export","pivotData","opts","extend","localeStrings","r","rowKeys","getRowKeys","colKeys","length","push","getColKeys","rowAttrs","result","colAttrs","row","_i","_Array$from","Array","from","rowAttr","aggregatorName","_i2","_Array$from2","colKey","join","_i3","_Array$from3","rowKey","_i4","_Array$from4","_i5","_Array$from5","agg","getAggregator","value","text","_i6","_Array$from6","css","width","window","height","jQuery"],"mappings":"aAUA,CAAA,SAACA,GAAKA,EAAEC,eAAeC,iBAAmB,CAAEC,aAAY,SAACC,EAAWC,GAIhEA,EAAOL,EAAEM,OAAO,CAAA,EAAM,GAFL,CAACC,cAAe,EAAE,EAECF,CAAI,EAgBxC,IAnBA,IAAYG,EAKNC,EAAUL,EAAUM,WAAW,EAE/BC,GADiB,IAAnBF,EAAQG,QAAgBH,EAAQI,KAAK,EAAE,EAC3BT,EAAUU,WAAW,GAGjCC,GAFmB,IAAnBJ,EAAQC,QAAgBD,EAAQE,KAAK,EAAE,EAGvCT,EADAW,UAMEC,GAFFZ,EADAa,SAGW,IAEXC,EAAM,GACVC,EAAA,EAAAC,EAAoBC,MAAMC,KAAKP,CAAQ,EAACI,EAAAC,EAAAR,OAAAO,CAAA,GAAE,CAArC,IAAII,EAAOH,EAAAD,GACZD,EAAIL,KAAKU,CAAO,CACpB,CACA,GAAwB,IAAnBZ,EAAQC,QAAwC,IAAtBD,EAAQ,GAAGC,OACtCM,EAAIL,KAAKT,EAAUoB,cAAc,OAEjC,IAAA,IAAAC,EAAA,EAAAC,EAAeL,MAAMC,KAAKX,CAAO,EAACc,EAAAC,EAAAd,OAAAa,CAAA,GAA7BE,EAAMD,EAAAD,GACPP,EAAIL,KAAKc,EAAOC,KAAK,GAAG,CAAC,EAIjCZ,EAAOH,KAAKK,CAAG,EAEf,IAAA,IAAAW,EAAA,EAAAC,EAAmBT,MAAMC,KAAKb,CAAO,EAACoB,EAAAC,EAAAlB,OAAAiB,CAAA,GAAE,CAEpC,IAFC,IAAIE,EAAMD,EAAAD,GACXX,EAAM,GACNc,EAAA,EAAAC,EAAUZ,MAAMC,KAAKS,CAAM,EAACC,EAAAC,EAAArB,OAAAoB,CAAA,GAAvBxB,EAACyB,EAAAD,GACFd,EAAIL,KAAKL,CAAC,EAGd,IAAA,IAAA0B,EAAA,EAAAC,EAAed,MAAMC,KAAKX,CAAO,EAACuB,EAAAC,EAAAvB,OAAAsB,CAAA,GAAE,CAChC,IADCP,EAAMQ,EAAAD,GACHE,EAAMhC,EAAUiC,cAAcN,EAAQJ,CAAM,EAC7B,MAAfS,EAAIE,MAAM,EACVpB,EAAIL,KAAKuB,EAAIE,MAAM,CAAC,EAEpBpB,EAAIL,KAAK,EAAE,CAEnB,CACAG,EAAOH,KAAKK,CAAG,CACnB,CAEA,IADA,IAAIqB,EAAO,GACXC,EAAA,EAAAC,EAAUpB,MAAMC,KAAKN,CAAM,EAACwB,EAAAC,EAAA7B,OAAA4B,CAAA,GACxBD,IADC/B,EAACiC,EAAAD,IACQZ,KAAK,IAAI,EAAE,KAGzB,OAAQ5B,EAAE,YAAY,EAAEuC,KAAKA,CAAI,EAAEG,IAAI,CAC/BC,MAAQ3C,EAAE4C,MAAM,EAAED,MAAM,EAAI,EAAK,KACjCE,OAAS7C,EAAE4C,MAAM,EAAEC,OAAO,EAAI,EAAK,IAAI,CAAC,CACpD,CACA,CAAC,EAAEC,MAAM","file":"export_renderers.min.js","sourcesContent":["// TODO: This file was created by bulk-decaffeinate.\n// Sanity-check the conversion and remove this comment.\n/*\n * decaffeinate suggestions:\n * DS101: Remove unnecessary use of Array.from\n * DS102: Remove unnecessary code created because of implicit returns\n * DS207: Consider shorter variations of null checks\n * Full docs: https://github.com/decaffeinate/decaffeinate/blob/main/docs/suggestions.md\n */\n\n($ => $.pivotUtilities.export_renderers = { \"TSV Export\"(pivotData, opts) {\n    let colKey, r;\n    const defaults = {localeStrings: {}};\n\n    opts = $.extend(true, {}, defaults, opts);\n\n    const rowKeys = pivotData.getRowKeys();\n    if (rowKeys.length === 0) { rowKeys.push([]); }\n    const colKeys = pivotData.getColKeys();\n    if (colKeys.length === 0) { colKeys.push([]); }\n    const {\n        rowAttrs\n    } = pivotData;\n    const {\n        colAttrs\n    } = pivotData;\n\n    const result = [];\n\n    let row = [];\n    for (var rowAttr of Array.from(rowAttrs)) {\n        row.push(rowAttr);\n    }\n    if ((colKeys.length === 1) && (colKeys[0].length === 0)) {\n        row.push(pivotData.aggregatorName);\n    } else {\n        for (colKey of Array.from(colKeys)) {\n            row.push(colKey.join(\"-\"));\n        }\n    }\n\n    result.push(row);\n\n    for (var rowKey of Array.from(rowKeys)) {\n        row = [];\n        for (r of Array.from(rowKey)) {\n            row.push(r);\n        }\n\n        for (colKey of Array.from(colKeys)) {\n            var agg = pivotData.getAggregator(rowKey, colKey);\n            if (agg.value() != null) {\n                row.push(agg.value());\n            } else {\n                row.push(\"\");\n            }\n        }\n        result.push(row);\n    }\n    let text = \"\";\n    for (r of Array.from(result)) {\n        text += r.join(\"\\t\")+\"\\n\";\n    }\n\n    return  $(\"<textarea>\").text(text).css({\n            width: ($(window).width() / 2) + \"px\",\n            height: ($(window).height() / 2) + \"px\"});\n}\n})(jQuery);\n"]}