{"version":3,"sources":["export_renderers.js"],"names":["$","pivotUtilities","export_renderers","TSV Export","pivotData","opts","let","colKey","r","extend","localeStrings","rowAttr","rowKey","rowKeys","getRowKeys","colKeys","length","push","getColKeys","rowAttrs","result","row","aggregatorName","join","agg","getAggregator","value","text","css","width","window","height","jQuery"],"mappings":"CAACA,GAAKA,EAAEC,eAAeC,iBAAmB,CAAEC,aAAaC,EAAWC,GAChEC,IAAIC,EAAQC,EAGZH,EAAOL,EAAES,OAAO,CAAA,EAAM,GAFL,CAACC,cAAe,EAAE,EAECL,CAAI,EAFxC,IAkBSM,EAaAC,EA3BHC,EAAUT,EAAUU,WAAW,EAE/BC,GADiB,IAAnBF,EAAQG,QAAgBH,EAAQI,KAAK,EAAE,EAC3Bb,EAAUc,WAAW,GAGjCC,GAFmB,IAAnBJ,EAAQC,QAAgBD,EAAQE,KAAK,EAAE,EAGvCb,GAAJ,SACM,GAEFA,EAEEgB,EAAS,GAEfd,IAAIe,EAAM,GACV,IAASV,KAAWQ,EAChBE,EAAIJ,KAAKN,CAAO,EAEpB,GAAwB,IAAnBI,EAAQC,QAAwC,IAAtBD,EAAQ,GAAGC,OACtCK,EAAIJ,KAAKb,EAAUkB,cAAc,OAEjC,IAAKf,KAAUQ,EACXM,EAAIJ,KAAKV,EAAOgB,KAAK,GAAG,CAAC,EAIjCH,EAAOH,KAAKI,CAAG,EAEf,IAAST,KAAUC,EAAS,CACxBQ,EAAM,GACN,IAAKb,KAAKI,EACNS,EAAIJ,KAAKT,CAAC,EAGd,IAAKD,KAAUQ,EAAS,CACpB,IAAMS,EAAMpB,EAAUqB,cAAcb,EAAQL,CAAM,EAC/B,MAAfiB,EAAIE,MAAM,EACVL,EAAIJ,KAAKO,EAAIE,MAAM,CAAC,EAEpBL,EAAIJ,KAAK,EAAE,CAEnB,CACAG,EAAOH,KAAKI,CAAG,CACnB,CACAf,IAAIqB,EAAO,GACX,IAAKnB,KAAKY,EACNO,GAAQnB,EAAEe,KAAK,IAAI,EAAE,KAGzB,OAAQvB,EAAE,YAAY,EAAE2B,KAAKA,CAAI,EAAEC,IAAI,CAC/BC,MAAQ7B,EAAE8B,MAAM,EAAED,MAAM,EAAI,EAAK,KACjCE,OAAS/B,EAAE8B,MAAM,EAAEC,OAAO,EAAI,EAAK,IAAI,CAAC,CACpD,CACA,GAAGC,MAAM","file":"export_renderers.min.js","sourcesContent":["($ => $.pivotUtilities.export_renderers = { 'TSV Export'(pivotData, opts) {\n    let colKey, r;\n    const defaults = {localeStrings: {}};\n\n    opts = $.extend(true, {}, defaults, opts);\n\n    const rowKeys = pivotData.getRowKeys();\n    if (rowKeys.length === 0) { rowKeys.push([]); }\n    const colKeys = pivotData.getColKeys();\n    if (colKeys.length === 0) { colKeys.push([]); }\n    const {\n        rowAttrs\n    } = pivotData;\n    const {\n        colAttrs\n    } = pivotData;\n\n    const result = [];\n\n    let row = [];\n    for (let rowAttr of rowAttrs) {\n        row.push(rowAttr);\n    }\n    if ((colKeys.length === 1) && (colKeys[0].length === 0)) {\n        row.push(pivotData.aggregatorName);\n    } else {\n        for (colKey of colKeys) {\n            row.push(colKey.join('-'));\n        }\n    }\n\n    result.push(row);\n\n    for (let rowKey of rowKeys) {\n        row = [];\n        for (r of rowKey) {\n            row.push(r);\n        }\n\n        for (colKey of colKeys) {\n            const agg = pivotData.getAggregator(rowKey, colKey);\n            if (agg.value() != null) {\n                row.push(agg.value());\n            } else {\n                row.push('');\n            }\n        }\n        result.push(row);\n    }\n    let text = '';\n    for (r of result) {\n        text += r.join('\\t')+'\\n';\n    }\n\n    return  $('<textarea>').text(text).css({\n            width: ($(window).width() / 2) + 'px',\n            height: ($(window).height() / 2) + 'px'});\n}\n})(jQuery);\n"]}