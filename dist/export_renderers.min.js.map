{"version":3,"sources":["export_renderers.coffee","export_renderers.min.js"],"names":["callWithJQuery","pivotModule","exports","module","require","define","amd","jQuery","$","exportFile","content","filename","type","a","file","url","Blob","window","navigator","msSaveOrOpenBlob","document","createElement","URL","createObjectURL","href","download","body","appendChild","click","setTimeout","removeChild","revokeObjectURL","pivotUtilities","export_renderers","TSV Export","pivotData","opts","agg","colAttrs","colKey","colKeys","defaults","i","j","k","l","len","len1","len2","len3","len4","len5","m","n","r","result","row","rowAttr","rowAttrs","rowKey","rowKeys","text","localeStrings","extend","getRowKeys","length","push","getColKeys","aggregatorName","join","getAggregator","value","css","width","height","call","this"],"mappings":"CAAA,WAAA,GAAAA,IAAAA,EAAiB,SAACC,GACd,MAAqB,gBAAXC,UAAyC,gBAAVC,QACrCF,EAAYG,QAAQ,WACC,kBAAVC,SAAyBA,OAAOC,IAC3CD,QAAQ,UAAWJ,GAGnBA,EAAYM,UAEL,SAACC,GAEZ,GAAAC,ECwBA,ODxBAA,GAAa,SAACC,EAASC,EAAUC,GAC7B,GAAAC,GAAAC,EAAAC,CACA,OADAD,GAAO,GAAIE,OAAMN,IAAWE,KAAMA,IAC/BK,OAAOC,UAAUC,iBAChBF,OAAOC,UAAUC,iBAAiBL,EAAMH,IAExCE,EAAIO,SAASC,cAAc,KAC3BN,EAAMO,IAAIC,gBAAgBT,GAC1BD,EAAEW,KAAOT,EACTF,EAAEY,SAAWd,EACbS,SAASM,KAAKC,YAAYd,GAC1BA,EAAEe,QACFC,WAAW,WCSb,MDRMT,UAASM,KAAKI,YAAYjB,GAC1BI,OAAOK,IAAIS,gBAAgBhB,IAC7B,KAEVP,EAAEwB,eAAeC,kBAAmBC,aAAc,SAACC,EAAWC,GAC1D,GAAAC,GAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,CAcA,KAdApB,GAAWqB,kBAEX1B,EAAO5B,EAAEuD,QAAO,KAAUtB,EAAUL,GAEpCwB,EAAUzB,EAAU6B,aACiB,IAAlBJ,EAAQK,QAA3BL,EAAQM,SACR1B,EAAUL,EAAUgC,aACiB,IAAlB3B,EAAQyB,QAA3BzB,EAAQ0B,SACRR,EAAWvB,EAAUuB,SACrBpB,EAAWH,EAAUG,SAErBiB,KAEAC,KACAd,EAAA,EAAAI,EAAAY,EAAAO,OAAAvB,EAAAI,EAAAJ,ICaEe,EAAUC,EAAShB,GDZjBc,EAAIU,KAAKT,EACb,IAAqB,IAAlBjB,EAAQyB,QAAqC,IAArBzB,EAAQ,GAAGyB,OAClCT,EAAIU,KAAK/B,EAAUiC,oBAEnB,KAAAzB,EAAA,EAAAI,EAAAP,EAAAyB,OAAAtB,EAAAI,EAAAJ,ICeAJ,EAASC,EAAQG,GDdba,EAAIU,KAAK3B,EAAO8B,KAAK,KAI7B,KAFAd,EAAOW,KAAKV,GAEZZ,EAAA,EAAAI,EAAAY,EAAAK,OAAArB,EAAAI,EAAAJ,IAAA,CAEI,ICcFe,EAASC,EAAQhB,GDffY,KACAX,EAAA,EAAAI,EAAAU,EAAAM,OAAApB,EAAAI,EAAAJ,ICiBAS,EAAIK,EAAOd,GDhBPW,EAAIU,KAAKZ,EAEb,KAAAF,EAAA,EAAAF,EAAAV,EAAAyB,OAAAb,EAAAF,EAAAE,ICkBAb,EAASC,EAAQY,GDjBbf,EAAMF,EAAUmC,cAAcX,EAAQpB,GACnC,MAAAF,EAAAkC,QACCf,EAAIU,KAAK7B,EAAIkC,SAEbf,EAAIU,KAAK,GACjBX,GAAOW,KAAKV,GAEhB,IADAK,EAAO,GACPR,EAAA,EAAAF,EAAAI,EAAAU,OAAAZ,EAAAF,EAAAE,ICsBEC,EAAIC,EAAOF,GDrBTQ,GAAQP,EAAEe,KAAK,MAAM,IAIzB,OAFA5D,GAAWoD,EAAMzB,EAAKzB,UAAY,iBAAkB,YAE5CH,EAAE,cAAcqD,KAAKA,GAAMW,KAC3BC,MAAQjE,EAAES,QAAQwD,QAAU,EAAK,KACjCC,OAASlE,EAAES,QAAQyD,SAAW,EAAK,aC2BhDC,KAAKC","file":"export_renderers.min.js","sourcesContent":["callWithJQuery = (pivotModule) ->\n    if typeof exports is \"object\" and typeof module is \"object\" # CommonJS\n        pivotModule require(\"jquery\")\n    else if typeof define is \"function\" and define.amd # AMD\n        define [\"jquery\"], pivotModule\n    # Plain browser env\n    else\n        pivotModule jQuery\n\ncallWithJQuery ($) ->\n\n    exportFile = (content, filename, type) ->\n        file = new Blob([content], {type: type})\n        if window.navigator.msSaveOrOpenBlob\n            window.navigator.msSaveOrOpenBlob(file, filename)\n        else\n            a = document.createElement(\"a\")\n            url = URL.createObjectURL(file)\n            a.href = url\n            a.download = filename\n            document.body.appendChild(a)\n            a.click()\n            setTimeout(->\n                document.body.removeChild(a)\n                window.URL.revokeObjectURL(url)\n            , 0)\n\n    $.pivotUtilities.export_renderers = \"TSV Export\": (pivotData, opts) ->\n        defaults = localeStrings: {}\n\n        opts = $.extend(true, {}, defaults, opts)\n\n        rowKeys = pivotData.getRowKeys()\n        rowKeys.push [] if rowKeys.length == 0\n        colKeys = pivotData.getColKeys()\n        colKeys.push [] if colKeys.length == 0\n        rowAttrs = pivotData.rowAttrs\n        colAttrs = pivotData.colAttrs\n\n        result = []\n\n        row = []\n        for rowAttr in rowAttrs\n            row.push rowAttr\n        if colKeys.length == 1 and colKeys[0].length == 0\n            row.push pivotData.aggregatorName\n        else\n            for colKey in colKeys\n                row.push colKey.join(\"-\")\n\n        result.push row\n\n        for rowKey in rowKeys\n            row = []\n            for r in rowKey\n                row.push r\n\n            for colKey in colKeys\n                agg = pivotData.getAggregator(rowKey, colKey)\n                if agg.value()?\n                    row.push agg.value()\n                else\n                    row.push \"\"\n            result.push row\n        text = \"\"\n        for r in result\n            text += r.join(\"\\t\")+\"\\n\"\n\n        exportFile(text, opts.filename || \"pivottable.tsv\", \"text/tsv\")\n\n        return  $(\"<textarea>\").text(text).css(\n                width: ($(window).width() / 2) + \"px\",\n                height: ($(window).height() / 2) + \"px\")\n","(function() {\n  var callWithJQuery;\n\n  callWithJQuery = function(pivotModule) {\n    if (typeof exports === \"object\" && typeof module === \"object\") {\n      return pivotModule(require(\"jquery\"));\n    } else if (typeof define === \"function\" && define.amd) {\n      return define([\"jquery\"], pivotModule);\n    } else {\n      return pivotModule(jQuery);\n    }\n  };\n\n  callWithJQuery(function($) {\n    var exportFile;\n    exportFile = function(content, filename, type) {\n      var a, file, url;\n      file = new Blob([content], {\n        type: type\n      });\n      if (window.navigator.msSaveOrOpenBlob) {\n        return window.navigator.msSaveOrOpenBlob(file, filename);\n      } else {\n        a = document.createElement(\"a\");\n        url = URL.createObjectURL(file);\n        a.href = url;\n        a.download = filename;\n        document.body.appendChild(a);\n        a.click();\n        return setTimeout(function() {\n          document.body.removeChild(a);\n          return window.URL.revokeObjectURL(url);\n        }, 0);\n      }\n    };\n    return $.pivotUtilities.export_renderers = {\n      \"TSV Export\": function(pivotData, opts) {\n        var agg, colAttrs, colKey, colKeys, defaults, i, j, k, l, len, len1, len2, len3, len4, len5, m, n, r, result, row, rowAttr, rowAttrs, rowKey, rowKeys, text;\n        defaults = {\n          localeStrings: {}\n        };\n        opts = $.extend(true, {}, defaults, opts);\n        rowKeys = pivotData.getRowKeys();\n        if (rowKeys.length === 0) {\n          rowKeys.push([]);\n        }\n        colKeys = pivotData.getColKeys();\n        if (colKeys.length === 0) {\n          colKeys.push([]);\n        }\n        rowAttrs = pivotData.rowAttrs;\n        colAttrs = pivotData.colAttrs;\n        result = [];\n        row = [];\n        for (i = 0, len = rowAttrs.length; i < len; i++) {\n          rowAttr = rowAttrs[i];\n          row.push(rowAttr);\n        }\n        if (colKeys.length === 1 && colKeys[0].length === 0) {\n          row.push(pivotData.aggregatorName);\n        } else {\n          for (j = 0, len1 = colKeys.length; j < len1; j++) {\n            colKey = colKeys[j];\n            row.push(colKey.join(\"-\"));\n          }\n        }\n        result.push(row);\n        for (k = 0, len2 = rowKeys.length; k < len2; k++) {\n          rowKey = rowKeys[k];\n          row = [];\n          for (l = 0, len3 = rowKey.length; l < len3; l++) {\n            r = rowKey[l];\n            row.push(r);\n          }\n          for (m = 0, len4 = colKeys.length; m < len4; m++) {\n            colKey = colKeys[m];\n            agg = pivotData.getAggregator(rowKey, colKey);\n            if (agg.value() != null) {\n              row.push(agg.value());\n            } else {\n              row.push(\"\");\n            }\n          }\n          result.push(row);\n        }\n        text = \"\";\n        for (n = 0, len5 = result.length; n < len5; n++) {\n          r = result[n];\n          text += r.join(\"\\t\") + \"\\n\";\n        }\n        exportFile(text, opts.filename || \"pivottable.tsv\", \"text/tsv\");\n        return $(\"<textarea>\").text(text).css({\n          width: ($(window).width() / 2) + \"px\",\n          height: ($(window).height() / 2) + \"px\"\n        });\n      }\n    };\n  });\n\n}).call(this);\n\n//# sourceMappingURL=export_renderers.js.map\n"]}