{"version":3,"sources":["pivot.js"],"names":["$","expandWithSpan","cell","rows","keys","nth","i","table","closest","span","dft","Math","max","this","aggregator","length","_ref","_span","change","object","parentKeysIndices","parent","p","getHeader","expandRowCol","numberFormat","opts","extend","digitsAfterDecimal","scaler","thousandsSep","decimalSep","prefix","suffix","x","isNaN","isFinite","result","nStr","split","x1","x2","rgx","test","replace","toFixed","usFmt","usFmtInt","usFmtPct","aggregatorTemplates","count","formatter","data","rowKey","colKey","push","value","format","uniques","fn","attr","_slicedToArray","arguments","undefined","uniq","record","includes","numInputs","sum","parseFloat","extremes","mode","val","sorter","getSort","sorters","quantile","q","vals","sort","a","b","floor","ceil","runningStat","ddof","n","m","s","m_new","sqrt","sumOverSum","_ref13","num","denom","sumNum","sumDenom","sumOverSumBound80","upper","_ref15","sign","fractionOf","wrapped","type","_len","Array","_key","selector","total","row","col","inner","apply","_toConsumableArray","id","agg","getAggregator","concat","makeAggregators","fmt","fmtInt","fmtPct","Count","Count Unique Values","countUnique","List Unique Values","listUnique","Sum","Integer Sum","Average","average","Median","median","Sample Variance","var","Sample Standard Deviation","stdev","Minimum","min","Maximum","First","first","Last","last","Sum over Sum","80% Upper Bound","80% Lower Bound","Sum as Fraction of Total","Sum as Fraction of Rows","Sum as Fraction of Columns","Count as Fraction of Total","Count as Fraction of Rows","Count as Fraction of Columns","f","naturalSort","join","defaultAggregators","renderers","Table","pivotTableRenderer","Table Barchart","barchart","Heatmap","heatmap","Row Heatmap","Col Heatmap","locales","en","formatters","formatInt","formatPct","localeStrings","renderError","computeError","uiRenderError","selectAll","selectNone","tooMany","filterResults","cancel","totals","vs","by","rendererLabel","valuesLabel","fieldsLabel","colsLabel","rowsLabel","groupsLabel","_i","_Object$keys","Object","zeroPad","number","substr","mthNamesEn","dayNamesEn","derivers","bin","binWidth","dateFormat","formatString","utcOutput","mthNames","dayNames","utc","date","Date","parse","rx","rd","rz","as","bs","nulls_first","nf","nas","nbs","String","match","a1","shift","b1","isFunction","filterByLength","filter","subarrays","array","map","d","slice","renameAggregators","aggregators","displayName","fromCharCode","toUpperCase","PivotData","input","_this","_classCallCheck","arrSort","bind","sortKeys","getColKeys","getRowKeys","isArray","aggregatorName","colAttrs","cols","rowAttrs","valAttrs","rowOrder","colOrder","derivedAttributes","tree","rowKeys","colKeys","rowTotals","colTotals","allTotal","sorted","aggregatorsLabel","grouping","rowGroupBefore","colGroupBefore","forEachRecord","processRecord","_createClass","key","criteria","callback","_this2","k","attrs","_step","sortersArr","_iterator","_createForOfIteratorHelper","done","err","e","_i2","_Object$keys2","comparison","_this3","v","r","c","all_keys","_step2","_this4","_iterator2","_step3","_iterator3","forEach","_loop","j","flatRowKey","result1","_loop2","flatColKey","tblCols","addRecord","isEmptyObject","left","_i3","_Object$keys3","compactRecord","_i4","_Object$keys4","_step4","_iterator4","each","text","Error","pivotData","clickCallback","getClickHandler","td","totalAggregator","compactLayout","rowValues","colValues","filters","_i5","_Object$keys5","_i6","_Object$keys6","rowExpandHandler","expandRowsGroupAfter","rowsExpandHandler","getExpandHandler","colsExpandHandler","document","createElement","spanSize","className","arr","noDraw","end","asc","len","end1","stop","asc1","thead","_i7","_Object$keys7","tr","parseInt","th","setAttribute","appendChild","textContent","onclick","getExpandAllHandler","_i8","_Object$keys8","innerHTML","_i9","_Object$keys9","tbody","lbl","colspan","_i10","_Object$keys10","_step5","_iterator5","_step6","_iterator6","_i11","_Object$keys11","rowGap","_i12","_Object$keys12","txt","colSpan","style","paddingLeft","_i13","_Object$keys13","_i14","_Object$keys14","pivotUtilities","sortAs","order","mapping","l_mapping","toLowerCase","pivot","inputOpts","locale","defaults","dataClass","renderer","rendererOptions","error","console","stack","html","error1","hasChildNodes","removeChild","lastChild","append","pivotUI","overwrite","_this5","hiddenAttributes","hiddenFromAggregators","hiddenFromDragDrop","menuLimit","exclusions","inclusions","unusedAttrsVertical","autoSortUnusedAttrs","onRefresh","showUI","multiple","parametersActive","itemsId","localeDefaults","existingOpts","attrValues","materializedInput","recordsProcessed","uiContainer","_i15","_Object$keys15","addClass","uiMenu","uiParameters","uiPivotContainer","uiButtonColumns","on","show","removeClass","hide","appendTo","uiButtonGroups","refresh","pvtRenderType","_i16","_Object$keys16","unused","shownAttributes","shownInAggregators","_i17","_shownAttributes","shownInDragDrop","_i18","_shownAttributes2","unusedAttrsVerticalAutoCutoff","_step7","_iterator7","unusedAttrsVerticalAutoOverride","_loop3","_Object$keys17","_i19","values","hasExcludedItem","valueList","controls","placeholder","class","accept_gen","accepted","real_filter","substring","trim","needle","accept","indexOf","find","prop","toggleClass","_step8","checkContainer","_iterator8","valueCount","filterItem","filterItemExcluded","closeFilterBox","attrElem","finalButtons","triangleLink","_$$position","currentTarget","position","top","css","divAggregator","remove","_i20","_Object$keys18","role","_step9","ordering","key_a_to_z","rowSymbol","colSymbol","next","value_a_to_z","value_z_to_a","rowOrderArrow","colOrderArrow","pvVals","pivotTable","initialRender","refreshDelayed","subopts","numInputsToProcess","aggVals","idx","_loop4","aggregatorType","labelAggregator","aggIdx","_typeof","initialVals","pvtVals","container","found","newDropdown","_i21","_shownInAggregators","_this6","instance","findIndex","splice","unusedAttrsContainer","not","pivotUIOptions","inclusionsInfo","rendererName","currentPivotData","children","setTimeout","_iterator9","inArray","_step10","_iterator10","sortable","update","ui","sender","connectWith","items","scope","heatmapper","forEachCell","_this7","colorScale","colorScaleGenerator","elem","numRows","numCols","_opts$heatmap","nonRed","round","_this8","barcharter","range","wrapper","height","bgColor","bBase","bottom","right","background-color","padding-left","padding-right","padding","padding-top","text-align","childIndex","el","prototype","call","parentNode","rowGetter","selecttion","showHide","getter","offset","childKeysIndices","hasClass","expandAll","level","expand","getAxis","levels","start","levelKeysIndices","trigger","up","initIndex","insertPoint","_old","prepend","parentIndex","rowSpan","handler","ev","target","jQuery"],"mappings":"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","file":"pivot.min.js","sourcesContent":["// TODO: This file was created by bulk-decaffeinate.\n// Sanity-check the conversion and remove this comment.\n// noinspection JSUnresolvedReference\n\n/*\n * decaffeinate suggestions:\n * DS201: Simplify complex destructure assignments\n * DS202: Simplify dynamic range loops\n * DS203: Remove `|| {}` from converted for-own loops\n * DS204: Change includes calls to have a more natural evaluation order\n * DS205: Consider reworking code to avoid use of IIFEs\n * DS207: Consider shorter variations of null checks\n * Full docs: https://github.com/decaffeinate/decaffeinate/blob/main/docs/suggestions.md\n */\n\n(function ($) {\n\n    const expandWithSpan = function (cell, rows, keys, nth) {\n        let parent;\n        const table = $(cell).closest('table');\n        const span = rows ? 'rowSpan' : 'colSpan';\n\n        const dft = !rows ? Math.max(1, this.aggregator.length) : 1;\n        [cell._span, cell[span]] = [cell[span], cell._span != null ? cell._span : dft];\n        const change = cell[span] - cell._span;\n\n        const object = parentKeysIndices(keys, nth);\n        for (let i in object) {\n            const p = object[i];\n            parent = (getHeader(table, rows, p))[0];\n            if (parent[span] === 1) {\n                parent._span += change;\n                break;\n            }\n            parent[span] += change;\n        }\n\n        return expandRowCol(cell, rows, keys, nth, parent);\n    };\n    /*\n        Utilities\n        */\n\n    let getExpandAllHandler;\n    const addSeparators = function (nStr, thousandsSep, decimalSep) {\n        nStr += '';\n        const x = nStr.split('.');\n        let x1 = x[0];\n        const x2 = x.length > 1 ? decimalSep + x[1] : '';\n        const rgx = /(\\d+)(\\d{3})/;\n        while (rgx.test(x1)) {\n            x1 = x1.replace(rgx, '$1' + thousandsSep + '$2');\n        }\n        return x1 + x2;\n    };\n\n    const numberFormat = function (opts) {\n        const defaults = {\n            digitsAfterDecimal: 2, scaler: 1,\n            thousandsSep: ',', decimalSep: '.',\n            prefix: '', suffix: '',\n        };\n        opts = $.extend({}, defaults, opts);\n        return function (x) {\n            if (isNaN(x) || !isFinite(x)) {\n                return '';\n            }\n            const result = addSeparators((opts.scaler * x).toFixed(opts.digitsAfterDecimal), opts.thousandsSep, opts.decimalSep);\n            return '' + opts.prefix + result + opts.suffix;\n        };\n    };\n\n    //aggregator templates default to US number formatting, but this is overrideable\n    const usFmt = numberFormat();\n    const usFmtInt = numberFormat({ digitsAfterDecimal: 0 });\n    const usFmtPct = numberFormat({ digitsAfterDecimal: 1, scaler: 100, suffix: '%' });\n\n    const aggregatorTemplates = {\n        count(formatter) {\n            if (formatter == null) {\n                formatter = usFmtInt;\n            }\n            return () => (function (data, rowKey, colKey) {\n                return {\n                    count: 0,\n                    push() {\n                        return this.count++;\n                    },\n                    value() {\n                        return this.count;\n                    },\n                    format: formatter,\n                };\n            });\n        },\n\n        uniques(fn, formatter) {\n            if (formatter == null) {\n                formatter = usFmtInt;\n            }\n            return function (...args) {\n                const [attr] = args[0];\n                return function (data, rowKey, colKey) {\n                    return {\n                        uniq: [],\n                        push(record) {\n                            if (!this.uniq.includes(record[attr])) {\n                                return this.uniq.push(record[attr]);\n                            }\n                        },\n                        value() {\n                            return fn(this.uniq);\n                        },\n                        format: formatter,\n                        numInputs: (attr != null) ? 0 : 1,\n                    };\n                };\n            };\n        },\n\n        sum(formatter) {\n            if (formatter == null) {\n                formatter = usFmt;\n            }\n            return function (...args) {\n                const [attr] = args[0];\n                return function (data, rowKey, colKey) {\n                    return {\n                        sum: 0,\n                        push(record) {\n                            if (!isNaN(parseFloat(record[attr]))) {\n                                return this.sum += parseFloat(record[attr]);\n                            }\n                        },\n                        value() {\n                            return this.sum;\n                        },\n                        format: formatter,\n                        numInputs: (attr != null) ? 0 : 1,\n                    };\n                };\n            };\n        },\n\n        extremes(mode, formatter) {\n            if (formatter == null) {\n                formatter = usFmt;\n            }\n            return function (...args) {\n                const [attr] = args[0];\n                return function (data, rowKey, colKey) {\n                    return {\n                        val: null,\n                        sorter: getSort(data != null ? data.sorters : undefined, attr),\n                        push(record) {\n                            let x = record[attr];\n                            if (['min', 'max'].includes(mode)) {\n                                x = parseFloat(x);\n                                if (!isNaN(x)) {\n                                    this.val = Math[mode](x, this.val != null ? this.val : x);\n                                }\n                            }\n                            if (mode === 'first') {\n                                if (this.sorter(x, this.val != null ? this.val : x) <= 0) {\n                                    this.val = x;\n                                }\n                            }\n                            if (mode === 'last') {\n                                if (this.sorter(x, this.val != null ? this.val : x) >= 0) {\n                                    return this.val = x;\n                                }\n                            }\n                        },\n                        value() {\n                            return this.val;\n                        },\n                        format(x) {\n                            if (isNaN(x)) {\n                                return x;\n                            } else {\n                                return formatter(x);\n                            }\n                        },\n                        numInputs: (attr != null) ? 0 : 1,\n                    };\n                };\n            };\n        },\n\n        quantile(q, formatter) {\n            if (formatter == null) {\n                formatter = usFmt;\n            }\n            return function (...args) {\n                const [attr] = args[0];\n                return function (data, rowKey, colKey) {\n                    return {\n                        vals: [],\n                        push(record) {\n                            const x = parseFloat(record[attr]);\n                            if (!isNaN(x)) {\n                                return this.vals.push(x);\n                            }\n                        },\n                        value() {\n                            if (this.vals.length === 0) {\n                                return null;\n                            }\n                            this.vals.sort((a, b) => a - b);\n                            const i = (this.vals.length - 1) * q;\n                            return (this.vals[Math.floor(i)] + this.vals[Math.ceil(i)]) / 2.0;\n                        },\n                        format: formatter,\n                        numInputs: (attr != null) ? 0 : 1,\n                    };\n                };\n            };\n        },\n\n        runningStat(mode, ddof, formatter) {\n            if (mode == null) {\n                mode = 'mean';\n            }\n            if (ddof == null) {\n                ddof = 1;\n            }\n            if (formatter == null) {\n                formatter = usFmt;\n            }\n            return function (...args) {\n                const [attr] = args[0];\n                return function (data, rowKey, colKey) {\n                    return {\n                        n: 0.0, m: 0.0, s: 0.0,\n                        push(record) {\n                            const x = parseFloat(record[attr]);\n                            if (isNaN(x)) {\n                                return;\n                            }\n                            this.n += 1.0;\n                            if (this.n === 1.0) {\n                                return this.m = x;\n                            } else {\n                                const m_new = this.m + ((x - this.m) / this.n);\n                                this.s = this.s + ((x - this.m) * (x - m_new));\n                                return this.m = m_new;\n                            }\n                        },\n                        value() {\n                            if (mode === 'mean') {\n                                if (this.n === 0) {\n                                    return 0 / 0;\n                                } else {\n                                    return this.m;\n                                }\n                            }\n                            if (this.n <= ddof) {\n                                return 0;\n                            }\n                            switch (mode) {\n                                case 'var':\n                                    return this.s / (this.n - ddof);\n                                case 'stdev':\n                                    return Math.sqrt(this.s / (this.n - ddof));\n                            }\n                        },\n                        format: formatter,\n                        numInputs: (attr != null) ? 0 : 1,\n                    };\n                };\n            };\n        },\n\n        sumOverSum(formatter) {\n            if (formatter == null) {\n                formatter = usFmt;\n            }\n            return function (...args) {\n                const [num, denom] = args[0];\n                return function (data, rowKey, colKey) {\n                    return {\n                        sumNum: 0,\n                        sumDenom: 0,\n                        push(record) {\n                            if (!isNaN(parseFloat(record[num]))) {\n                                this.sumNum += parseFloat(record[num]);\n                            }\n                            if (!isNaN(parseFloat(record[denom]))) {\n                                return this.sumDenom += parseFloat(record[denom]);\n                            }\n                        },\n                        value() {\n                            return this.sumNum / this.sumDenom;\n                        },\n                        format: formatter,\n                        numInputs: (num != null) && (denom != null) ? 0 : 2,\n                    };\n                };\n            };\n        },\n\n        sumOverSumBound80(upper, formatter) {\n            if (upper == null) {\n                upper = true;\n            }\n            if (formatter == null) {\n                formatter = usFmt;\n            }\n            return function (...args) {\n                const [num, denom] = args[0];\n                return function (data, rowKey, colKey) {\n                    return {\n                        sumNum: 0,\n                        sumDenom: 0,\n                        push(record) {\n                            if (!isNaN(parseFloat(record[num]))) {\n                                this.sumNum += parseFloat(record[num]);\n                            }\n                            if (!isNaN(parseFloat(record[denom]))) {\n                                return this.sumDenom += parseFloat(record[denom]);\n                            }\n                        },\n                        value() {\n                            const sign = upper ? 1 : -1;\n                            return ((0.821187207574908 / this.sumDenom) + (this.sumNum / this.sumDenom) + (1.2815515655446004 * sign *\n                                    Math.sqrt((0.410593603787454 / (this.sumDenom * this.sumDenom)) + ((this.sumNum * (1 - (this.sumNum / this.sumDenom))) / (this.sumDenom * this.sumDenom))))) /\n                                (1 + (1.642374415149816 / this.sumDenom));\n                        },\n                        format: formatter,\n                        numInputs: (num != null) && (denom != null) ? 0 : 2,\n                    };\n                };\n            };\n        },\n\n        fractionOf(wrapped, type, formatter) {\n            if (type == null) {\n                type = 'total';\n            }\n            if (formatter == null) {\n                formatter = usFmtPct;\n            }\n            return (...x) => (function (data, rowKey, colKey) {\n                return {\n                    selector: { total: [[], []], row: [rowKey, []], col: [[], colKey] }[type],\n                    inner: wrapped(...(x || []))(data, rowKey, colKey),\n                    push(record) {\n                        return this.inner.push(record);\n                    },\n                    format: formatter,\n                    value(id) {\n                        const agg = data.getAggregator(...([...this.selector, id] || []));\n                        return this.inner.value() / agg.inner.value();\n                    },\n                    numInputs: wrapped(...(x || []))().numInputs,\n                };\n            });\n        },\n    };\n\n    aggregatorTemplates.countUnique = f => aggregatorTemplates.uniques((x => x.length), f);\n    aggregatorTemplates.listUnique = s => aggregatorTemplates.uniques((x => x.sort(naturalSort).join(s)), (x => x));\n    aggregatorTemplates.max = f => aggregatorTemplates.extremes('max', f);\n    aggregatorTemplates.min = f => aggregatorTemplates.extremes('min', f);\n    aggregatorTemplates.first = f => aggregatorTemplates.extremes('first', f);\n    aggregatorTemplates.last = f => aggregatorTemplates.extremes('last', f);\n    aggregatorTemplates.median = f => aggregatorTemplates.quantile(0.5, f);\n    aggregatorTemplates.average = f => aggregatorTemplates.runningStat('mean', 1, f);\n    aggregatorTemplates.var = (ddof, f) => aggregatorTemplates.runningStat('var', ddof, f);\n    aggregatorTemplates.stdev = (ddof, f) => aggregatorTemplates.runningStat('stdev', ddof, f);\n\n    function makeAggregators(fmt, fmtInt, fmtPct) {\n        return {\n            'Count': aggregatorTemplates.count(fmtInt),\n            'Count Unique Values': aggregatorTemplates.countUnique(fmtInt),\n            'List Unique Values': aggregatorTemplates.listUnique(', '),\n            'Sum': aggregatorTemplates.sum(fmt),\n            'Integer Sum': aggregatorTemplates.sum(fmtInt),\n            'Average': aggregatorTemplates.average(fmt),\n            'Median': aggregatorTemplates.median(fmt),\n            'Sample Variance': aggregatorTemplates.var(1, fmt),\n            'Sample Standard Deviation': aggregatorTemplates.stdev(1, fmt),\n            'Minimum': aggregatorTemplates.min(fmt),\n            'Maximum': aggregatorTemplates.max(fmt),\n            'First': aggregatorTemplates.first(fmt),\n            'Last': aggregatorTemplates.last(fmt),\n            'Sum over Sum': aggregatorTemplates.sumOverSum(fmt),\n            '80% Upper Bound': aggregatorTemplates.sumOverSumBound80(true, fmt),\n            '80% Lower Bound': aggregatorTemplates.sumOverSumBound80(false, fmt),\n            'Sum as Fraction of Total': aggregatorTemplates.fractionOf(aggregatorTemplates.sum(), 'total', fmtPct),\n            'Sum as Fraction of Rows': aggregatorTemplates.fractionOf(aggregatorTemplates.sum(), 'row', fmtPct),\n            'Sum as Fraction of Columns': aggregatorTemplates.fractionOf(aggregatorTemplates.sum(), 'col', fmtPct),\n            'Count as Fraction of Total': aggregatorTemplates.fractionOf(aggregatorTemplates.count(), 'total', fmtPct),\n            'Count as Fraction of Rows': aggregatorTemplates.fractionOf(aggregatorTemplates.count(), 'row', fmtPct),\n            'Count as Fraction of Columns': aggregatorTemplates.fractionOf(aggregatorTemplates.count(), 'col', fmtPct),\n        };\n    }\n\n    //default aggregators & renderers use US naming and number formatting\n    const defaultAggregators = makeAggregators(usFmt, usFmtInt, usFmtPct);\n\n    const renderers = {\n        'Table'(data, opts) {\n            return pivotTableRenderer(data, opts);\n        },\n        'Table Barchart'(data, opts) {\n            return $(pivotTableRenderer(data, opts)).barchart();\n        },\n        'Heatmap'(data, opts) {\n            return $(pivotTableRenderer(data, opts)).heatmap('heatmap', opts);\n        },\n        'Row Heatmap'(data, opts) {\n            return $(pivotTableRenderer(data, opts)).heatmap('rowheatmap', opts);\n        },\n        'Col Heatmap'(data, opts) {\n            return $(pivotTableRenderer(data, opts)).heatmap('colheatmap', opts);\n        },\n    };\n\n    const locales = {\n        en: {\n            formatters: {\n                format: usFmt,\n                formatInt: usFmtInt,\n                formatPct: usFmtPct,\n            },\n            renderers,\n            localeStrings: {\n                renderError: 'An error occurred rendering the PivotTable results.',\n                computeError: 'An error occurred computing the PivotTable results.',\n                uiRenderError: 'An error occurred rendering the PivotTable UI.',\n                selectAll: 'Select All',\n                selectNone: 'Select None',\n                tooMany: '(too many to list)',\n                filterResults: 'Filter values',\n                apply: 'Apply',\n                cancel: 'Cancel',\n                totals: 'Totals', //for table renderer\n                vs: 'vs', //for gchart renderer\n                by: 'by', //for gchart renderer\n                rendererLabel: 'Renderer',\n                valuesLabel: 'Values',\n                fieldsLabel: 'Fields',\n                colsLabel: 'Columns',\n                rowsLabel: 'Rows',\n                groupsLabel: 'Groups',\n            },\n        },\n    };\n\n    for (const agg of Object.keys(defaultAggregators)) {\n        locales.en.localeStrings[agg] = agg;\n    }\n\n    //dateFormat deriver l10n requires month and day names to be passed in directly\n    const mthNamesEn = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n    const dayNamesEn = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n    const zeroPad = number => ('0' + number).substr(-2, 2);\n\n    const derivers = {\n        bin(col, binWidth) {\n            return record => record[col] - (record[col] % binWidth);\n        },\n        dateFormat(col, formatString, utcOutput, mthNames, dayNames) {\n            if (utcOutput == null) {\n                utcOutput = false;\n            }\n            if (mthNames == null) {\n                mthNames = mthNamesEn;\n            }\n            if (dayNames == null) {\n                dayNames = dayNamesEn;\n            }\n            const utc = utcOutput ? 'UTC' : '';\n            return function (record) { //thanks http://stackoverflow.com/a/12213072/112871\n                const date = new Date(Date.parse(record[col]));\n                if (isNaN(date)) {\n                    return '';\n                }\n                return formatString.replace(/%(.)/g, function (m, p) {\n                    switch (p) {\n                        case 'y':\n                            return date[`get${utc}FullYear`]();\n                        case 'm':\n                            return zeroPad(date[`get${utc}Month`]() + 1);\n                        case 'n':\n                            return mthNames[date[`get${utc}Month`]()];\n                        case 'd':\n                            return zeroPad(date[`get${utc}Date`]());\n                        case 'w':\n                            return dayNames[date[`get${utc}Day`]()];\n                        case 'x':\n                            return date[`get${utc}Day`]();\n                        case 'H':\n                            return zeroPad(date[`get${utc}Hours`]());\n                        case 'M':\n                            return zeroPad(date[`get${utc}Minutes`]());\n                        case 'S':\n                            return zeroPad(date[`get${utc}Seconds`]());\n                        default:\n                            return '%' + p;\n                    }\n                });\n            };\n        },\n    };\n\n    const rx = /(\\d+)|(\\D+)/g;\n    const rd = /\\d/;\n    const rz = /^0/;\n    const naturalSort = (as, bs, nulls_first) => {\n        //nulls first\n        if (nulls_first == null) {\n            nulls_first = true;\n        }\n        const nf = nulls_first ? 1 : -1;\n        if ((bs != null) && (as == null)) {\n            return -1 * nf;\n        }\n        if ((as != null) && (bs == null)) {\n            return 1 * nf;\n        }\n\n        //then raw NaNs\n        if ((typeof as === 'number') && isNaN(as)) {\n            return -1;\n        }\n        if ((typeof bs === 'number') && isNaN(bs)) {\n            return 1;\n        }\n\n        //numbers and numbery strings group together\n        const nas = +as;\n        const nbs = +bs;\n        if (nas < nbs) {\n            return -1;\n        }\n        if (nas > nbs) {\n            return 1;\n        }\n\n        //within that, true numbers before numbery strings\n        if ((typeof as === 'number') && (typeof bs !== 'number')) {\n            return -1;\n        }\n        if ((typeof bs === 'number') && (typeof as !== 'number')) {\n            return 1;\n        }\n        if ((typeof as === 'number') && (typeof bs === 'number')) {\n            return 0;\n        }\n\n        // 'Infinity' is a textual number, so less than 'A'\n        if (isNaN(nbs) && !isNaN(nas)) {\n            return -1;\n        }\n        if (isNaN(nas) && !isNaN(nbs)) {\n            return 1;\n        }\n\n        //finally, \"smart\" string sorting per http://stackoverflow.com/a/4373421/112871\n        let a = String(as);\n        let b = String(bs);\n        if (a === b) {\n            return 0;\n        }\n        if (!rd.test(a) || !rd.test(b)) {\n            return (a > b ? 1 : -1);\n        }\n\n        //special treatment for strings containing digits\n        a = a.match(rx); //create digits vs. non-digit chunks and iterate through\n        b = b.match(rx);\n        while (a.length && b.length) {\n            const a1 = a.shift();\n            const b1 = b.shift();\n            if (a1 !== b1) {\n                if (rd.test(a1) && rd.test(b1)) { //both are digit chunks\n                    return a1.replace(rz, '.0') - b1.replace(rz, '.0');\n                } else {\n                    return (a1 > b1 ? 1 : -1);\n                }\n            }\n        }\n        return a.length - b.length;\n    };\n\n    const sortAs = function (order) {\n        const mapping = {};\n        const l_mapping = {}; // sort lowercased keys similarly\n        for (let i in order) {\n            const x = order[i];\n            mapping[x] = i;\n            if (typeof x === 'string') {\n                l_mapping[x.toLowerCase()] = i;\n            }\n        }\n        return function (a, b) {\n            if ((mapping[a] != null) && (mapping[b] != null)) {\n                return mapping[a] - mapping[b];\n            } else if (mapping[a] != null) {\n                return -1;\n            } else if (mapping[b] != null) {\n                return 1;\n            } else if ((l_mapping[a] != null) && (l_mapping[b] != null)) {\n                return l_mapping[a] - l_mapping[b];\n            } else if (l_mapping[a] != null) {\n                return -1;\n            } else if (l_mapping[b] != null) {\n                return 1;\n            } else {\n                return naturalSort(a, b);\n            }\n        };\n    };\n\n    function getSort(sorters, attr) {\n        if (sorters != null) {\n            if ($.isFunction(sorters)) {\n                const sort = sorters(attr);\n                if ($.isFunction(sort)) {\n                    return sort;\n                }\n            } else if (sorters[attr] != null) {\n                return sorters[attr];\n            }\n        }\n        return naturalSort;\n    }\n\n    const filterByLength = (keys, length) => keys.filter(x => x.length === length);\n\n    const subarrays = array => array.map((d, i) => array.slice(0, i + 1));  // [1,2,3] => [[1], [1,2], [1,2,3]]\n\n    /*\n    Data Model class\n    */\n\n    class PivotData {\n        constructor(input, opts) {\n            this.arrSort = this.arrSort.bind(this);\n            this.sortKeys = this.sortKeys.bind(this);\n            this.getColKeys = this.getColKeys.bind(this);\n            this.getRowKeys = this.getRowKeys.bind(this);\n            this.getAggregator = this.getAggregator.bind(this);\n            if (opts == null) {\n                opts = {};\n            }\n            this.input = input;\n            if (!Array.isArray(opts.aggregator)) {\n                opts.aggregator = opts.aggregator != null ? opts.aggregator : aggregatorTemplates.count()();\n                opts.aggregator = [opts.aggregator];\n            }\n            this.aggregator = opts.aggregator != null ? opts.aggregator : [aggregatorTemplates.count()()];\n            this.aggregatorName = opts.aggregatorName != null ? opts.aggregatorName : 'Count';\n            this.colAttrs = opts.cols != null ? opts.cols : [];\n            this.rowAttrs = opts.rows != null ? opts.rows : [];\n            this.valAttrs = opts.vals != null ? opts.vals : [];\n            this.sorters = opts.sorters != null ? opts.sorters : {};\n            this.rowOrder = opts.rowOrder != null ? opts.rowOrder : 'key_a_to_z';\n            this.colOrder = opts.colOrder != null ? opts.colOrder : 'key_a_to_z';\n            this.derivedAttributes = opts.derivedAttributes != null ? opts.derivedAttributes : {};\n            this.filter = opts.filter != null ? opts.filter : (() => true);\n            this.tree = {};\n            this.rowKeys = [];\n            this.colKeys = [];\n            this.rowTotals = {};\n            this.colTotals = {};\n            this.allTotal = this.aggregator.map(agg => agg(this, [], []));\n            this.sorted = false;\n            this.aggregatorsLabel = opts.aggregatorsLabel != null ? opts.aggregatorsLabel : [];\n            this.grouping = opts.grouping != null ? opts.grouping : false;\n            this.rowGroupBefore = (opts.grouping != null ? opts.grouping.rowGroupBefore : undefined) != null ? (opts.grouping != null ? opts.grouping.rowGroupBefore : undefined) : true;\n            this.colGroupBefore = (opts.grouping != null ? opts.grouping.colGroupBefore : undefined) != null ? (opts.grouping != null ? opts.grouping.colGroupBefore : undefined) : false;\n\n            // iterate through input, accumulating data for cells\n            PivotData.forEachRecord(this.input, this.derivedAttributes, record => {\n                if (this.filter(record)) {\n                    return this.processRecord(record);\n                }\n            });\n        }\n\n        //can handle arrays or jQuery selections of tables\n        static forEachRecord(input, derivedAttributes, f) {\n            let addRecord;\n            if ($.isEmptyObject(derivedAttributes)) {\n                addRecord = f;\n            } else {\n                addRecord = function (record) {\n                    for (let k in derivedAttributes) {\n                        const v = derivedAttributes[k];\n                        const left = v(record);\n                        if (left != null) {\n                            record[k] = left;\n                        }\n                    }\n                    return f(record);\n                };\n            }\n\n            //if it's a function, have its calls us back\n            if ($.isFunction(input)) {\n                return input(addRecord);\n            } else if ($.isArray(input)) {\n                if ($.isArray(input[0])) { //array of arrays\n                    return (() => {\n                        const result = [];\n                        for (let i of Object.keys(input || {})) {\n                            const compactRecord = input[i];\n                            if (i > 0) {\n                                const record = {};\n                                for (let j of Object.keys(input[0] || {})) {\n                                    const k = input[0][j];\n                                    record[k] = compactRecord[j];\n                                }\n                                result.push(addRecord(record));\n                            }\n                        }\n                        return result;\n                    })();\n                } else { //array of objects\n                    return (() => {\n                        const result1 = [];\n                        for (let record of input) {\n                            result1.push(addRecord(record));\n                        }\n                        return result1;\n                    })();\n                }\n            } else if (input instanceof $) {\n                const tblCols = [];\n                $('thead > tr > th', input).each(function (i) {\n                    return tblCols.push($(this).text());\n                });\n                return $('tbody > tr', input).each(function (i) {\n                    const record = {};\n                    $('td', this).each(function (j) {\n                        return record[tblCols[j]] = $(this).text();\n                    });\n                    return addRecord(record);\n                });\n            } else {\n                throw new Error('unknown input format');\n            }\n        }\n\n        forEachMatchingRecord(criteria, callback) {\n            return PivotData.forEachRecord(this.input, this.derivedAttributes, record => {\n                if (!this.filter(record)) {\n                    return;\n                }\n                for (let k in criteria) {\n                    const v = criteria[k];\n                    if (v !== (record[k] != null ? record[k] : 'null')) {\n                        return;\n                    }\n                }\n                return callback(record);\n            });\n        }\n\n        arrSort(attrs, nulls_first) {\n\n            const sortersArr = [];\n            for (const a of attrs) {\n                sortersArr.push(getSort(this.sorters, a));\n            }\n\n            return function (a, b) {\n                for (let i of Object.keys(sortersArr || {})) {\n                    const sorter = sortersArr[i];\n                    const comparison = sorter(a[i], b[i], nulls_first);\n                    if (comparison !== 0) {\n                        return comparison;\n                    }\n                }\n                return 0;\n            };\n        }\n\n        sortKeys() {\n            if (!this.sorted) {\n                this.sorted = true;\n                const v = (r, c) => this.getAggregator(r, c).value();\n                switch (this.rowOrder) {\n                    case 'value_a_to_z':\n                        this.rowKeys.sort((a, b) => naturalSort(v(a, []), v(b, [])));\n                        break;\n                    case 'value_z_to_a':\n                        this.rowKeys.sort((a, b) => -naturalSort(v(a, []), v(b, [])));\n                        break;\n                    default:\n                        this.rowKeys.sort(this.arrSort(this.rowAttrs, this.rowGroupBefore));\n                }\n                switch (this.colOrder) {\n                    case 'value_a_to_z':\n                        return this.colKeys.sort((a, b) => naturalSort(v([], a), v([], b)));\n                    case 'value_z_to_a':\n                        return this.colKeys.sort((a, b) => -naturalSort(v([], a), v([], b)));\n                    default:\n                        return this.colKeys.sort(this.arrSort(this.colAttrs, this.colGroupBefore));\n                }\n            }\n        }\n\n        getColKeys(all_keys) {\n            if (all_keys == null) {\n                all_keys = false;\n            }\n            this.sortKeys();\n            if (all_keys) {\n                return this.colKeys;\n            } else {\n                return filterByLength(this.colKeys, this.colAttrs.length);\n            }\n        }\n\n        getRowKeys(all_keys) {\n            if (all_keys == null) {\n                all_keys = false;\n            }\n            this.sortKeys();\n            if (all_keys) {\n                return this.rowKeys;\n            } else {\n                return filterByLength(this.rowKeys, this.rowAttrs.length);\n            }\n        }\n\n        processRecord(record) { //this code is called in a tight loop\n            let x;\n            let colKeys = [];\n            let rowKeys = [];\n            for (x of this.colAttrs) {\n                colKeys.push(record[x] != null ? record[x] : 'null');\n            }\n            for (x of this.rowAttrs) {\n                rowKeys.push(record[x] != null ? record[x] : 'null');\n            }\n            colKeys = this.grouping && colKeys.length ? subarrays(colKeys) : [colKeys];\n            rowKeys = this.grouping && rowKeys.length ? subarrays(rowKeys) : [rowKeys];\n\n            this.aggregator.forEach((agg, id) => {\n                return this.allTotal[id].push(record);\n            });\n\n            const result = [];\n            for (let j in rowKeys) {\n                const rowKey = rowKeys[j];\n                const flatRowKey = rowKey.join(String.fromCharCode(0));\n\n                const result1 = [];\n                for (let i in colKeys) {\n                    const colKey = colKeys[i];\n                    const flatColKey = colKey.join(String.fromCharCode(0));\n\n                    if (rowKey.length !== 0) {\n                        if (!this.rowTotals[flatRowKey]) {\n                            this.rowKeys.push(rowKey);\n                            this.rowTotals[flatRowKey] = this.aggregator.map(agg => agg(this, rowKey, []));\n                        }\n                        this.rowTotals[flatRowKey].forEach((agg, id) => {\n                            if (!this.grouping || (colKey.length === 1)) {\n                                return agg.push(record);\n                            }\n                        });\n                    }\n\n                    if (colKey.length !== 0) {\n                        if (!this.colTotals[flatColKey]) {\n                            this.colKeys.push(colKey);\n                            this.colTotals[flatColKey] = this.aggregator.map(agg => agg(this, [], colKey));\n                        }\n                        this.colTotals[flatColKey].forEach((agg, id) => {\n                            if (!this.grouping || (rowKey.length === 1)) {\n                                return agg.push(record);\n                            }\n                        });\n                    }\n\n                    if ((colKey.length !== 0) && (rowKey.length !== 0)) {\n                        if (!this.tree[flatRowKey]) {\n                            this.tree[flatRowKey] = {};\n                        }\n                        if (!this.tree[flatRowKey][flatColKey]) {\n                            this.tree[flatRowKey][flatColKey] = this.aggregator.map(agg => agg(this, rowKey, colKey));\n                        }\n                        result1.push(this.tree[flatRowKey][flatColKey].forEach((agg, id) => agg.push(record)));\n                    } else {\n                        result1.push(undefined);\n                    }\n                }\n                result.push(result1);\n            }\n            return result;\n        }\n\n        getAggregator(rowKey, colKey, id) {\n            let agg;\n            if (id == null) {\n                id = 0;\n            }\n            const flatRowKey = rowKey.join(String.fromCharCode(0));\n            const flatColKey = colKey.join(String.fromCharCode(0));\n            if ((rowKey.length === 0) && (colKey.length === 0)) {\n                agg = this.allTotal[id];\n            } else if (rowKey.length === 0) {\n                agg = this.colTotals[flatColKey] && this.colTotals[flatColKey][id];\n            } else if (colKey.length === 0) {\n                agg = this.rowTotals[flatRowKey] && this.rowTotals[flatRowKey][id];\n            } else {\n                agg = this.tree[flatRowKey][flatColKey] && this.tree[flatRowKey][flatColKey][id];\n            }\n            return agg != null ? agg : {\n                value() {\n                    return null;\n                }, format() {\n                    return '';\n                },\n            };\n        }\n    }\n\n    const renameAggregators = (aggregators) => aggregators.map((agg, id) =>\n        (agg.displayName = String.fromCharCode(97 + id).toUpperCase()));\n\n    //expose these to the outside world\n    $.pivotUtilities = {\n        aggregatorTemplates, aggregators: defaultAggregators, renderers, derivers, locales,\n        naturalSort, numberFormat, sortAs, PivotData,\n    };\n\n    /*\n    Default Renderer for hierarchical table layout\n    */\n\n    function pivotTableRenderer(pivotData, opts) {\n\n        let agg, aggregator, colKey, getClickHandler, i, id, j, td, th, totalAggregator, tr, val, x;\n        const defaults = {\n            table: {\n                clickCallback: null,\n                rowTotals: true,\n                colTotals: true,\n            },\n            localeStrings: {\n                totals: 'Totals',\n            },\n        };\n\n        opts = $.extend(true, {}, defaults, opts);\n\n        const {\n            colAttrs,\n        } = pivotData;\n        const {\n            rowAttrs,\n        } = pivotData;\n        const rowKeys = pivotData.getRowKeys(true);\n        const colKeys = pivotData.getColKeys(true);\n\n        if (opts.table.clickCallback) {\n            getClickHandler = function (value, rowValues, colValues) {\n                let attr, i;\n                const filters = {};\n                for (i of Object.keys(colAttrs || {})) {\n                    attr = colAttrs[i];\n                    if (colValues[i] != null) {\n                        filters[attr] = colValues[i];\n                    }\n                }\n                for (i of Object.keys(rowAttrs || {})) {\n                    attr = rowAttrs[i];\n                    if (rowValues[i] != null) {\n                        filters[attr] = rowValues[i];\n                    }\n                }\n                return e => opts.table.clickCallback(e, value, filters, pivotData);\n            };\n        }\n\n        const compactLayout = (opts.table.compactLayout != null ? opts.table.compactLayout : true) && pivotData.grouping;\n        const rowExpandHandler = compactLayout ? expandRowCol : pivotData.rowGroupBefore ? expandWithSpan : expandRowsGroupAfter;\n\n        const rowsExpandHandler = getExpandHandler(rowKeys, true, rowExpandHandler.bind(pivotData));\n        const colsExpandHandler = getExpandHandler(colKeys, false, expandWithSpan.bind(pivotData));\n\n        //now actually build the outpu\n        const result = document.createElement('table');\n        result.className = 'pvtTable';\n\n        //helper function for setting row/col-span in pivotTableRenderer\n        const spanSize = function (arr, i, j) {\n            let x;\n            if (i !== 0) {\n                let asc, end;\n                let noDraw = true;\n                for (x = 0, end = j, asc = 0 <= end; asc ? x <= end : x >= end; asc ? x++ : x--) {\n                    if (arr[i - 1][x] !== arr[i][x]) {\n                        noDraw = false;\n                    }\n                }\n                if (noDraw) {\n                    return -1; //do not draw cell\n                }\n            }\n            let len = 0;\n            while ((i + len) < arr.length) {\n                let asc1, end1;\n                let stop = false;\n                for (x = 0, end1 = j, asc1 = 0 <= end1; asc1 ? x <= end1 : x >= end1; asc1 ? x++ : x--) {\n                    if (arr[i][x] !== arr[i + len][x]) {\n                        stop = true;\n                    }\n                }\n                if (stop) {\n                    break;\n                }\n                len++;\n            }\n            return len;\n        };\n\n        //the first few rows are for col headers\n        const thead = document.createElement('thead');\n        for (j of Object.keys(colAttrs || {})) {\n            const c = colAttrs[j];\n            tr = document.createElement('tr');\n            if ((parseInt(j) === 0) && (rowAttrs.length !== 0)) {\n                th = document.createElement('th');\n                th.setAttribute('colspan', rowAttrs.length);\n                th.setAttribute('rowspan', colAttrs.length);\n                tr.appendChild(th);\n            }\n            th = document.createElement('th');\n            th.className = 'pvtAxisLabel';\n            th.textContent = c;\n            if (pivotData.grouping && (j < (colAttrs.length - 1))) {\n                th.onclick = getExpandAllHandler(pivotData, +j, false);\n                th.className += ` open level${j}`;\n            }\n            tr.appendChild(th);\n            for (i of Object.keys(colKeys || {})) {\n                colKey = colKeys[i];\n                x = spanSize(colKeys, parseInt(i), parseInt(j));\n                if (x !== -1) {\n                    th = document.createElement('th');\n                    th.className = 'pvtColLabel';\n                    th.className += ` col${pivotData.colGroupBefore ? +i : (+i + x) - 1}`;\n                    th.textContent = colKey[j];\n                    th.setAttribute('colspan', x * Math.max(1, pivotData.aggregator.length));\n                    if ((parseInt(j) === (colAttrs.length - 1)) && (rowAttrs.length !== 0)) {\n                        th.setAttribute('rowspan', 2);\n                    }\n                    if (pivotData.grouping && (j < (colAttrs.length - 1)) && colKey[j]) {\n                        th.className += ' pvtSubtotal open';\n                        th.setAttribute('colspan', x * Math.max(1, pivotData.aggregator.length));\n                        th.onclick = colsExpandHandler;\n                    }\n                    tr.appendChild(th);\n                }\n            }\n            if ((parseInt(j) === 0) && opts.table.rowTotals) {\n                th = document.createElement('th');\n                th.className = 'pvtTotalLabel pvtRowTotalLabel';\n                th.innerHTML = opts.localeStrings.totals;\n                th.setAttribute('colspan', Math.max(1, pivotData.aggregator.length));\n                th.setAttribute('rowspan', colAttrs.length + (rowAttrs.length === 0 ? 0 : 1));\n                tr.appendChild(th);\n            }\n            thead.appendChild(tr);\n        }\n\n        //then a row for row header headers\n        if (rowAttrs.length !== 0) {\n            tr = document.createElement('tr');\n            for (i of Object.keys(rowAttrs || {})) {\n                const r = rowAttrs[i];\n                th = document.createElement('th');\n                th.className = 'pvtAxisLabel';\n                th.textContent = r;\n                if (pivotData.grouping && (i < (rowAttrs.length - 1))) {\n                    th.className += ` open level${i}`;\n                    th.onclick = getExpandAllHandler(pivotData, +i, true);\n                }\n                tr.appendChild(th);\n            }\n            th = document.createElement('th');\n            if (colAttrs.length === 0) {\n                th.className = 'pvtTotalLabel pvtRowTotalLabel';\n                th.innerHTML = opts.localeStrings.totals;\n                th.setAttribute('colspan', pivotData.aggregator.length);\n            }\n            tr.appendChild(th);\n            thead.appendChild(tr);\n        }\n        result.appendChild(thead);\n\n        //now the actual data rows, with their row headers and totals\n        const tbody = document.createElement('tbody');\n\n        if (pivotData.aggregatorsLabel && (pivotData.aggregatorsLabel.length > 1)) {\n            let lbl;\n            tr = document.createElement('tr');\n            th = document.createElement('th');\n            const colspan = rowAttrs.length + (colAttrs.length === 0 ? 0 : 1);\n            th.setAttribute('colspan', colspan);\n            tr.appendChild(th);\n\n            for (j of Object.keys(colKeys || {})) { //this is a tight loop\n                colKey = colKeys[j];\n                for (lbl of pivotData.aggregatorsLabel) {\n                    th = document.createElement('th');\n                    th.className = `pvtAggregatorLabel col${j}`;\n                    th.textContent = lbl;\n                    tr.appendChild(th);\n                }\n            }\n\n            for (lbl of pivotData.aggregatorsLabel) {\n                th = document.createElement('th');\n                th.className = 'pvtAggregatorLabel';\n                th.textContent = lbl;\n                tr.appendChild(th);\n            }\n\n            tbody.appendChild(tr);\n        }\n\n\n        for (i of Object.keys(rowKeys || {})) {\n            const rowKey = rowKeys[i];\n            tr = document.createElement('tr');\n            const rowGap = rowAttrs.length - rowKey.length;\n            tr.className = rowGap ? `pvtSubtotal level${rowKey.length}` : 'pvtData';\n            for (j of Object.keys(rowKey || {})) {\n                const txt = rowKey[j];\n                if (compactLayout && (j < (rowKey.length - 1))) {\n                    continue;\n                }\n                x = compactLayout ? 1 : spanSize(rowKeys, parseInt(i), parseInt(j));\n                if (x !== -1) {\n                    th = document.createElement('th');\n                    th.className = 'pvtRowLabel';\n                    th.className += ` row${pivotData.rowGroupBefore ? +i : (+i + x) - 1}`;\n                    th.textContent = txt;\n                    th.setAttribute('rowspan', x);\n                    if (compactLayout) {\n                        th.colSpan = rowAttrs.length;\n                        th.style.paddingLeft = 5 + (parseInt(j) * 20) + 'px';\n                    }\n                    if (pivotData.grouping && (j < (rowAttrs.length - 1))) {\n                        th.className += ' open';\n                        th.onclick = rowsExpandHandler;\n                    }\n                    tr.appendChild(th);\n                }\n            }\n\n            if (!compactLayout && rowGap) {\n                th = document.createElement('th');\n                th.colSpan = rowGap;\n                th.textContent = `Total (${rowKey[j]})`;\n                tr.appendChild(th);\n            }\n\n            if (colAttrs.length) {\n                th.colSpan++;\n            }\n\n            for (j of Object.keys(colKeys || {})) { //this is a tight loop\n                colKey = colKeys[j];\n                for (id = 0; id < pivotData.aggregator.length; id++) {\n                    agg = pivotData.aggregator[id];\n                    aggregator = pivotData.getAggregator(rowKey, colKey, id);\n                    val = aggregator.value(id);\n                    td = document.createElement('td');\n                    if (!rowGap) {\n                        td.className = 'pvtVal ';\n                    }\n                    td.className += `row${i} col${j}`;\n                    if (colAttrs.length - colKey.length) {\n                        td.className = `pvtSubtotal level${colKey.length} row${i} col${j}`;\n                    }\n                    td.textContent = aggregator.format(val);\n                    td.setAttribute('data-value', val);\n                    if (getClickHandler != null) {\n                        td.onclick = getClickHandler(val, rowKey, colKey);\n                    }\n                    tr.appendChild(td);\n                }\n            }\n\n            if (opts.table.rowTotals || (colAttrs.length === 0)) {\n                for (id = 0; id < pivotData.aggregator.length; id++) {\n                    agg = pivotData.aggregator[id];\n                    totalAggregator = pivotData.getAggregator(rowKey, [], id);\n                    val = totalAggregator.value(id);\n                    td = document.createElement('td');\n                    td.className = 'pvtTotal rowTotal';\n                    td.textContent = totalAggregator.format(val);\n                    td.setAttribute('data-value', val);\n                    if (getClickHandler != null) {\n                        td.onclick = getClickHandler(val, rowKey, []);\n                    }\n                    td.setAttribute('data-for', 'row' + i);\n                    tr.appendChild(td);\n                }\n            }\n            tbody.appendChild(tr);\n        }\n\n        //finally, the row for col totals, and a grand total\n        if (opts.table.colTotals || (rowAttrs.length === 0)) {\n            tr = document.createElement('tr');\n            if (opts.table.colTotals || (rowAttrs.length === 0)) {\n                th = document.createElement('th');\n                th.className = 'pvtTotalLabel pvtColTotalLabel';\n                th.innerHTML = opts.localeStrings.totals;\n                th.setAttribute('colspan', rowAttrs.length + (colAttrs.length === 0 ? 0 : 1));\n                tr.appendChild(th);\n            }\n            for (j of Object.keys(colKeys || {})) {\n                colKey = colKeys[j];\n                for (id = 0; id < pivotData.aggregator.length; id++) {\n                    agg = pivotData.aggregator[id];\n                    totalAggregator = pivotData.getAggregator([], colKey, id);\n                    val = totalAggregator.value(id);\n                    td = document.createElement('td');\n                    td.className = `pvtTotal colTotal col${j}`;\n                    if (colKey.length !== colAttrs.length) {\n                        td.className += ` pvtSubtotal level${colKey.length}`;\n                    }\n                    td.textContent = totalAggregator.format(val);\n                    td.setAttribute('data-value', val);\n                    if (getClickHandler != null) {\n                        td.onclick = getClickHandler(val, [], colKey);\n                    }\n                    td.setAttribute('data-for', 'col' + j);\n                    tr.appendChild(td);\n                }\n            }\n            if (opts.table.rowTotals || (colAttrs.length === 0)) {\n                for (id = 0; id < pivotData.aggregator.length; id++) {\n                    agg = pivotData.aggregator[id];\n                    totalAggregator = pivotData.getAggregator([], [], id);\n                    val = totalAggregator.value(id);\n                    td = document.createElement('td');\n                    td.className = 'pvtGrandTotal';\n                    td.textContent = totalAggregator.format(val);\n                    td.setAttribute('data-value', val);\n                    if (getClickHandler != null) {\n                        td.onclick = getClickHandler(val, [], []);\n                    }\n                    tr.appendChild(td);\n                }\n            }\n            tbody.appendChild(tr);\n        }\n        result.appendChild(tbody);\n\n        //squirrel this away for later\n        result.setAttribute('data-numrows', rowKeys.length);\n        result.setAttribute('data-numcols', colKeys.length);\n\n        return result;\n    }\n\n    /*\n    Pivot Table core: create PivotData object and call Renderer on it\n    */\n\n    $.fn.pivot = function (input, inputOpts, locale) {\n        let e;\n        if (locale == null) {\n            locale = 'en';\n        }\n        if ((locales[locale] == null)) {\n            locale = 'en';\n        }\n        inputOpts = inputOpts || {};\n        const defaults = {\n            cols: [], rows: [], vals: [],\n            rowOrder: 'key_a_to_z', colOrder: 'key_a_to_z',\n            dataClass: PivotData,\n            filter() {\n                return true;\n            },\n            aggregator: aggregatorTemplates.count()(),\n            aggregatorName: 'Count',\n            sorters: {},\n            derivedAttributes: {},\n            renderer: pivotTableRenderer,\n        };\n\n        const localeStrings = $.extend(true, {}, locales.en.localeStrings, locales[locale].localeStrings);\n        const localeDefaults = {\n            rendererOptions: { localeStrings },\n            localeStrings,\n        };\n\n        const opts = $.extend(true, {}, localeDefaults, $.extend({}, defaults, inputOpts));\n\n        let result;\n        inputOpts.pivotData = null;\n        try {\n            const pivotData = new opts.dataClass(input, opts);\n            try {\n                result = opts.renderer(pivotData, opts.rendererOptions);\n                inputOpts.pivotData = pivotData;\n            } catch (error) {\n                e = error;\n                if (typeof console !== 'undefined' && console !== null) {\n                    console.error(e.stack);\n                }\n                result = $('<span>').html(opts.localeStrings.renderError);\n            }\n        } catch (error1) {\n            e = error1;\n            if (typeof console !== 'undefined' && console !== null) {\n                console.error(e.stack);\n            }\n            result = $('<span>').html(opts.localeStrings.computeError);\n        }\n\n        const x = this[0];\n        while (x.hasChildNodes()) {\n            x.removeChild(x.lastChild);\n        }\n        return this.append(result);\n    };\n\n    /*\n    Pivot Table UI: calls the Pivot Table core above with options set by user\n    */\n\n    $.fn.pivotUI = function (input, inputOpts, overwrite, locale) {\n        let opts;\n        let a, c;\n        if (overwrite == null) {\n            overwrite = false;\n        }\n        if (locale == null) {\n            locale = 'fr';\n        }\n        if ((locales[locale] == null)) {\n            locale = 'en';\n        }\n\n        const defaults = {\n            derivedAttributes: {},\n            aggregators: defaultAggregators,\n            renderers: locales[locale].renderers,\n            hiddenAttributes: [],\n            hiddenFromAggregators: [],\n            hiddenFromDragDrop: [],\n            menuLimit: 500,\n            cols: [], rows: [], vals: [],\n            rowOrder: 'key_a_to_z', colOrder: 'key_a_to_z',\n            dataClass: PivotData,\n            exclusions: {},\n            inclusions: {},\n            unusedAttrsVertical: 85,\n            autoSortUnusedAttrs: false,\n            onRefresh: null,\n            showUI: true,\n            filter() {\n                return true;\n            },\n            sorters: {},\n            multiple: true,\n            parametersActive: false,\n        };\n\n        let itemsId = 0;\n        let aggregators = [];\n        const localeStrings = $.extend(true, {}, locales.en.localeStrings, locales[locale].localeStrings);\n        const localeDefaults = {\n            rendererOptions: { localeStrings },\n            localeStrings,\n        };\n\n        const existingOpts = this.data('pivotUIOptions');\n        if ((existingOpts == null) || overwrite) {\n            opts = $.extend(true, {}, localeDefaults, $.extend({}, defaults, inputOpts));\n        } else {\n            opts = existingOpts;\n        }\n\n        if (!inputOpts?.aggregators && locales[locale].formatters) {\n            opts.aggregators = makeAggregators(\n                locales[locale].formatters.format,\n                locales[locale].formatters.formatInt,\n                locales[locale].formatters.formatPct);\n        }\n\n        try {\n            // do a first pass on the data to cache a materialized copy of any\n            // function-valued inputs and to compute dimension cardinalities\n            let attr, i, unusedAttrsVerticalAutoCutoff, x;\n            const attrValues = {};\n            const materializedInput = [];\n            let recordsProcessed = 0;\n            PivotData.forEachRecord(input, opts.derivedAttributes, function (record) {\n                let attr;\n                if (!opts.filter(record)) {\n                    return;\n                }\n                materializedInput.push(record);\n                for (attr of Object.keys(record || {})) {\n                    if ((attrValues[attr] == null)) {\n                        attrValues[attr] = {};\n                        if (recordsProcessed > 0) {\n                            attrValues[attr]['null'] = recordsProcessed;\n                        }\n                    }\n                }\n                for (attr in attrValues) {\n                    const value = record[attr] != null ? record[attr] : 'null';\n                    if (attrValues[attr][value] == null) {\n                        attrValues[attr][value] = 0;\n                    }\n                    attrValues[attr][value]++;\n                }\n                return recordsProcessed++;\n            });\n\n            const uiContainer = $('<div>').addClass('pvtUi');\n\n            const uiMenu = $('<div>').addClass('pvtUiMenu');\n            const uiParameters = $('<div>').addClass('pvtUiParameters');\n            const uiPivotContainer = $('<div>').addClass('pvtUiContainer');\n\n            const uiButtonColumns = $('<div>')\n                .addClass('pvtUiVerticalButton')\n                .addClass('pvtUiButtonColumns')\n                .addClass('active')\n                .text(localeStrings.colsLabel)\n                .on('click', function () {\n                    opts.parametersActive = !opts.parametersActive;\n                    if (opts.parametersActive) {\n                        uiButtonColumns.addClass('active');\n                        return uiParameters.show();\n                    } else {\n                        uiButtonColumns.removeClass('active');\n                        return uiParameters.hide();\n                    }\n                })\n                .appendTo(uiMenu);\n\n            const uiButtonGroups = $('<div>')\n                .addClass('pvtUiVerticalButton')\n                .addClass('pvtUiButtonGroups')\n                .text(localeStrings.groupsLabel)\n                .on('click', function () {\n                    if (opts.grouping) {\n                        uiButtonGroups.removeClass('active');\n                        opts.grouping = false;\n                    } else {\n                        uiButtonGroups.addClass('active');\n                        opts.grouping = {\n                            colGroupBefore: false,\n                        };\n                    }\n                    return refresh();\n                })\n                .appendTo(uiMenu);\n\n            uiContainer\n                .append(uiMenu)\n                .append(uiParameters)\n                .append(uiPivotContainer);\n\n            //# Render type\n            $('<div>')\n                .addClass('pvtParameterLabel')\n                .appendTo(uiParameters)\n                .text(localeStrings.rendererLabel);\n            let pvtRenderType = $('<div>')\n                .addClass('pvtRendererType')\n                .addClass('pvtParameter')\n                .appendTo(uiParameters);\n            const renderer = $('<select>')\n                .addClass('pvtRenderer')\n                .appendTo(pvtRenderType)\n                .bind('change', () => refresh()); //capture reference\n            for (x of Object.keys(opts.renderers || {})) {\n                $('<option>').val(x).html(x).appendTo(renderer);\n            }\n\n\n            //axis list, including the double click menu\n            const unused = $('<div>').addClass('pvtAxisContainer pvtUnused');\n            const shownAttributes = [];\n            for (a in attrValues) {\n                if (!opts.hiddenAttributes.includes(a)) {\n                    shownAttributes.push(a);\n                }\n            }\n            const shownInAggregators = [];\n            for (c of shownAttributes) {\n                if (!opts.hiddenFromAggregators.includes(c)) {\n                    shownInAggregators.push(c);\n                }\n            }\n            const shownInDragDrop = [];\n            for (c of shownAttributes) {\n                if (!opts.hiddenFromDragDrop.includes(c)) {\n                    shownInDragDrop.push(c);\n                }\n            }\n\n            let unusedAttrsVerticalAutoOverride = false;\n            if (opts.unusedAttrsVertical === 'auto') {\n                unusedAttrsVerticalAutoCutoff = 120; // legacy support\n            } else {\n                unusedAttrsVerticalAutoCutoff = parseInt(opts.unusedAttrsVertical);\n            }\n\n            if (!isNaN(unusedAttrsVerticalAutoCutoff)) {\n                let attrLength = 0;\n                for (a of shownInDragDrop) {\n                    attrLength += a.length;\n                }\n                unusedAttrsVerticalAutoOverride = attrLength > unusedAttrsVerticalAutoCutoff;\n            }\n\n            for (i of Object.keys(shownInDragDrop || {})) {\n                attr = shownInDragDrop[i];\n                const values = [];\n                for (const v in attrValues[attr]) {\n                    values.push(v);\n                }\n                let hasExcludedItem = false;\n                const valueList = $('<div>').addClass('pvtFilterBox').hide();\n\n                valueList.append($('<h4>').append(\n                        $('<span>').text(attr),\n                        $('<span>').addClass('count').text(`(${values.length})`),\n                    ),\n                );\n                if (values.length > opts.menuLimit) {\n                    valueList.append($('<p>').html(opts.localeStrings.tooMany));\n                } else {\n                    if (values.length > 5) {\n                        const controls = $('<p>').appendTo(valueList);\n                        const sorter = getSort(opts.sorters, attr);\n                        const placeholder = opts.localeStrings.filterResults;\n                        $('<input>', { type: 'text' }).appendTo(controls)\n                            .attr({ placeholder, class: 'pvtSearch' })\n                            .bind('keyup', function () {\n                                const filter = $(this).val().toLowerCase().trim();\n                                const accept_gen = (prefix, accepted) => (function (v) {\n                                    const real_filter = filter.substring(prefix.length).trim();\n                                    if (real_filter.length === 0) {\n                                        return true;\n                                    }\n                                    let needle = Math.sign(sorter(v.toLowerCase(), real_filter));\n                                    return accepted.includes(needle);\n                                });\n                                const accept =\n                                    filter.indexOf('>=') === 0 ? accept_gen('>=', [1, 0])\n                                        : filter.indexOf('<=') === 0 ? accept_gen('<=', [-1, 0])\n                                            : filter.indexOf('>') === 0 ? accept_gen('>', [1])\n                                                : filter.indexOf('<') === 0 ? accept_gen('<', [-1])\n                                                    : filter.indexOf('~') === 0 ? function (v) {\n                                                            if (filter.substring(1).trim().length === 0) {\n                                                                return true;\n                                                            }\n                                                            return v.toLowerCase().match(filter.substring(1));\n                                                        }\n                                                        : v => v.toLowerCase().indexOf(filter) !== -1;\n\n                                return valueList.find('.pvtCheckContainer p label span.value').each(function () {\n                                    if (accept($(this).text())) {\n                                        return $(this).parent().parent().show();\n                                    } else {\n                                        return $(this).parent().parent().hide();\n                                    }\n                                });\n                            });\n                        controls.append($('<br>'));\n                        $('<button>', { type: 'button' }).appendTo(controls)\n                            .html(opts.localeStrings.selectAll)\n                            .bind('click', function () {\n                                valueList.find('input:visible:not(:checked)')\n                                    .prop('checked', true).toggleClass('changed');\n                                return false;\n                            });\n                        $('<button>', { type: 'button' }).appendTo(controls)\n                            .html(opts.localeStrings.selectNone)\n                            .bind('click', function () {\n                                valueList.find('input:visible:checked')\n                                    .prop('checked', false).toggleClass('changed');\n                                return false;\n                            });\n                    }\n\n                    const checkContainer = $('<div>').addClass('pvtCheckContainer').appendTo(valueList);\n\n                    for (let value of values.sort(getSort(opts.sorters, attr))) {\n                        const valueCount = attrValues[attr][value];\n                        const filterItem = $('<label>');\n                        let filterItemExcluded = false;\n                        if (opts.inclusions[attr]) {\n                            filterItemExcluded = (!opts.inclusions[attr].includes(value));\n                        } else if (opts.exclusions[attr]) {\n                            filterItemExcluded = (opts.exclusions[attr].includes(value));\n                        }\n                        if (!hasExcludedItem) {\n                            hasExcludedItem = filterItemExcluded;\n                        }\n                        $('<input>')\n                            .attr('type', 'checkbox').addClass('pvtFilter')\n                            .attr('checked', !filterItemExcluded).data('filter', [attr, value])\n                            .appendTo(filterItem)\n                            .bind('change', function () {\n                                return $(this).toggleClass('changed');\n                            });\n                        filterItem.append($('<span>').addClass('value').text(value));\n                        filterItem.append($('<span>').addClass('count').text('(' + valueCount + ')'));\n                        checkContainer.append($('<p>').append(filterItem));\n                    }\n                }\n\n                const closeFilterBox = function () {\n                    if (valueList.find('[type=\\'checkbox\\']').length >\n                        valueList.find('[type=\\'checkbox\\']:checked').length) {\n                        attrElem.addClass('pvtFilteredAttribute');\n                    } else {\n                        attrElem.removeClass('pvtFilteredAttribute');\n                    }\n\n                    valueList.find('.pvtSearch').val('');\n                    valueList.find('.pvtCheckContainer p').show();\n                    return valueList.hide();\n                };\n\n\n                const finalButtons = $('<p>').appendTo(valueList);\n\n                if (values.length <= opts.menuLimit) {\n                    $('<button>', { type: 'button' }).text(opts.localeStrings.apply)\n                        .appendTo(finalButtons).bind('click', function () {\n                        if (valueList.find('.changed').removeClass('changed').length) {\n                            refresh();\n                        }\n                        return closeFilterBox();\n                    });\n                }\n\n                $('<button>', { type: 'button' }).text(opts.localeStrings.cancel)\n                    .appendTo(finalButtons).bind('click', function () {\n                    valueList.find('.changed:checked')\n                        .removeClass('changed').prop('checked', false);\n                    valueList.find('.changed:not(:checked)')\n                        .removeClass('changed').prop('checked', true);\n                    return closeFilterBox();\n                });\n\n                const triangleLink = $('<span>').addClass('pvtTriangle')\n                    .html(' &#x25BE;').bind('click', function (e) {\n                        const { left, top } = $(e.currentTarget).position();\n                        return valueList.css({ left: left + 10, top: top + 10 }).show();\n                    });\n\n                const attrElem = $('<li>').addClass(`axis_${i}`)\n                    .append($('<span>').addClass('pvtAttr').text(attr).data('attrName', attr).append(triangleLink));\n\n                if (hasExcludedItem) {\n                    attrElem.addClass('pvtFilteredAttribute');\n                }\n                unused.append(attrElem).append(valueList);\n            }\n\n            $('<div>')\n                .addClass('pvtParameterLabel')\n                .appendTo(uiParameters)\n                .text(localeStrings.valuesLabel);\n\n            //aggregator menu and value area\n            const divAggregator = $('<div>')\n                .addClass('pvtAggregatorChoose')\n                .addClass('pvtParameter')\n                .appendTo(uiParameters);\n\n            const aggregator = $('<select>')\n                .addClass('pvtAggregator')\n                .appendTo(divAggregator)\n                .bind('change', () => {\n                    if (!opts.multiple) {\n                        this.find('.pvtVals .pvtAttrDropdown').each(function () {\n                            return this.remove();\n                        });\n                        aggregators = [{ id: 1, value: aggregator.val() }];\n                        return refresh();\n                    }\n                }); //capture reference\n\n            for (x of Object.keys(opts.aggregators || {})) {\n                aggregator.append($('<option>').val(x).html(locales[locale].localeStrings[x] || locales['en'].localeStrings[x] || x));\n            }\n\n            if (opts.multiple) {\n                $('<a>', { role: 'button' })\n                    .addClass('pvtAddAggregator')\n                    .addClass('pvtToolButton')\n                    .appendTo(divAggregator)\n                    .html('+')\n                    .bind('click', function () {\n                        aggregators.push({ id: ++itemsId, value: aggregator.val() });\n                        renameAggregators(aggregators);\n                        return refresh();\n                    });\n            }\n\n            const ordering = {\n                key_a_to_z: { rowSymbol: '&varr;', colSymbol: '&harr;', next: 'value_a_to_z' },\n                value_a_to_z: { rowSymbol: '&darr;', colSymbol: '&rarr;', next: 'value_z_to_a' },\n                value_z_to_a: { rowSymbol: '&uarr;', colSymbol: '&larr;', next: 'key_a_to_z' },\n            };\n\n            const rowOrderArrow = $('<a>', { role: 'button' })\n                .addClass('pvtRowOrder')\n                .addClass('pvtToolButton')\n                .appendTo(divAggregator)\n                .data('order', opts.rowOrder).html(ordering[opts.rowOrder].rowSymbol)\n                .bind('click', function () {\n                    $(this).data('order', ordering[$(this).data('order')].next);\n                    $(this).html(ordering[$(this).data('order')].rowSymbol);\n                    return refresh();\n                });\n\n            const colOrderArrow = $('<a>', { role: 'button' })\n                .addClass('pvtColOrder')\n                .addClass('pvtToolButton')\n                .appendTo(divAggregator)\n                .data('order', opts.colOrder).html(ordering[opts.colOrder].colSymbol)\n                .bind('click', function () {\n                    $(this).data('order', ordering[$(this).data('order')].next);\n                    $(this).html(ordering[$(this).data('order')].colSymbol);\n                    return refresh();\n                });\n\n            const pvVals = $('<div>').addClass('pvtVals')\n                .addClass('pvtParameter')\n                .appendTo(uiParameters);\n\n            uiParameters.append(pvVals);\n\n            // Available fields\n            $('<div>')\n                .addClass('pvtParameterLabel')\n                .appendTo(uiParameters)\n                .text(localeStrings.fieldsLabel);\n\n            uiParameters.append(unused);\n\n            //column axes\n            $('<div>')\n                .addClass('pvtParameterLabel')\n                .appendTo(uiParameters)\n                .text(localeStrings.colsLabel);\n\n            $('<div>').addClass('pvtAxisContainer pvtCols').appendTo(uiParameters);\n\n            //row axes\n            $('<div>')\n                .addClass('pvtParameterLabel')\n                .appendTo(uiParameters)\n                .text(localeStrings.rowsLabel);\n            $('<div>').addClass('pvtAxisContainer pvtRows').appendTo(uiParameters);\n\n            //the actual pivot table container\n            const pivotTable = $('<div>')\n                .addClass('pvtRendererArea')\n                .appendTo(uiPivotContainer);\n\n            //render the UI in its default state\n            this.html(uiContainer);\n\n            if (!opts.parametersActive) {\n                uiButtonColumns.removeClass('active');\n                uiParameters.hide();\n            }\n\n            //set up the UI initial state as requested by moving elements around\n\n            let initialRender = true;\n\n            //set up for refreshing\n            const refreshDelayed = () => {\n                let vals;\n                const subopts = {\n                    derivedAttributes: opts.derivedAttributes,\n                    localeStrings: opts.localeStrings,\n                    rendererOptions: opts.rendererOptions,\n                    sorters: opts.sorters,\n                    cols: [], rows: [],\n                    dataClass: opts.dataClass,\n                    grouping: opts.grouping,\n                };\n\n                this.find('.pvtRows li span.pvtAttr').each(function () {\n                    return subopts.rows.push($(this).data('attrName'));\n                });\n                this.find('.pvtCols li span.pvtAttr').each(function () {\n                    return subopts.cols.push($(this).data('attrName'));\n                });\n\n                let numInputsToProcess = 0;\n\n                const aggVals = [];\n                let j = 0, idx = j;\n                for (; j < aggregators.length; j++, idx = j) {\n                    let aggregatorType;\n                    const agg = aggregators[idx];\n                    if (typeof agg === 'object') {\n                        aggregatorType = agg.value;\n                    }\n                    const aggIdx = agg.id;\n                    const initialVals = agg.vals;\n\n                    const left = opts.aggregators[aggregatorType]([])().numInputs;\n                    if (left != null) {\n                        numInputsToProcess = left;\n                    } else {\n                        numInputsToProcess = 0;\n                    }\n                    vals = [];\n                    this.find('.pvtVals select.pvtAttrDropdown' + aggIdx).each(function () {\n                        if (numInputsToProcess !== 0) {\n                            numInputsToProcess--;\n                            if ($(this).val() !== '') {\n                                return vals.push($(this).val());\n                            }\n                        }\n                    });\n\n\n                    const pvtVals = this.find('.pvtVals');\n                    let container = this.find('.pvtVals .pvtAttrDropdownContainer' + aggIdx);\n                    const found = container.length > 0;\n                    if (opts.multiple) {\n                        let labelAggregator;\n                        if (!found) {\n                            container = $('<div>')\n                                .addClass('pvtAttrDropdownContainer')\n                                .addClass('pvtAttrDropdownContainer' + aggIdx)\n                                .appendTo(pvtVals);\n                            labelAggregator = locales[locale].localeStrings[aggregatorType] || locales['en'].localeStrings[aggregatorType] || aggregatorType;\n                            $('<label>')\n                                .addClass('pvtAttrDropdown')\n                                .addClass('pvtAttrDropdown' + aggIdx)\n                                .appendTo(container)\n                                .html('<b>' + agg.displayName + '</b>) ' + labelAggregator);\n                            initialRender = true;\n                        }\n\n                        if (!initialRender) {\n                            this.find('.pvtVals .pvtAttrDropdownContainer' + aggIdx + ' label.pvtAttrDropdown')\n                                .each(function () {\n                                    labelAggregator = locales[locale].localeStrings[aggregatorType] || locales['en'].localeStrings[aggregatorType] || aggregatorType;\n                                    return $(this).html('<b>' + agg.displayName + '</b>) ' + labelAggregator);\n                                });\n                        }\n                    } else {\n                        container = pvtVals;\n                    }\n\n                    if (numInputsToProcess !== 0) {\n                        let asc, end;\n                        for (x = 0, end = numInputsToProcess, asc = 0 <= end; asc ? x < end : x > end; asc ? x++ : x--) {\n                            const newDropdown = $('<select>')\n                                .addClass('pvtAttrDropdown' + aggIdx)\n                                .addClass('pvtAttrDropdown')\n                                .append($('<option>'))\n                                .bind('change', () => refresh());\n                            for (attr of shownInAggregators) {\n                                newDropdown.append($('<option>').val(attr).text(attr));\n                            }\n                            container.append(newDropdown);\n                        }\n                    }\n\n\n                    if (opts.multiple && !found) {\n                        $('<a>')\n                            .html('x')\n                            .addClass('pvtRemoveAggregator')\n                            .addClass('pvtToolButton')\n                            .addClass('pvtAttrDropdown' + aggIdx)\n                            .appendTo(container)\n                            .bind('click', (function () {\n                                    this.instance.find('.pvtVals .pvtAttrDropdownContainer' + this.aggIdx).remove();\n                                    idx = aggregators.findIndex(agg => agg.id === this.aggIdx);\n                                    aggregators.splice(idx, 1);\n                                    renameAggregators(aggregators);\n                                    return refresh();\n                                }).bind({ instance: this, aggIdx }),\n                            );\n                    }\n\n                    if (initialRender) {\n                        vals = initialVals != null ? initialVals : opts.vals;\n                        i = 0;\n                        this.find('.pvtVals select.pvtAttrDropdown' + aggIdx).each(function () {\n                            $(this).val(vals[i]);\n                            return i++;\n                        });\n                        initialRender = false;\n                    }\n\n                    aggVals.push(vals);\n                }\n\n                subopts.aggregatorName = aggregators.map(agg => agg.value);\n                subopts.vals = aggVals;\n                subopts.aggregator = aggregators.map((agg, i) => opts.aggregators[agg.value](aggVals[i]));\n                subopts.renderer = opts.renderers[renderer.val()];\n                subopts.rowOrder = rowOrderArrow.data('order');\n                subopts.colOrder = colOrderArrow.data('order');\n                if (opts.multiple) {\n                    subopts.aggregatorsLabel = aggregators.map(agg => agg.displayName);\n                }\n\n                //construct filter here\n                const exclusions = {};\n                this.find('input.pvtFilter').not(':checked').each(function () {\n                    const filter = $(this).data('filter');\n                    if (exclusions[filter[0]] != null) {\n                        return exclusions[filter[0]].push(filter[1]);\n                    } else {\n                        return exclusions[filter[0]] = [filter[1]];\n                    }\n                });\n                //include inclusions when exclusions present\n                const inclusions = {};\n                this.find('input.pvtFilter:checked').each(function () {\n                    const filter = $(this).data('filter');\n                    if (exclusions[filter[0]] != null) {\n                        if (inclusions[filter[0]] != null) {\n                            return inclusions[filter[0]].push(filter[1]);\n                        } else {\n                            return inclusions[filter[0]] = [filter[1]];\n                        }\n                    }\n                });\n\n                subopts.filter = function (record) {\n                    if (!opts.filter(record)) {\n                        return false;\n                    }\n                    for (let k in exclusions) {\n                        const excludedItems = exclusions[k];\n                        if (excludedItems.includes('' + (record[k] != null ? record[k] : 'null'))) {\n                            return false;\n                        }\n                    }\n                    return true;\n                };\n\n                pivotTable.pivot(materializedInput, subopts);\n                const pivotUIOptions = $.extend({}, opts, {\n                        cols: subopts.cols,\n                        rows: subopts.rows,\n                        colOrder: subopts.colOrder,\n                        rowOrder: subopts.rowOrder,\n                        vals: aggVals,\n                        exclusions,\n                        inclusions,\n                        inclusionsInfo: inclusions, //duplicated for backwards-compatibility\n                        aggregators,\n                        aggregatorName: aggregators.map(agg => agg.value),\n                        rendererName: renderer.val(),\n                    },\n                );\n\n                const currentPivotData = subopts.pivotData;\n                delete subopts.pivotData;\n                this.data('pivotUIOptions', pivotUIOptions);\n\n                // if requested, make sure unused columns are in alphabetical order\n                if (opts.autoSortUnusedAttrs) {\n                    const unusedAttrsContainer = this.find('td.pvtUnused.pvtAxisContainer');\n                    $(unusedAttrsContainer).children('li')\n                        .sort((a, b) => naturalSort($(a).text(), $(b).text()))\n                        .appendTo(unusedAttrsContainer);\n                }\n\n                pivotTable.css('opacity', 1);\n                if (opts.onRefresh != null) {\n                    return opts.onRefresh(pivotUIOptions, currentPivotData);\n                }\n            };\n\n            const refresh = () => {\n                pivotTable.css('opacity', 0.5);\n                return setTimeout(refreshDelayed, 10);\n            };\n\n            for (x of opts.cols) {\n                this.find('.pvtCols').append(this.find(`.axis_${$.inArray(x, shownInDragDrop)}`));\n            }\n            for (x of opts.rows) {\n                this.find('.pvtRows').append(this.find(`.axis_${$.inArray(x, shownInDragDrop)}`));\n            }\n            if (opts.aggregatorName != null) {\n                if (opts.multiple) {\n                    opts.aggregatorName = Array.isArray(opts.aggregatorName) ? opts.aggregatorName : [opts.aggregatorName];\n                    for (let idx = 0; idx < opts.aggregatorName.length; idx++) {\n                        const agg = opts.aggregatorName[idx];\n                        aggregators.push({\n                            id: ++itemsId,\n                            value: agg,\n                            vals: (opts.vals != null ? opts.vals[idx] : undefined),\n                        });\n                        renameAggregators(aggregators);\n                    }\n                } else {\n                    this.find('.pvtVals').append(this.find('.pvtAttrDropdown'));\n                    this.find('.pvtAggregator').val(opts.aggregatorName).change();\n                }\n            } else {\n                this.find('.pvtAggregator').change();\n            }\n            if (opts.rendererName != null) {\n                this.find('.pvtRenderer').val(opts.rendererName);\n            }\n\n            if (!opts.showUI) {\n                this.find('.pvtUiCell').hide();\n            }\n\n            //the very first refresh will actually display the table\n            refresh();\n\n            this.find('.pvtAxisContainer').sortable({\n                update(e, ui) {\n                    if ((ui.sender == null)) {\n                        return refresh();\n                    }\n                },\n                connectWith: this.find('.pvtAxisContainer'),\n                items: 'li',\n                placeholder: 'pvtPlaceholder',\n            });\n        } catch (error) {\n            console.error(error);\n            this.html(opts.localeStrings.uiRenderError);\n        }\n        return this;\n    };\n\n    /*\n    Heatmap post-processing\n    */\n\n    $.fn.heatmap = function (scope, opts) {\n        if (scope == null) {\n            scope = 'heatmap';\n        }\n        const numRows = this.data('numrows');\n        const numCols = this.data('numcols');\n\n        // given a series of values\n        // must return a function to map a given value to a CSS color\n        let colorScaleGenerator = opts?.heatmap?.colorScaleGenerator;\n        if (colorScaleGenerator == null) {\n            colorScaleGenerator = function (values) {\n                const min = Math.min(...(values || []));\n                const max = Math.max(...(values || []));\n                return function (x) {\n                    const nonRed = 255 - Math.round((255 * (x - min)) / (max - min));\n                    return `rgb(255,${nonRed},${nonRed})`;\n                };\n            };\n        }\n\n        const heatmapper = scope => {\n            const forEachCell = f => {\n                return this.find(scope).each(function () {\n                    const x = $(this).data('value');\n                    if ((x != null) && isFinite(x)) {\n                        return f(x, $(this));\n                    }\n                });\n            };\n\n            const values = [];\n            forEachCell(x => values.push(x));\n            const colorScale = colorScaleGenerator(values);\n            return forEachCell((x, elem) => elem.css('background-color', colorScale(x)));\n        };\n\n        switch (scope) {\n            case 'heatmap':\n                heatmapper('.pvtVal');\n                break;\n            case 'rowheatmap':\n                for (let i = 0, end = numRows, asc = 0 <= end; asc ? i < end : i > end; asc ? i++ : i--) {\n                    heatmapper(`.pvtVal.row${i}`);\n                }\n                break;\n            case 'colheatmap':\n                for (let j = 0, end1 = numCols, asc1 = 0 <= end1; asc1 ? j < end1 : j > end1; asc1 ? j++ : j--) {\n                    heatmapper(`.pvtVal.col${j}`);\n                }\n                break;\n        }\n\n        heatmapper('.pvtTotal.rowTotal');\n        heatmapper('.pvtTotal.colTotal');\n\n        return this;\n    };\n\n    /*\n    Barchart post-processing\n    */\n\n    $.fn.barchart = function (opts) {\n        const numRows = this.data('numrows');\n        const numCols = this.data('numcols');\n\n        const barcharter = scope => {\n            const forEachCell = f => {\n                return this.find(scope).each(function () {\n                    const x = $(this).data('value');\n                    if ((x != null) && isFinite(x)) {\n                        return f(x, $(this));\n                    }\n                });\n            };\n\n            const values = [];\n            forEachCell(x => values.push(x));\n            let max = Math.max(...(values || []));\n            if (max < 0) {\n                max = 0;\n            }\n            let range = max;\n            const min = Math.min(...(values || []));\n            if (min < 0) {\n                range = max - min;\n            }\n            const scaler = x => (100 * x) / (1.4 * range);\n            return forEachCell(function (x, elem) {\n                const text = elem.text();\n                const wrapper = $('<div>').css({\n                    'position': 'relative',\n                    'height': '55px',\n                });\n                let bgColor = 'gray';\n                let bBase = 0;\n                if (min < 0) {\n                    bBase = scaler(-min);\n                }\n                if (x < 0) {\n                    bBase += scaler(x);\n                    bgColor = 'darkred';\n                    x = -x;\n                }\n                wrapper.append($('<div>').css({\n                        'position': 'absolute',\n                        'bottom': bBase + '%',\n                        'left': 0,\n                        'right': 0,\n                        'height': scaler(x) + '%',\n                        'background-color': bgColor,\n                    }),\n                );\n                wrapper.append($('<div>').text(text).css({\n                        'position': 'relative',\n                        'padding-left': '5px',\n                        'padding-right': '5px',\n                    }),\n                );\n\n                return elem.css({ 'padding': 0, 'padding-top': '5px', 'text-align': 'center' }).html(wrapper);\n            });\n        };\n\n        for (let i = 0, end = numRows, asc = 0 <= end; asc ? i < end : i > end; asc ? i++ : i--) {\n            barcharter(`.pvtVal.row${i}`);\n        }\n        barcharter('.pvtTotal.colTotal');\n\n        return this;\n    };\n\n    /*\n    Grouping fold/expand rows and cols\n    */\n\n    const childIndex = el => Array.prototype.indexOf.call(el.parentNode.children, el);\n\n    const childKeysIndices = function (keys, n) {\n        const up = keys[0].length === 1 ? 1 : -1;\n        const len = keys[n].length;\n\n        const result = [];\n        n = n + up;\n        let key = keys[n];\n        while (key && key.length > len) {\n            if (key.length === (len + 1)) {\n                result.push(n);\n            } else {\n                continue;\n            }\n            n = n + up;\n            key = keys[n];\n        }\n        return result;\n    };\n\n    const parentKeysIndices = function (keys, n) {\n        const up = keys[0].length === 1 ? 1 : -1;\n        const result = [];\n        let len = keys[n].length;\n        while (len > 1) {\n            let key;\n            n = n - up;\n            key = keys[n];\n            while (key && key.length >= len) {\n                n = n - up;\n                key = keys[n];\n            }\n            result.push(n);\n\n            len = keys[n].length;\n        }\n        return result;\n    };\n\n    const levelKeysIndices = (keys, level) => (keys.filter(d => d.length === level)).map(keys.indexOf.bind(keys));\n\n    const getAxis = function (table, rows, level) {\n        if (rows) {\n            return table.find(`thead tr:last-child th.pvtAxisLabel:nth-of-type(${level})`);\n        } else {\n            return table.find(`thead tr:nth-child(${level}) th.pvtAxisLabel`);\n        }\n    };\n\n    const getHeader = (table, rows, n) => table.find(rows ? `tbody tr th.row${n}` : `thead th.col${n}`);\n\n    const rowGetter = function (table) {\n        const selecttion = table.find('tbody tr');\n        return n => $(selecttion[n]);\n    };\n\n    const colGetter = function (table) {\n        const selecttion = table.find('tr');\n        return n => selecttion.find(`.col${n}`);\n    };\n\n    const showHide = function (getter, keys, nth, offset, show) {\n        const object = childKeysIndices(keys, nth);\n        for (let i in object) {\n            const n = object[i];\n            const row = getter(n + offset);\n            const fn = show ? $.fn.show : $.fn.hide;\n            fn.call(row);\n            if (!row.hasClass('collapsed')) {\n                showHide(getter, keys, n, offset, show);\n            }\n        }\n        return true;\n    };\n\n    const expandRowsGroupAfter = function (cell, rows, keys, nth) {\n        const table = $(cell).closest('table');\n        const initIndex = childIndex(cell.parentNode);\n        const getter = rowGetter(table);\n        const row = getter(nth);\n\n        const insertPoint = row.hasClass('collapsed') ? getter(cell._old) : row;\n        if (!row.hasClass('collapsed')) {\n            cell._old = childIndex(cell.parentNode);\n        }\n        insertPoint.prepend(cell);\n\n        const object = parentKeysIndices(keys, nth);\n        for (let i in object) {\n            const p = object[i];\n            const parent = (getHeader(table, rows, p))[0];\n            const parentIndex = childIndex(parent.parentNode);\n            parent._old = parent._old != null ? parent._old : parentIndex;\n            if ((parent._old === initIndex) && (parent.rowSpan === 1)) {\n                parent._old -= initIndex - childIndex(cell.parentNode);\n            }\n\n            if (initIndex === parentIndex) {\n                insertPoint.prepend(parent);\n            }\n        }\n\n        return expandWithSpan(cell, rows, keys, nth);\n    };\n\n    const expandRowCol = function (cell, rows, keys, nth, parent) {\n        const table = $(cell).closest('table');\n        const getter = rows ? rowGetter(table) : colGetter(table);\n        const span = rows ? 'rowSpan' : 'colSpan';\n\n        const offset = rows && (this.aggregator.length > 1) ? 1 : 0;\n        if ((parent != null ? parent[span] : undefined) !== 1) {\n            showHide(getter, keys, nth, offset, getter(nth + offset).hasClass('collapsed'));\n        }\n        getter(nth + offset).toggleClass('collapsed');\n        return $(cell).toggleClass('open close');\n    };\n\n    const expandAll = function (pivotData, table, level, rows, expand) {\n        let i;\n        if (expand && (level > 1)) {\n            getAxis(table, rows, level - 1).removeClass('close').addClass('open');\n            expandAll(pivotData, table, level - 1, rows, expand);\n        }\n\n        const levels = (rows ? pivotData.rowAttrs : pivotData.colAttrs).length - 1;\n        if (!expand && (level < levels)) {\n            let asc, end, start;\n            for (start = level + 1, i = start, end = levels, asc = start <= end; asc ? i <= end : i >= end; asc ? i++ : i--) {\n                getAxis(table, rows, i).removeClass('open').addClass('close');\n            }\n        }\n\n        const keys = rows ? pivotData.rowKeys : pivotData.colKeys;\n        const object = levelKeysIndices(keys, level);\n        for (i in object) {\n            const n = object[i];\n            const el = getHeader(table, rows, n);\n            if (expand === el.hasClass('close')) {\n                el.trigger('click');\n            }\n        }\n        return null;\n    };\n\n    const getExpandHandler = (keys, rows, handler) => (function (ev) {\n        const match = ev.target.className.match(rows ? /row(\\d+)/ : /col(\\d+)/);\n        if (match) {\n            return handler(ev.target, rows, keys, +match[1]);\n        }\n    });\n\n    return getExpandAllHandler = (pivotData, level, rows) => (function (ev) {\n        expandAll(pivotData, $(ev.target).closest('table'), level + 1, rows, $(ev.target).hasClass('close'));\n        return $(ev.target).toggleClass('open close');\n    });\n})(jQuery);\n\n"]}