{"version":3,"sources":["pivot.js"],"names":["$","expandWithSpan","cell","rows","keys","nth","i","table","closest","span","dft","Math","max","this","aggregator","length","_ref","_span","change","object","parentKeysIndices","parent","p","getHeader","expandRowCol","localeGlobal","toDate","value","date","Date","toLocaleDateString","year","month","day","e","numberFormat","opts","extend","digitsAfterDecimal","scaler","thousandsSep","decimalSep","prefix","suffix","x","fieldType","undefined","pivotUtilities","fieldsType","integer","isFunction","isNaN","isFinite","result","nStr","split","x1","x2","rgx","test","replace","toFixed","cellRenderers","text","fieldName","col","row","document","createTextNode","byType","def","type","apply","arguments","usFmt","usFmtInt","usFmtPct","aggregatorTemplates","count","formatter","data","rowKey","colKey","push","format","uniques","fn","attr","_slicedToArray","uniq","record","includes","numInputs","sum","parseFloat","extremes","mode","val","sorter","getSort","sorters","_opts$rendererOptions2","y","_opts$rendererOptions","rendererOptions","toISOString","quantile","q","vals","sort","a","b","floor","ceil","runningStat","ddof","n","m","s","m_new","sqrt","sumOverSum","_ref13","num","denom","sumNum","sumDenom","sumOverSumBound80","upper","_ref15","sign","fractionOf","wrapped","_len","Array","_key","selector","total","inner","_toConsumableArray","id","agg","getAggregator","concat","makeAggregators","fmt","fmtInt","fmtPct","Count","Count Unique Values","countUnique","List Unique Values","listUnique","Sum","Integer Sum","Average","average","Median","median","Sample Variance","var","Sample Standard Deviation","stdev","Minimum","min","Maximum","First","first","Last","last","Sum over Sum","80% Upper Bound","80% Lower Bound","Sum as Fraction of Total","Sum as Fraction of Rows","Sum as Fraction of Columns","Count as Fraction of Total","Count as Fraction of Rows","Count as Fraction of Columns","f","naturalSort","join","defaultAggregators","renderers","Table","pivotTableRenderer","Table Barchart","barchart","Heatmap","heatmap","Row Heatmap","Col Heatmap","locales","en","formatters","formatInt","formatPct","localeStrings","renderError","computeError","uiRenderError","selectAll","selectNone","tooMany","filterResults","cancel","totals","vs","by","rendererLabel","valuesLabel","fieldsLabel","colsLabel","rowsLabel","groupsLabel","_i","_Object$keys","Object","zeroPad","number","padding","substr","mthNamesEn","dayNamesEn","derivers","bin","binWidth","dateFormat","formatString","utcOutput","mthNames","dayNames","utc","parse","rx","rd","rz","as","bs","nulls_first","nf","nas","nbs","String","match","a1","shift","b1","filterByLength","filter","subarrays","array","map","d","slice","renameAggregators","aggregators","displayName","fromCharCode","toUpperCase","PivotData","input","_this","_classCallCheck","arrSort","bind","sortKeys","getColKeys","getRowKeys","isArray","aggregatorName","colAttrs","cols","rowAttrs","valAttrs","rowOrder","colOrder","derivedAttributes","tree","rowKeys","colKeys","rowTotals","colTotals","allTotal","sorted","aggregatorsLabel","grouping","rowGroupBefore","colGroupBefore","forEachRecord","processRecord","entries","forEach","_ref16","_ref17","key","_createClass","criteria","callback","_this2","k","attrs","_step","sortersArr","_iterator","_createForOfIteratorHelper","done","err","_i2","_Object$keys2","comparison","_this3","v","r","c","all_keys","_step2","_this4","_iterator2","_step3","_iterator3","_loop","j","flatRowKey","result1","_loop2","flatColKey","tblCols","addRecord","isEmptyObject","left","_i3","_Object$keys3","compactRecord","_i4","_Object$keys4","_step4","_iterator4","each","Error","pivotData","getClickHandler","totalAggregator","defaults","clickCallback","typeCellRenderer","headCellRenderer","dataCellRenderer","compactLayout","rowValues","colValues","filters","_i5","_Object$keys5","_i6","_Object$keys6","rowExpandHandler","expandRowsGroupAfter","rowsExpandHandler","getExpandHandler","colsExpandHandler","createElement","spanSize","className","arr","noDraw","end","asc","len","end1","stop","asc1","thead","_i7","_Object$keys7","tr","parseInt","th","setAttribute","appendChild","call","onclick","getExpandAllHandler","_i8","_Object$keys8","innerHTML","_i9","_Object$keys9","tbody","lbl","colspan","_i10","_Object$keys10","_step5","_iterator5","textContent","_step6","_iterator6","_i11","_Object$keys11","rowGap","_i12","_Object$keys12","txt","colSpan","style","paddingLeft","_totalAggregator2","_i13","_Object$keys13","_aggregator2","td","_aggregator","append","_totalAggregator","_totalAggregator4","_totalAggregator6","_i14","_Object$keys14","_totalAggregator3","_totalAggregator5","string","time","datetime","boolean","sortAs","order","mapping","l_mapping","toLowerCase","pivot","inputOpts","locale","dataClass","renderer","error","console","stack","html","error1","hasChildNodes","removeChild","lastChild","pivotUI","overwrite","_this5","hiddenAttributes","hiddenFromAggregators","hiddenFromDragDrop","menuLimit","exclusions","inclusions","unusedAttrsVertical","autoSortUnusedAttrs","onRefresh","showUI","multiple","parametersActive","itemsId","localeDefaults","existingOpts","attrValues","materializedInput","recordsProcessed","uiContainer","_i15","_Object$keys15","addClass","uiMenu","uiParameters","uiPivotContainer","uiButtonColumns","on","show","removeClass","hide","appendTo","uiButtonGroups","refresh","pvtRenderType","_i16","_Object$keys16","unused","shownAttributes","shownInAggregators","_i17","_shownAttributes","shownInDragDrop","_i18","_shownAttributes2","unusedAttrsVerticalAutoCutoff","_step7","_iterator7","unusedAttrsVerticalAutoOverride","_loop3","_Object$keys17","_i19","values","hasExcludedItem","valueList","controls","placeholder","class","accept_gen","accepted","real_filter","substring","trim","needle","accept","indexOf","find","prop","toggleClass","_step8","checkContainer","_iterator8","valueCount","filterItem","filterItemExcluded","closeFilterBox","attrElem","finalButtons","triangleLink","_$$position","currentTarget","position","top","css","divAggregator","remove","_i20","_Object$keys18","role","_step9","ordering","key_a_to_z","rowSymbol","colSymbol","next","value_a_to_z","value_z_to_a","rowOrderArrow","colOrderArrow","pvVals","pivotTable","initialRender","refreshDelayed","subopts","numInputsToProcess","aggVals","idx","_loop4","aggregatorType","labelAggregator","aggIdx","_typeof","initialVals","pvtVals","container","found","newDropdown","_i21","_shownInAggregators","_this6","instance","findIndex","splice","unusedAttrsContainer","not","pivotUIOptions","inclusionsInfo","rendererName","currentPivotData","children","setTimeout","_iterator9","inArray","_step10","_iterator10","sortable","update","ui","sender","connectWith","items","scope","heatmapper","forEachCell","_this7","colorScale","colorScaleGenerator","elem","numRows","numCols","_opts$heatmap","nonRed","round","_this8","barcharter","range","wrapper","height","bgColor","bBase","bottom","right","background-color","padding-left","padding-right","padding-top","text-align","childIndex","el","prototype","parentNode","rowGetter","selecttion","showHide","getter","offset","childKeysIndices","hasClass","expandAll","level","expand","getAxis","levels","start","levelKeysIndices","trigger","up","initIndex","insertPoint","_old","prepend","parentIndex","rowSpan","handler","ev","target","jQuery"],"mappings":"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","file":"pivot.min.js","sourcesContent":["// TODO: This file was created by bulk-decaffeinate.\n// Sanity-check the conversion and remove this comment.\n// noinspection JSUnresolvedReference\n\n/*\n * decaffeinate suggestions:\n * DS201: Simplify complex destructure assignments\n * DS202: Simplify dynamic range loops\n * DS203: Remove `|| {}` from converted for-own loops\n * DS204: Change includes calls to have a more natural evaluation order\n * DS205: Consider reworking code to avoid use of IIFEs\n * DS207: Consider shorter variations of null checks\n * Full docs: https://github.com/decaffeinate/decaffeinate/blob/main/docs/suggestions.md\n */\n\n(function ($) {\n\n    const expandWithSpan = function (cell, rows, keys, nth) {\n        let parent;\n        const table = $(cell).closest('table');\n        const span = rows ? 'rowSpan' : 'colSpan';\n\n        const dft = !rows ? Math.max(1, this.aggregator.length) : 1;\n        [cell._span, cell[span]] = [cell[span], cell._span != null ? cell._span : dft];\n        const change = cell[span] - cell._span;\n\n        const object = parentKeysIndices(keys, nth);\n        for (let i in object) {\n            const p = object[i];\n            parent = (getHeader(table, rows, p))[0];\n            if (parent[span] === 1) {\n                parent._span += change;\n                break;\n            }\n            parent[span] += change;\n        }\n\n        return expandRowCol(cell, rows, keys, nth, parent);\n    };\n    /*\n        Utilities\n        */\n\n    let getExpandAllHandler;\n    let localeGlobal = 'en';\n\n    const addSeparators = function (nStr, thousandsSep, decimalSep) {\n        nStr += '';\n        const x = nStr.split('.');\n        let x1 = x[0];\n        const x2 = x.length > 1 ? decimalSep + x[1] : '';\n        const rgx = /(\\d+)(\\d{3})/;\n        while (rgx.test(x1)) {\n            x1 = x1.replace(rgx, '$1' + thousandsSep + '$2');\n        }\n        return x1 + x2;\n    };\n\n\n    function toDate(value) {\n        let date = '';\n\n        if (value) {\n            try {\n                const options = { year: 'numeric', month: '2-digit', day: '2-digit' };\n                date = (new Date(value)).toLocaleDateString(localeGlobal, options);\n            } catch (e) {\n                date = value;\n            }\n        }\n\n        return date;\n    }\n\n    const numberFormat = function (opts) {\n        const defaults = {\n            digitsAfterDecimal: 2, scaler: 1,\n            thousandsSep: ',', decimalSep: '.',\n            prefix: '', suffix: '',\n        };\n        opts = $.extend({}, defaults, opts);\n        return function (x, fieldType) {\n            if (x === undefined) {\n                return '';\n            }\n\n            if (fieldType === $.pivotUtilities.fieldsType.integer) {\n                return x;\n            } else if (fieldType === $.pivotUtilities.fieldsType.date) {\n                return toDate(x);\n            } else if ($.isFunction(fieldType)) {\n                return fieldType(x);\n            }\n\n            if (isNaN(x) || !isFinite(x)) {\n                return '';\n            }\n\n            const result = addSeparators((opts.scaler * x).toFixed(opts.digitsAfterDecimal), opts.thousandsSep, opts.decimalSep);\n            return '' + opts.prefix + result + opts.suffix;\n        };\n    };\n\n    const cellRenderers = {\n        text: function (value, fieldName, col, row) {\n            const { fieldsType } = this;\n\n            if (value === undefined) {\n                value = '';\n            }\n            // Header type date\n            if (fieldName && fieldsType[fieldName] === $.pivotUtilities.fieldsType.date) {\n                return document.createTextNode(toDate(value));\n            }\n\n            return document.createTextNode(value);\n        },\n        byType: function (opts, def) {\n            return function (value, type) {\n                return (opts[type] || def || cellRenderers.text).apply(this, arguments);\n            };\n        },\n    };\n\n    //aggregator templates default to US number formatting, but this is overrideable\n    const usFmt = numberFormat();\n    const usFmtInt = numberFormat({ digitsAfterDecimal: 0 });\n    const usFmtPct = numberFormat({ digitsAfterDecimal: 1, scaler: 100, suffix: '%' });\n\n    const aggregatorTemplates = {\n        count(formatter) {\n            if (formatter == null) {\n                formatter = usFmtInt;\n            }\n            return () => (function (data, rowKey, colKey) {\n                return {\n                    count: 0,\n                    push() {\n                        return this.count++;\n                    },\n                    value() {\n                        return this.count;\n                    },\n                    format: formatter,\n                };\n            });\n        },\n\n        uniques(fn, formatter) {\n            if (formatter == null) {\n                formatter = usFmtInt;\n            }\n            return function (...args) {\n                const [attr] = args[0];\n                return function (data, rowKey, colKey) {\n                    return {\n                        attr,\n                        uniq: [],\n                        push(record) {\n                            if (!this.uniq.includes(record[attr])) {\n                                return this.uniq.push(record[attr]);\n                            }\n                        },\n                        value() {\n                            return fn(this.uniq);\n                        },\n                        format: formatter,\n                        numInputs: (attr != null) ? 0 : 1,\n                    };\n                };\n            };\n        },\n\n        sum(formatter) {\n            if (formatter == null) {\n                formatter = usFmt;\n            }\n            return function (...args) {\n                const [attr] = args[0];\n                return function (data, rowKey, colKey) {\n                    return {\n                        attr,\n                        sum: 0,\n                        push(record) {\n                            if (!isNaN(parseFloat(record[attr]))) {\n                                return this.sum += parseFloat(record[attr]);\n                            }\n                        },\n                        value() {\n                            return this.sum;\n                        },\n                        format: formatter,\n                        numInputs: (attr != null) ? 0 : 1,\n                    };\n                };\n            };\n        },\n\n        extremes(mode, formatter) {\n            if (formatter == null) {\n                formatter = usFmt;\n            }\n            return function (...args) {\n                const [attr] = args[0];\n                const opts = args[1] || {};\n                return function (data, rowKey, colKey) {\n                    return {\n                        attr,\n                        val: null,\n                        sorter: getSort(data != null ? data.sorters : undefined, attr),\n                        push(record) {\n                            let x = record[attr];\n                            let y = this.val;\n\n                            if (opts.rendererOptions?.fieldsType[attr] === $.pivotUtilities.fieldsType.date) {\n                                x = new Date(x);\n                                y = !y ? x : new Date(y);\n                            } else if (['min', 'max'].includes(mode)) {\n                                x = parseFloat(x);\n                            }\n\n                            if (['min', 'max'].includes(mode)) {\n                                if (!isNaN(x)) {\n                                    this.val = Math[mode](x, y != null ? y : x);\n                                }\n                            }\n                            if (mode === 'first') {\n                                if (this.sorter(x, y != null ? y : x) <= 0) {\n                                    this.val = x;\n                                }\n                            }\n                            if (mode === 'last') {\n                                if (this.sorter(x, y != null ? y : x) >= 0) {\n                                    this.val = x;\n                                }\n                            }\n\n                            if (opts.rendererOptions?.fieldsType[attr] === $.pivotUtilities.fieldsType.date) {\n                                this.val = new Date(this.val).toISOString();\n                            }\n\n                        },\n                        value() {\n                            return this.val;\n                        },\n                        format(x, fieldType) {\n                            if (isNaN(x)) {\n                                return x;\n                            } else {\n                                return formatter(x, fieldType);\n                            }\n                        },\n                        numInputs: (attr != null) ? 0 : 1,\n                    };\n                };\n            };\n        },\n\n        quantile(q, formatter) {\n            if (formatter == null) {\n                formatter = usFmt;\n            }\n            return function (...args) {\n                const [attr] = args[0];\n                return function (data, rowKey, colKey) {\n                    return {\n                        attr,\n                        vals: [],\n                        push(record) {\n                            const x = parseFloat(record[attr]);\n                            if (!isNaN(x)) {\n                                return this.vals.push(x);\n                            }\n                        },\n                        value() {\n                            if (this.vals.length === 0) {\n                                return null;\n                            }\n                            this.vals.sort((a, b) => a - b);\n                            const i = (this.vals.length - 1) * q;\n                            return (this.vals[Math.floor(i)] + this.vals[Math.ceil(i)]) / 2.0;\n                        },\n                        format: formatter,\n                        numInputs: (attr != null) ? 0 : 1,\n                    };\n                };\n            };\n        },\n\n        runningStat(mode, ddof, formatter) {\n            if (mode == null) {\n                mode = 'mean';\n            }\n            if (ddof == null) {\n                ddof = 1;\n            }\n            if (formatter == null) {\n                formatter = usFmt;\n            }\n            return function (...args) {\n                const [attr] = args[0];\n                return function (data, rowKey, colKey) {\n                    return {\n                        attr,\n                        n: 0.0, m: 0.0, s: 0.0,\n                        push(record) {\n                            const x = parseFloat(record[attr]);\n                            if (isNaN(x)) {\n                                return;\n                            }\n                            this.n += 1.0;\n                            if (this.n === 1.0) {\n                                return this.m = x;\n                            } else {\n                                const m_new = this.m + ((x - this.m) / this.n);\n                                this.s = this.s + ((x - this.m) * (x - m_new));\n                                return this.m = m_new;\n                            }\n                        },\n                        value() {\n                            if (mode === 'mean') {\n                                if (this.n === 0) {\n                                    return 0 / 0;\n                                } else {\n                                    return this.m;\n                                }\n                            }\n                            if (this.n <= ddof) {\n                                return 0;\n                            }\n                            switch (mode) {\n                                case 'var':\n                                    return this.s / (this.n - ddof);\n                                case 'stdev':\n                                    return Math.sqrt(this.s / (this.n - ddof));\n                            }\n                        },\n                        format: formatter,\n                        numInputs: (attr != null) ? 0 : 1,\n                    };\n                };\n            };\n        },\n\n        sumOverSum(formatter) {\n            if (formatter == null) {\n                formatter = usFmt;\n            }\n            return function (...args) {\n                const [num, denom] = args[0];\n                return function (data, rowKey, colKey) {\n                    return {\n                        sumNum: 0,\n                        sumDenom: 0,\n                        push(record) {\n                            if (!isNaN(parseFloat(record[num]))) {\n                                this.sumNum += parseFloat(record[num]);\n                            }\n                            if (!isNaN(parseFloat(record[denom]))) {\n                                return this.sumDenom += parseFloat(record[denom]);\n                            }\n                        },\n                        value() {\n                            return this.sumNum / this.sumDenom;\n                        },\n                        format: formatter,\n                        numInputs: (num != null) && (denom != null) ? 0 : 2,\n                    };\n                };\n            };\n        },\n\n        sumOverSumBound80(upper, formatter) {\n            if (upper == null) {\n                upper = true;\n            }\n            if (formatter == null) {\n                formatter = usFmt;\n            }\n            return function (...args) {\n                const [num, denom] = args[0];\n                return function (data, rowKey, colKey) {\n                    return {\n                        sumNum: 0,\n                        sumDenom: 0,\n                        push(record) {\n                            if (!isNaN(parseFloat(record[num]))) {\n                                this.sumNum += parseFloat(record[num]);\n                            }\n                            if (!isNaN(parseFloat(record[denom]))) {\n                                return this.sumDenom += parseFloat(record[denom]);\n                            }\n                        },\n                        value() {\n                            const sign = upper ? 1 : -1;\n                            return ((0.821187207574908 / this.sumDenom) + (this.sumNum / this.sumDenom) + (1.2815515655446004 * sign *\n                                    Math.sqrt((0.410593603787454 / (this.sumDenom * this.sumDenom)) + ((this.sumNum * (1 - (this.sumNum / this.sumDenom))) / (this.sumDenom * this.sumDenom))))) /\n                                (1 + (1.642374415149816 / this.sumDenom));\n                        },\n                        format: formatter,\n                        numInputs: (num != null) && (denom != null) ? 0 : 2,\n                    };\n                };\n            };\n        },\n\n        fractionOf(wrapped, type, formatter) {\n            if (type == null) {\n                type = 'total';\n            }\n            if (formatter == null) {\n                formatter = usFmtPct;\n            }\n            return (...x) => (function (data, rowKey, colKey) {\n                return {\n                    selector: { total: [[], []], row: [rowKey, []], col: [[], colKey] }[type],\n                    inner: wrapped(...(x || []))(data, rowKey, colKey),\n                    push(record) {\n                        return this.inner.push(record);\n                    },\n                    format: formatter,\n                    value(id) {\n                        const agg = data.getAggregator(...([...this.selector, id] || []));\n                        return this.inner.value() / agg.inner.value();\n                    },\n                    numInputs: wrapped(...(x || []))().numInputs,\n                };\n            });\n        },\n    };\n\n    aggregatorTemplates.countUnique = f => aggregatorTemplates.uniques((x => x.length), f);\n    aggregatorTemplates.listUnique = s => aggregatorTemplates.uniques((x => x.sort(naturalSort).join(s)), (x => x));\n    aggregatorTemplates.max = f => aggregatorTemplates.extremes('max', f);\n    aggregatorTemplates.min = f => aggregatorTemplates.extremes('min', f);\n    aggregatorTemplates.first = f => aggregatorTemplates.extremes('first', f);\n    aggregatorTemplates.last = f => aggregatorTemplates.extremes('last', f);\n    aggregatorTemplates.median = f => aggregatorTemplates.quantile(0.5, f);\n    aggregatorTemplates.average = f => aggregatorTemplates.runningStat('mean', 1, f);\n    aggregatorTemplates.var = (ddof, f) => aggregatorTemplates.runningStat('var', ddof, f);\n    aggregatorTemplates.stdev = (ddof, f) => aggregatorTemplates.runningStat('stdev', ddof, f);\n\n    function makeAggregators(fmt, fmtInt, fmtPct) {\n        return {\n            'Count': aggregatorTemplates.count(fmtInt),\n            'Count Unique Values': aggregatorTemplates.countUnique(fmtInt),\n            'List Unique Values': aggregatorTemplates.listUnique(', '),\n            'Sum': aggregatorTemplates.sum(fmt),\n            'Integer Sum': aggregatorTemplates.sum(fmtInt),\n            'Average': aggregatorTemplates.average(fmt),\n            'Median': aggregatorTemplates.median(fmt),\n            'Sample Variance': aggregatorTemplates.var(1, fmt),\n            'Sample Standard Deviation': aggregatorTemplates.stdev(1, fmt),\n            'Minimum': aggregatorTemplates.min(fmt),\n            'Maximum': aggregatorTemplates.max(fmt),\n            'First': aggregatorTemplates.first(fmt),\n            'Last': aggregatorTemplates.last(fmt),\n            'Sum over Sum': aggregatorTemplates.sumOverSum(fmt),\n            '80% Upper Bound': aggregatorTemplates.sumOverSumBound80(true, fmt),\n            '80% Lower Bound': aggregatorTemplates.sumOverSumBound80(false, fmt),\n            'Sum as Fraction of Total': aggregatorTemplates.fractionOf(aggregatorTemplates.sum(), 'total', fmtPct),\n            'Sum as Fraction of Rows': aggregatorTemplates.fractionOf(aggregatorTemplates.sum(), 'row', fmtPct),\n            'Sum as Fraction of Columns': aggregatorTemplates.fractionOf(aggregatorTemplates.sum(), 'col', fmtPct),\n            'Count as Fraction of Total': aggregatorTemplates.fractionOf(aggregatorTemplates.count(), 'total', fmtPct),\n            'Count as Fraction of Rows': aggregatorTemplates.fractionOf(aggregatorTemplates.count(), 'row', fmtPct),\n            'Count as Fraction of Columns': aggregatorTemplates.fractionOf(aggregatorTemplates.count(), 'col', fmtPct),\n        };\n    }\n\n    //default aggregators & renderers use US naming and number formatting\n    const defaultAggregators = makeAggregators(usFmt, usFmtInt, usFmtPct);\n\n    const renderers = {\n        'Table'(data, opts) {\n            return pivotTableRenderer(data, opts);\n        },\n        'Table Barchart'(data, opts) {\n            return $(pivotTableRenderer(data, opts)).barchart();\n        },\n        'Heatmap'(data, opts) {\n            return $(pivotTableRenderer(data, opts)).heatmap('heatmap', opts);\n        },\n        'Row Heatmap'(data, opts) {\n            return $(pivotTableRenderer(data, opts)).heatmap('rowheatmap', opts);\n        },\n        'Col Heatmap'(data, opts) {\n            return $(pivotTableRenderer(data, opts)).heatmap('colheatmap', opts);\n        },\n    };\n\n    const locales = {\n        en: {\n            formatters: {\n                format: usFmt,\n                formatInt: usFmtInt,\n                formatPct: usFmtPct,\n            },\n            renderers,\n            localeStrings: {\n                renderError: 'An error occurred rendering the PivotTable results.',\n                computeError: 'An error occurred computing the PivotTable results.',\n                uiRenderError: 'An error occurred rendering the PivotTable UI.',\n                selectAll: 'Select All',\n                selectNone: 'Select None',\n                tooMany: '(too many to list)',\n                filterResults: 'Filter values',\n                apply: 'Apply',\n                cancel: 'Cancel',\n                totals: 'Totals', //for table renderer\n                vs: 'vs', //for gchart renderer\n                by: 'by', //for gchart renderer\n                rendererLabel: 'Renderer',\n                valuesLabel: 'Values',\n                fieldsLabel: 'Fields',\n                colsLabel: 'Columns',\n                rowsLabel: 'Rows',\n                groupsLabel: 'Groups',\n            },\n        },\n    };\n\n    for (const agg of Object.keys(defaultAggregators)) {\n        locales.en.localeStrings[agg] = agg;\n    }\n\n    //dateFormat deriver l10n requires month and day names to be passed in directly\n    const mthNamesEn = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n    const dayNamesEn = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n    const zeroPad = (number, padding = 2) => ('0' + number).substr(-padding, padding);\n\n    const derivers = {\n        bin(col, binWidth) {\n            return record => record[col] - (record[col] % binWidth);\n        },\n        dateFormat(col, formatString, utcOutput, mthNames, dayNames) {\n            if (utcOutput == null) {\n                utcOutput = false;\n            }\n            if (mthNames == null) {\n                mthNames = mthNamesEn;\n            }\n            if (dayNames == null) {\n                dayNames = dayNamesEn;\n            }\n            const utc = utcOutput ? 'UTC' : '';\n            return function (record) { //thanks http://stackoverflow.com/a/12213072/112871\n                const date = new Date(Date.parse(record[col]));\n                if (isNaN(date)) {\n                    return '';\n                }\n                return formatString.replace(/%(.)/g, function (m, p) {\n                    switch (p) {\n                        case 'y':\n                            return date[`get${utc}FullYear`]();\n                        case 'm':\n                            return zeroPad(date[`get${utc}Month`]() + 1);\n                        case 'n':\n                            return mthNames[date[`get${utc}Month`]()];\n                        case 'd':\n                            return zeroPad(date[`get${utc}Date`]());\n                        case 'w':\n                            return dayNames[date[`get${utc}Day`]()];\n                        case 'x':\n                            return date[`get${utc}Day`]();\n                        case 'H':\n                            return zeroPad(date[`get${utc}Hours`]());\n                        case 'M':\n                            return zeroPad(date[`get${utc}Minutes`]());\n                        case 'S':\n                            return zeroPad(date[`get${utc}Seconds`]());\n                        default:\n                            return '%' + p;\n                    }\n                });\n            };\n        },\n    };\n\n    const rx = /(\\d+)|(\\D+)/g;\n    const rd = /\\d/;\n    const rz = /^0/;\n    const naturalSort = (as, bs, nulls_first) => {\n        //nulls first\n        if (nulls_first == null) {\n            nulls_first = true;\n        }\n        const nf = nulls_first ? 1 : -1;\n        if ((bs != null) && (as == null)) {\n            return -1 * nf;\n        }\n        if ((as != null) && (bs == null)) {\n            return 1 * nf;\n        }\n\n        //then raw NaNs\n        if ((typeof as === 'number') && isNaN(as)) {\n            return -1;\n        }\n        if ((typeof bs === 'number') && isNaN(bs)) {\n            return 1;\n        }\n\n        //numbers and numbery strings group together\n        const nas = +as;\n        const nbs = +bs;\n        if (nas < nbs) {\n            return -1;\n        }\n        if (nas > nbs) {\n            return 1;\n        }\n\n        //within that, true numbers before numbery strings\n        if ((typeof as === 'number') && (typeof bs !== 'number')) {\n            return -1;\n        }\n        if ((typeof bs === 'number') && (typeof as !== 'number')) {\n            return 1;\n        }\n        if ((typeof as === 'number') && (typeof bs === 'number')) {\n            return 0;\n        }\n\n        // 'Infinity' is a textual number, so less than 'A'\n        if (isNaN(nbs) && !isNaN(nas)) {\n            return -1;\n        }\n        if (isNaN(nas) && !isNaN(nbs)) {\n            return 1;\n        }\n\n        //finally, \"smart\" string sorting per http://stackoverflow.com/a/4373421/112871\n        let a = String(as);\n        let b = String(bs);\n        if (a === b) {\n            return 0;\n        }\n        if (!rd.test(a) || !rd.test(b)) {\n            return (a > b ? 1 : -1);\n        }\n\n        //special treatment for strings containing digits\n        a = a.match(rx); //create digits vs. non-digit chunks and iterate through\n        b = b.match(rx);\n        while (a.length && b.length) {\n            const a1 = a.shift();\n            const b1 = b.shift();\n            if (a1 !== b1) {\n                if (rd.test(a1) && rd.test(b1)) { //both are digit chunks\n                    return a1.replace(rz, '.0') - b1.replace(rz, '.0');\n                } else {\n                    return (a1 > b1 ? 1 : -1);\n                }\n            }\n        }\n        return a.length - b.length;\n    };\n\n    const sortAs = function (order) {\n        const mapping = {};\n        const l_mapping = {}; // sort lowercased keys similarly\n        for (let i in order) {\n            const x = order[i];\n            mapping[x] = i;\n            if (typeof x === 'string') {\n                l_mapping[x.toLowerCase()] = i;\n            }\n        }\n        return function (a, b) {\n            if ((mapping[a] != null) && (mapping[b] != null)) {\n                return mapping[a] - mapping[b];\n            } else if (mapping[a] != null) {\n                return -1;\n            } else if (mapping[b] != null) {\n                return 1;\n            } else if ((l_mapping[a] != null) && (l_mapping[b] != null)) {\n                return l_mapping[a] - l_mapping[b];\n            } else if (l_mapping[a] != null) {\n                return -1;\n            } else if (l_mapping[b] != null) {\n                return 1;\n            } else {\n                return naturalSort(a, b);\n            }\n        };\n    };\n\n    function getSort(sorters, attr) {\n        if (sorters != null) {\n            if ($.isFunction(sorters)) {\n                const sort = sorters(attr);\n                if ($.isFunction(sort)) {\n                    return sort;\n                }\n            } else if (sorters[attr] != null) {\n                return sorters[attr];\n            }\n        }\n        return naturalSort;\n    }\n\n    const filterByLength = (keys, length) => keys.filter(x => x.length === length);\n\n    const subarrays = array => array.map((d, i) => array.slice(0, i + 1));  // [1,2,3] => [[1], [1,2], [1,2,3]]\n\n    function normalizeData(data) {\n        Object.entries(data).forEach(([key, value]) => {\n            if (value instanceof Date) {\n                data[key] = value.toISOString();\n            }\n        });\n\n        return data;\n    }\n\n    /*\n    Data Model class\n    */\n\n    class PivotData {\n        constructor(input, opts) {\n            this.arrSort = this.arrSort.bind(this);\n            this.sortKeys = this.sortKeys.bind(this);\n            this.getColKeys = this.getColKeys.bind(this);\n            this.getRowKeys = this.getRowKeys.bind(this);\n            this.getAggregator = this.getAggregator.bind(this);\n            if (opts == null) {\n                opts = {};\n            }\n            this.input = input;\n            if (!Array.isArray(opts.aggregator)) {\n                opts.aggregator = opts.aggregator != null ? opts.aggregator : aggregatorTemplates.count()();\n                opts.aggregator = [opts.aggregator];\n            }\n            this.aggregator = opts.aggregator != null ? opts.aggregator : [aggregatorTemplates.count()()];\n            this.aggregatorName = opts.aggregatorName != null ? opts.aggregatorName : 'Count';\n            this.colAttrs = opts.cols != null ? opts.cols : [];\n            this.rowAttrs = opts.rows != null ? opts.rows : [];\n            this.valAttrs = opts.vals != null ? opts.vals : [];\n            this.sorters = opts.sorters != null ? opts.sorters : {};\n            this.rowOrder = opts.rowOrder != null ? opts.rowOrder : 'key_a_to_z';\n            this.colOrder = opts.colOrder != null ? opts.colOrder : 'key_a_to_z';\n            this.derivedAttributes = opts.derivedAttributes != null ? opts.derivedAttributes : {};\n            this.filter = opts.filter != null ? opts.filter : (() => true);\n            this.tree = {};\n            this.rowKeys = [];\n            this.colKeys = [];\n            this.rowTotals = {};\n            this.colTotals = {};\n            this.allTotal = this.aggregator.map(agg => agg(this, [], []));\n            this.sorted = false;\n            this.aggregatorsLabel = opts.aggregatorsLabel != null ? opts.aggregatorsLabel : [];\n            this.grouping = opts.grouping != null ? opts.grouping : false;\n            this.rowGroupBefore = (opts.grouping != null ? opts.grouping.rowGroupBefore : undefined) != null ? (opts.grouping != null ? opts.grouping.rowGroupBefore : undefined) : true;\n            this.colGroupBefore = (opts.grouping != null ? opts.grouping.colGroupBefore : undefined) != null ? (opts.grouping != null ? opts.grouping.colGroupBefore : undefined) : false;\n\n            // iterate through input, accumulating data for cells\n            PivotData.forEachRecord(this.input, this.derivedAttributes, record => {\n                if (this.filter(record)) {\n                    return this.processRecord(normalizeData(record));\n                }\n            });\n        }\n\n        //can handle arrays or jQuery selections of tables\n        static forEachRecord(input, derivedAttributes, f) {\n            let addRecord;\n            if ($.isEmptyObject(derivedAttributes)) {\n                addRecord = f;\n            } else {\n                addRecord = function (record) {\n                    for (let k in derivedAttributes) {\n                        const v = derivedAttributes[k];\n                        const left = v(record);\n                        if (left != null) {\n                            record[k] = left;\n                        }\n                    }\n                    return f(record);\n                };\n            }\n\n            //if it's a function, have its calls us back\n            if ($.isFunction(input)) {\n                return input(addRecord);\n            } else if ($.isArray(input)) {\n                if ($.isArray(input[0])) { //array of arrays\n                    return (() => {\n                        const result = [];\n                        for (let i of Object.keys(input || {})) {\n                            const compactRecord = input[i];\n                            if (i > 0) {\n                                const record = {};\n                                for (let j of Object.keys(input[0] || {})) {\n                                    const k = input[0][j];\n                                    record[k] = compactRecord[j];\n                                }\n                                result.push(addRecord(record));\n                            }\n                        }\n                        return result;\n                    })();\n                } else { //array of objects\n                    return (() => {\n                        const result1 = [];\n                        for (let record of input) {\n                            result1.push(addRecord(record));\n                        }\n                        return result1;\n                    })();\n                }\n            } else if (input instanceof $) {\n                const tblCols = [];\n                $('thead > tr > th', input).each(function (i) {\n                    return tblCols.push($(this).text());\n                });\n                return $('tbody > tr', input).each(function (i) {\n                    const record = {};\n                    $('td', this).each(function (j) {\n                        return record[tblCols[j]] = $(this).text();\n                    });\n                    return addRecord(record);\n                });\n            } else {\n                throw new Error('unknown input format');\n            }\n        }\n\n        forEachMatchingRecord(criteria, callback) {\n            return PivotData.forEachRecord(this.input, this.derivedAttributes, record => {\n                if (!this.filter(record)) {\n                    return;\n                }\n                for (let k in criteria) {\n                    const v = criteria[k];\n                    if (v !== (record[k] != null ? record[k] : 'null')) {\n                        return;\n                    }\n                }\n                return callback(record);\n            });\n        }\n\n        arrSort(attrs, nulls_first) {\n\n            const sortersArr = [];\n            for (const a of attrs) {\n                sortersArr.push(getSort(this.sorters, a));\n            }\n\n            return function (a, b) {\n                for (let i of Object.keys(sortersArr || {})) {\n                    const sorter = sortersArr[i];\n                    const comparison = sorter(a[i], b[i], nulls_first);\n                    if (comparison !== 0) {\n                        return comparison;\n                    }\n                }\n                return 0;\n            };\n        }\n\n        sortKeys() {\n            if (!this.sorted) {\n                this.sorted = true;\n                const v = (r, c) => this.getAggregator(r, c).value();\n                switch (this.rowOrder) {\n                    case 'value_a_to_z':\n                        this.rowKeys.sort((a, b) => naturalSort(v(a, []), v(b, [])));\n                        break;\n                    case 'value_z_to_a':\n                        this.rowKeys.sort((a, b) => -naturalSort(v(a, []), v(b, [])));\n                        break;\n                    default:\n                        this.rowKeys.sort(this.arrSort(this.rowAttrs, this.rowGroupBefore));\n                }\n                switch (this.colOrder) {\n                    case 'value_a_to_z':\n                        return this.colKeys.sort((a, b) => naturalSort(v([], a), v([], b)));\n                    case 'value_z_to_a':\n                        return this.colKeys.sort((a, b) => -naturalSort(v([], a), v([], b)));\n                    default:\n                        return this.colKeys.sort(this.arrSort(this.colAttrs, this.colGroupBefore));\n                }\n            }\n        }\n\n        getColKeys(all_keys) {\n            if (all_keys == null) {\n                all_keys = false;\n            }\n            this.sortKeys();\n            if (all_keys) {\n                return this.colKeys;\n            } else {\n                return filterByLength(this.colKeys, this.colAttrs.length);\n            }\n        }\n\n        getRowKeys(all_keys) {\n            if (all_keys == null) {\n                all_keys = false;\n            }\n            this.sortKeys();\n            if (all_keys) {\n                return this.rowKeys;\n            } else {\n                return filterByLength(this.rowKeys, this.rowAttrs.length);\n            }\n        }\n\n        processRecord(record) { //this code is called in a tight loop\n            let x;\n            let colKeys = [];\n            let rowKeys = [];\n            for (x of this.colAttrs) {\n                colKeys.push(record[x] != null ? record[x] : 'null');\n            }\n            for (x of this.rowAttrs) {\n                rowKeys.push(record[x] != null ? record[x] : 'null');\n            }\n            colKeys = this.grouping && colKeys.length ? subarrays(colKeys) : [colKeys];\n            rowKeys = this.grouping && rowKeys.length ? subarrays(rowKeys) : [rowKeys];\n\n            this.aggregator.forEach((agg, id) => {\n                return this.allTotal[id].push(record);\n            });\n\n            const result = [];\n            for (let j in rowKeys) {\n                const rowKey = rowKeys[j];\n                const flatRowKey = rowKey.join(String.fromCharCode(0));\n\n                const result1 = [];\n                for (let i in colKeys) {\n                    const colKey = colKeys[i];\n                    const flatColKey = colKey.join(String.fromCharCode(0));\n\n                    if (rowKey.length !== 0) {\n                        if (!this.rowTotals[flatRowKey]) {\n                            this.rowKeys.push(rowKey);\n                            this.rowTotals[flatRowKey] = this.aggregator.map(agg => agg(this, rowKey, []));\n                        }\n                        this.rowTotals[flatRowKey].forEach((agg, id) => {\n                            if (!this.grouping || (colKey.length === 1)) {\n                                return agg.push(record);\n                            }\n                        });\n                    }\n\n                    if (colKey.length !== 0) {\n                        if (!this.colTotals[flatColKey]) {\n                            this.colKeys.push(colKey);\n                            this.colTotals[flatColKey] = this.aggregator.map(agg => agg(this, [], colKey));\n                        }\n                        this.colTotals[flatColKey].forEach((agg, id) => {\n                            if (!this.grouping || (rowKey.length === 1)) {\n                                return agg.push(record);\n                            }\n                        });\n                    }\n\n                    if ((colKey.length !== 0) && (rowKey.length !== 0)) {\n                        if (!this.tree[flatRowKey]) {\n                            this.tree[flatRowKey] = {};\n                        }\n                        if (!this.tree[flatRowKey][flatColKey]) {\n                            this.tree[flatRowKey][flatColKey] = this.aggregator.map(agg => agg(this, rowKey, colKey));\n                        }\n                        result1.push(this.tree[flatRowKey][flatColKey].forEach((agg, id) => agg.push(record)));\n                    } else {\n                        result1.push(undefined);\n                    }\n                }\n                result.push(result1);\n            }\n            return result;\n        }\n\n        getAggregator(rowKey, colKey, id) {\n            let agg;\n            if (id == null) {\n                id = 0;\n            }\n            const flatRowKey = rowKey.join(String.fromCharCode(0));\n            const flatColKey = colKey.join(String.fromCharCode(0));\n            if ((rowKey.length === 0) && (colKey.length === 0)) {\n                agg = this.allTotal[id];\n            } else if (rowKey.length === 0) {\n                agg = this.colTotals[flatColKey] && this.colTotals[flatColKey][id];\n            } else if (colKey.length === 0) {\n                agg = this.rowTotals[flatRowKey] && this.rowTotals[flatRowKey][id];\n            } else {\n                agg = this.tree[flatRowKey][flatColKey] && this.tree[flatRowKey][flatColKey][id];\n            }\n            return agg != null ? agg : {\n                value() {\n                    return null;\n                }, format() {\n                    return '';\n                },\n            };\n        }\n    }\n\n    const renameAggregators = (aggregators) => aggregators.map((agg, id) =>\n        (agg.displayName = String.fromCharCode(97 + id).toUpperCase()));\n\n    const fieldsType = {\n        string: 'String',\n        number: 'Number',\n        date: 'Date',\n        time: 'Time',\n        datetime: 'Datetime',\n        boolean: 'Boolean',\n        integer: 'Integer',\n    };\n\n    //expose these to the outside world\n    $.pivotUtilities = {\n        aggregatorTemplates, aggregators: defaultAggregators, renderers, cellRenderers, derivers, locales, fieldsType,\n        zeroPad, naturalSort, numberFormat, sortAs, PivotData,\n    };\n\n    /*\n    Default Renderer for hierarchical table layout\n    */\n\n    function pivotTableRenderer(pivotData, opts) {\n\n        let agg, aggregator, colKey, getClickHandler, i, id, j, td, th, totalAggregator, tr, val, x;\n        const defaults = {\n            table: {\n                clickCallback: null,\n                rowTotals: true,\n                colTotals: true,\n            },\n            localeStrings: {\n                totals: 'Totals',\n            },\n\n            typeCellRenderer: cellRenderers.text,\n            headCellRenderer: cellRenderers.text,\n            dataCellRenderer: cellRenderers.text,\n\n            fieldsType: {},\n        };\n\n        opts = $.extend(true, {}, defaults, opts);\n\n        const {\n            colAttrs,\n        } = pivotData;\n        const {\n            rowAttrs,\n        } = pivotData;\n        const rowKeys = pivotData.getRowKeys(true);\n        const colKeys = pivotData.getColKeys(true);\n\n        if (opts.table.clickCallback) {\n            getClickHandler = function (value, rowValues, colValues) {\n                let attr, i;\n                const filters = {};\n                for (i of Object.keys(colAttrs || {})) {\n                    attr = colAttrs[i];\n                    if (colValues[i] != null) {\n                        filters[attr] = colValues[i];\n                    }\n                }\n                for (i of Object.keys(rowAttrs || {})) {\n                    attr = rowAttrs[i];\n                    if (rowValues[i] != null) {\n                        filters[attr] = rowValues[i];\n                    }\n                }\n                return e => opts.table.clickCallback(e, value, filters, pivotData);\n            };\n        }\n\n        const compactLayout = (opts.table.compactLayout != null ? opts.table.compactLayout : true) && pivotData.grouping;\n        const rowExpandHandler = compactLayout ? expandRowCol : pivotData.rowGroupBefore ? expandWithSpan : expandRowsGroupAfter;\n\n        const rowsExpandHandler = getExpandHandler(rowKeys, true, rowExpandHandler.bind(pivotData));\n        const colsExpandHandler = getExpandHandler(colKeys, false, expandWithSpan.bind(pivotData));\n\n        //now actually build the outpu\n        const result = document.createElement('table');\n        result.className = 'pvtTable';\n\n        //helper function for setting row/col-span in pivotTableRenderer\n        const spanSize = function (arr, i, j) {\n            let x;\n            if (i !== 0) {\n                let asc, end;\n                let noDraw = true;\n                for (x = 0, end = j, asc = 0 <= end; asc ? x <= end : x >= end; asc ? x++ : x--) {\n                    if (arr[i - 1][x] !== arr[i][x]) {\n                        noDraw = false;\n                    }\n                }\n                if (noDraw) {\n                    return -1; //do not draw cell\n                }\n            }\n            let len = 0;\n            while ((i + len) < arr.length) {\n                let asc1, end1;\n                let stop = false;\n                for (x = 0, end1 = j, asc1 = 0 <= end1; asc1 ? x <= end1 : x >= end1; asc1 ? x++ : x--) {\n                    if (arr[i][x] !== arr[i + len][x]) {\n                        stop = true;\n                    }\n                }\n                if (stop) {\n                    break;\n                }\n                len++;\n            }\n            return len;\n        };\n\n        //the first few rows are for col headers\n        const thead = document.createElement('thead');\n        for (j of Object.keys(colAttrs || {})) {\n            const c = colAttrs[j];\n            tr = document.createElement('tr');\n            if ((parseInt(j) === 0) && (rowAttrs.length !== 0)) {\n                th = document.createElement('th');\n                th.setAttribute('colspan', rowAttrs.length);\n                th.setAttribute('rowspan', colAttrs.length);\n                tr.appendChild(th);\n            }\n            th = document.createElement('th');\n            th.className = 'pvtAxisLabel';\n            th.appendChild(opts.typeCellRenderer.call(opts, c));\n            if (pivotData.grouping && (j < (colAttrs.length - 1))) {\n                th.onclick = getExpandAllHandler(pivotData, +j, false);\n                th.className += ` open level${j}`;\n            }\n            tr.appendChild(th);\n            for (i of Object.keys(colKeys || {})) {\n                colKey = colKeys[i];\n                x = spanSize(colKeys, parseInt(i), parseInt(j));\n                if (x !== -1) {\n                    th = document.createElement('th');\n                    th.className = 'pvtColLabel';\n                    th.className += ` col${pivotData.colGroupBefore ? +i : (+i + x) - 1}`;\n                    th.appendChild(opts.headCellRenderer.call(opts, colKey[j], c));\n                    th.setAttribute('colspan', x * Math.max(1, pivotData.aggregator.length));\n                    if ((parseInt(j) === (colAttrs.length - 1)) && (rowAttrs.length !== 0)) {\n                        th.setAttribute('rowspan', 2);\n                    }\n                    if (pivotData.grouping && (j < (colAttrs.length - 1)) && colKey[j]) {\n                        th.className += ' pvtSubtotal open';\n                        th.setAttribute('colspan', x * Math.max(1, pivotData.aggregator.length));\n                        th.onclick = colsExpandHandler;\n                    }\n                    tr.appendChild(th);\n                }\n            }\n            if ((parseInt(j) === 0) && opts.table.rowTotals) {\n                th = document.createElement('th');\n                th.className = 'pvtTotalLabel pvtRowTotalLabel';\n                th.innerHTML = opts.localeStrings.totals;\n                th.setAttribute('colspan', Math.max(1, pivotData.aggregator.length));\n                th.setAttribute('rowspan', colAttrs.length + (rowAttrs.length === 0 ? 0 : 1));\n                tr.appendChild(th);\n            }\n            thead.appendChild(tr);\n        }\n\n        //then a row for row header headers\n        if (rowAttrs.length !== 0) {\n            tr = document.createElement('tr');\n            for (i of Object.keys(rowAttrs || {})) {\n                const r = rowAttrs[i];\n                th = document.createElement('th');\n                th.className = 'pvtAxisLabel';\n                th.appendChild(opts.typeCellRenderer.call(opts, r));\n                if (pivotData.grouping && (i < (rowAttrs.length - 1))) {\n                    th.className += ` open level${i}`;\n                    th.onclick = getExpandAllHandler(pivotData, +i, true);\n                }\n                tr.appendChild(th);\n            }\n            th = document.createElement('th');\n            if (colAttrs.length === 0) {\n                th.className = 'pvtTotalLabel pvtRowTotalLabel';\n                th.innerHTML = opts.localeStrings.totals;\n                th.setAttribute('colspan', pivotData.aggregator.length);\n            }\n            tr.appendChild(th);\n            thead.appendChild(tr);\n        }\n        result.appendChild(thead);\n\n        //now the actual data rows, with their row headers and totals\n        const tbody = document.createElement('tbody');\n\n        if (pivotData.aggregatorsLabel && (pivotData.aggregatorsLabel.length > 1)) {\n            let lbl;\n            tr = document.createElement('tr');\n            th = document.createElement('th');\n            const colspan = rowAttrs.length + (colAttrs.length === 0 ? 0 : 1);\n            th.setAttribute('colspan', colspan);\n            tr.appendChild(th);\n\n            for (j of Object.keys(colKeys || {})) { //this is a tight loop\n                colKey = colKeys[j];\n                for (lbl of pivotData.aggregatorsLabel) {\n                    th = document.createElement('th');\n                    th.className = `pvtAggregatorLabel col${j}`;\n                    th.textContent = lbl;\n                    tr.appendChild(th);\n                }\n            }\n\n            for (lbl of pivotData.aggregatorsLabel) {\n                th = document.createElement('th');\n                th.className = 'pvtAggregatorLabel';\n                th.textContent = lbl;\n                tr.appendChild(th);\n            }\n\n            tbody.appendChild(tr);\n        }\n\n\n        for (i of Object.keys(rowKeys || {})) {\n            const rowKey = rowKeys[i];\n            tr = document.createElement('tr');\n            const rowGap = rowAttrs.length - rowKey.length;\n            tr.className = rowGap ? `pvtSubtotal level${rowKey.length}` : 'pvtData';\n            for (j of Object.keys(rowKey || {})) {\n                const txt = rowKey[j];\n                if (compactLayout && (j < (rowKey.length - 1))) {\n                    continue;\n                }\n                x = compactLayout ? 1 : spanSize(rowKeys, parseInt(i), parseInt(j));\n                if (x !== -1) {\n                    th = document.createElement('th');\n                    th.className = 'pvtRowLabel';\n                    th.className += ` row${pivotData.rowGroupBefore ? +i : (+i + x) - 1}`;\n                    th.appendChild(opts.headCellRenderer.call(opts, txt, rowAttrs[j]));\n                    th.setAttribute('rowspan', x);\n                    if (compactLayout) {\n                        th.colSpan = rowAttrs.length;\n                        th.style.paddingLeft = 5 + (parseInt(j) * 20) + 'px';\n                    }\n                    if (pivotData.grouping && (j < (rowAttrs.length - 1))) {\n                        th.className += ' open';\n                        th.onclick = rowsExpandHandler;\n                    }\n                    tr.appendChild(th);\n                }\n            }\n\n            if (!compactLayout && rowGap) {\n                th = document.createElement('th');\n                th.colSpan = rowGap;\n                th.textContent = `Total (${rowKey[j]})`;\n                tr.appendChild(th);\n            }\n\n            if (colAttrs.length) {\n                th.colSpan++;\n            }\n\n            for (j of Object.keys(colKeys || {})) { //this is a tight loop\n                colKey = colKeys[j];\n                for (id = 0; id < pivotData.aggregator.length; id++) {\n                    agg = pivotData.aggregator[id];\n                    aggregator = pivotData.getAggregator(rowKey, colKey, id);\n                    val = aggregator.value(id);\n                    td = document.createElement('td');\n                    if (!rowGap) {\n                        td.className = 'pvtVal ';\n                    }\n                    td.className += `row${i} col${j}`;\n                    if (colAttrs.length - colKey.length) {\n                        td.className = `pvtSubtotal level${colKey.length} row${i} col${j}`;\n                    }\n                    td.appendChild(opts.dataCellRenderer.call(opts, aggregator.format(val, opts.fieldsType[aggregator?.attr]), aggregator?.attr, rowKey, colKey));\n                    td.setAttribute('data-value', val);\n                    if (getClickHandler != null) {\n                        td.onclick = getClickHandler(val, rowKey, colKey);\n                    }\n                    tr.appendChild(td);\n                }\n            }\n\n            if (opts.table.rowTotals || (colAttrs.length === 0)) {\n                for (id = 0; id < pivotData.aggregator.length; id++) {\n                    agg = pivotData.aggregator[id];\n                    totalAggregator = pivotData.getAggregator(rowKey, [], id);\n                    val = totalAggregator.value(id);\n                    td = document.createElement('td');\n                    td.className = 'pvtTotal rowTotal';\n                    td.append(opts.dataCellRenderer.call(opts, totalAggregator.format(val, opts.fieldsType[totalAggregator?.attr]), totalAggregator?.attr, rowKey, []));\n                    td.setAttribute('data-value', val);\n                    if (getClickHandler != null) {\n                        td.onclick = getClickHandler(val, rowKey, []);\n                    }\n                    td.setAttribute('data-for', 'row' + i);\n                    tr.appendChild(td);\n                }\n            }\n            tbody.appendChild(tr);\n        }\n\n        //finally, the row for col totals, and a grand total\n        if (opts.table.colTotals || (rowAttrs.length === 0)) {\n            tr = document.createElement('tr');\n            if (opts.table.colTotals || (rowAttrs.length === 0)) {\n                th = document.createElement('th');\n                th.className = 'pvtTotalLabel pvtColTotalLabel';\n                th.innerHTML = opts.localeStrings.totals;\n                th.setAttribute('colspan', rowAttrs.length + (colAttrs.length === 0 ? 0 : 1));\n                tr.appendChild(th);\n            }\n            for (j of Object.keys(colKeys || {})) {\n                colKey = colKeys[j];\n                for (id = 0; id < pivotData.aggregator.length; id++) {\n                    agg = pivotData.aggregator[id];\n                    totalAggregator = pivotData.getAggregator([], colKey, id);\n                    val = totalAggregator.value(id);\n                    td = document.createElement('td');\n                    td.className = `pvtTotal colTotal col${j}`;\n                    if (colKey.length !== colAttrs.length) {\n                        td.className += ` pvtSubtotal level${colKey.length}`;\n                    }\n                    td.append(opts.dataCellRenderer.call(opts, totalAggregator.format(val, opts.fieldsType[totalAggregator?.attr]), totalAggregator?.attr, [], colKey));\n                    td.setAttribute('data-value', val);\n                    if (getClickHandler != null) {\n                        td.onclick = getClickHandler(val, [], colKey);\n                    }\n                    td.setAttribute('data-for', 'col' + j);\n                    tr.appendChild(td);\n                }\n            }\n            if (opts.table.rowTotals || (colAttrs.length === 0)) {\n                for (id = 0; id < pivotData.aggregator.length; id++) {\n                    agg = pivotData.aggregator[id];\n                    totalAggregator = pivotData.getAggregator([], [], id);\n                    val = totalAggregator.value(id);\n                    td = document.createElement('td');\n                    td.className = 'pvtGrandTotal';\n                    td.append(opts.dataCellRenderer.call(opts, totalAggregator.format(val, opts.fieldsType[totalAggregator?.attr]), totalAggregator?.attr, [], []));\n                    td.setAttribute('data-value', val);\n                    if (getClickHandler != null) {\n                        td.onclick = getClickHandler(val, [], []);\n                    }\n                    tr.appendChild(td);\n                }\n            }\n            tbody.appendChild(tr);\n        }\n        result.appendChild(tbody);\n\n        //squirrel this away for later\n        result.setAttribute('data-numrows', rowKeys.length);\n        result.setAttribute('data-numcols', colKeys.length);\n\n        return result;\n    }\n\n    /*\n    Pivot Table core: create PivotData object and call Renderer on it\n    */\n\n    $.fn.pivot = function (input, inputOpts, locale) {\n        let e;\n        if (locale == null) {\n            locale = 'en';\n        }\n        if ((locales[locale] == null)) {\n            locale = 'en';\n        }\n        localeGlobal = locale;\n        inputOpts = inputOpts || {};\n        const defaults = {\n            cols: [], rows: [], vals: [],\n            rowOrder: 'key_a_to_z', colOrder: 'key_a_to_z',\n            dataClass: PivotData,\n            filter() {\n                return true;\n            },\n            aggregator: aggregatorTemplates.count()(),\n            aggregatorName: 'Count',\n            sorters: {},\n            derivedAttributes: {},\n            renderer: pivotTableRenderer,\n        };\n\n        const localeStrings = $.extend(true, {}, locales.en.localeStrings, locales[locale].localeStrings);\n        const localeDefaults = {\n            rendererOptions: { localeStrings },\n            localeStrings,\n        };\n\n        const opts = $.extend(true, {}, localeDefaults, $.extend({}, defaults, inputOpts));\n\n        let result;\n        inputOpts.pivotData = null;\n        try {\n            const pivotData = new opts.dataClass(input, opts);\n            try {\n                result = opts.renderer(pivotData, opts.rendererOptions);\n                inputOpts.pivotData = pivotData;\n            } catch (error) {\n                e = error;\n                if (typeof console !== 'undefined' && console !== null) {\n                    console.error(e.stack);\n                }\n                result = $('<span>').html(opts.localeStrings.renderError);\n            }\n        } catch (error1) {\n            e = error1;\n            if (typeof console !== 'undefined' && console !== null) {\n                console.error(e.stack);\n            }\n            result = $('<span>').html(opts.localeStrings.computeError);\n        }\n\n        const x = this[0];\n        while (x.hasChildNodes()) {\n            x.removeChild(x.lastChild);\n        }\n        return this.append(result);\n    };\n\n    /*\n    Pivot Table UI: calls the Pivot Table core above with options set by user\n    */\n\n    $.fn.pivotUI = function (input, inputOpts, overwrite, locale) {\n        let opts;\n        let a, c;\n        if (overwrite == null) {\n            overwrite = false;\n        }\n        if (locale == null) {\n            locale = 'fr';\n        }\n        if ((locales[locale] == null)) {\n            locale = 'en';\n        }\n\n        const defaults = {\n            derivedAttributes: {},\n            aggregators: defaultAggregators,\n            renderers: locales[locale].renderers,\n            hiddenAttributes: [],\n            hiddenFromAggregators: [],\n            hiddenFromDragDrop: [],\n            menuLimit: 500,\n            cols: [], rows: [], vals: [],\n            rowOrder: 'key_a_to_z', colOrder: 'key_a_to_z',\n            dataClass: PivotData,\n            exclusions: {},\n            inclusions: {},\n            unusedAttrsVertical: 85,\n            autoSortUnusedAttrs: false,\n            onRefresh: null,\n            showUI: true,\n            filter() {\n                return true;\n            },\n            sorters: {},\n            multiple: true,\n            parametersActive: false,\n        };\n\n        let itemsId = 0;\n        let aggregators = [];\n        const localeStrings = $.extend(true, {}, locales.en.localeStrings, locales[locale].localeStrings);\n        const localeDefaults = {\n            rendererOptions: { localeStrings },\n            localeStrings,\n        };\n\n        const existingOpts = this.data('pivotUIOptions');\n        if ((existingOpts == null) || overwrite) {\n            opts = $.extend(true, {}, localeDefaults, $.extend({}, defaults, inputOpts));\n        } else {\n            opts = existingOpts;\n        }\n\n        if (!inputOpts?.aggregators && locales[locale].formatters) {\n            opts.aggregators = makeAggregators(\n                locales[locale].formatters.format,\n                locales[locale].formatters.formatInt,\n                locales[locale].formatters.formatPct);\n        }\n\n        try {\n            // do a first pass on the data to cache a materialized copy of any\n            // function-valued inputs and to compute dimension cardinalities\n            let attr, i, unusedAttrsVerticalAutoCutoff, x;\n            const attrValues = {};\n            const materializedInput = [];\n            let recordsProcessed = 0;\n            PivotData.forEachRecord(input, opts.derivedAttributes, function (record) {\n                let attr;\n                if (!opts.filter(record)) {\n                    return;\n                }\n                materializedInput.push(record);\n                for (attr of Object.keys(record || {})) {\n                    if ((attrValues[attr] == null)) {\n                        attrValues[attr] = {};\n                        if (recordsProcessed > 0) {\n                            attrValues[attr]['null'] = recordsProcessed;\n                        }\n                    }\n                }\n                for (attr in attrValues) {\n                    const value = record[attr] != null ? record[attr] : 'null';\n                    if (attrValues[attr][value] == null) {\n                        attrValues[attr][value] = 0;\n                    }\n                    attrValues[attr][value]++;\n                }\n                return recordsProcessed++;\n            });\n\n            const uiContainer = $('<div>').addClass('pvtUi');\n\n            const uiMenu = $('<div>').addClass('pvtUiMenu');\n            const uiParameters = $('<div>').addClass('pvtUiParameters');\n            const uiPivotContainer = $('<div>').addClass('pvtUiContainer');\n\n            const uiButtonColumns = $('<div>')\n                .addClass('pvtUiVerticalButton')\n                .addClass('pvtUiButtonColumns')\n                .addClass('active')\n                .text(localeStrings.colsLabel)\n                .on('click', function () {\n                    opts.parametersActive = !opts.parametersActive;\n                    if (opts.parametersActive) {\n                        uiButtonColumns.addClass('active');\n                        return uiParameters.show();\n                    } else {\n                        uiButtonColumns.removeClass('active');\n                        return uiParameters.hide();\n                    }\n                })\n                .appendTo(uiMenu);\n\n            const uiButtonGroups = $('<div>')\n                .addClass('pvtUiVerticalButton')\n                .addClass('pvtUiButtonGroups')\n                .text(localeStrings.groupsLabel)\n                .on('click', function () {\n                    if (opts.grouping) {\n                        uiButtonGroups.removeClass('active');\n                        opts.grouping = false;\n                    } else {\n                        uiButtonGroups.addClass('active');\n                        opts.grouping = {\n                            colGroupBefore: false,\n                        };\n                    }\n                    return refresh();\n                })\n                .appendTo(uiMenu);\n\n            uiContainer\n                .append(uiMenu)\n                .append(uiParameters)\n                .append(uiPivotContainer);\n\n            //# Render type\n            $('<div>')\n                .addClass('pvtParameterLabel')\n                .appendTo(uiParameters)\n                .text(localeStrings.rendererLabel);\n            let pvtRenderType = $('<div>')\n                .addClass('pvtRendererType')\n                .addClass('pvtParameter')\n                .appendTo(uiParameters);\n            const renderer = $('<select>')\n                .addClass('pvtRenderer')\n                .appendTo(pvtRenderType)\n                .bind('change', () => refresh()); //capture reference\n            for (x of Object.keys(opts.renderers || {})) {\n                $('<option>').val(x).html(x).appendTo(renderer);\n            }\n\n\n            //axis list, including the double click menu\n            const unused = $('<div>').addClass('pvtAxisContainer pvtUnused');\n            const shownAttributes = [];\n            for (a in attrValues) {\n                if (!opts.hiddenAttributes.includes(a)) {\n                    shownAttributes.push(a);\n                }\n            }\n            const shownInAggregators = [];\n            for (c of shownAttributes) {\n                if (!opts.hiddenFromAggregators.includes(c)) {\n                    shownInAggregators.push(c);\n                }\n            }\n            const shownInDragDrop = [];\n            for (c of shownAttributes) {\n                if (!opts.hiddenFromDragDrop.includes(c)) {\n                    shownInDragDrop.push(c);\n                }\n            }\n\n            let unusedAttrsVerticalAutoOverride = false;\n            if (opts.unusedAttrsVertical === 'auto') {\n                unusedAttrsVerticalAutoCutoff = 120; // legacy support\n            } else {\n                unusedAttrsVerticalAutoCutoff = parseInt(opts.unusedAttrsVertical);\n            }\n\n            if (!isNaN(unusedAttrsVerticalAutoCutoff)) {\n                let attrLength = 0;\n                for (a of shownInDragDrop) {\n                    attrLength += a.length;\n                }\n                unusedAttrsVerticalAutoOverride = attrLength > unusedAttrsVerticalAutoCutoff;\n            }\n\n            for (i of Object.keys(shownInDragDrop || {})) {\n                attr = shownInDragDrop[i];\n                const values = [];\n                for (const v in attrValues[attr]) {\n                    values.push(v);\n                }\n                let hasExcludedItem = false;\n                const valueList = $('<div>').addClass('pvtFilterBox').hide();\n\n                valueList.append($('<h4>').append(\n                        $('<span>').text(attr),\n                        $('<span>').addClass('count').text(`(${values.length})`),\n                    ),\n                );\n                if (values.length > opts.menuLimit) {\n                    valueList.append($('<p>').html(opts.localeStrings.tooMany));\n                } else {\n                    if (values.length > 5) {\n                        const controls = $('<p>').appendTo(valueList);\n                        const sorter = getSort(opts.sorters, attr);\n                        const placeholder = opts.localeStrings.filterResults;\n                        $('<input>', { type: 'text' }).appendTo(controls)\n                            .attr({ placeholder, class: 'pvtSearch' })\n                            .bind('keyup', function () {\n                                const filter = $(this).val().toLowerCase().trim();\n                                const accept_gen = (prefix, accepted) => (function (v) {\n                                    const real_filter = filter.substring(prefix.length).trim();\n                                    if (real_filter.length === 0) {\n                                        return true;\n                                    }\n                                    let needle = Math.sign(sorter(v.toLowerCase(), real_filter));\n                                    return accepted.includes(needle);\n                                });\n                                const accept =\n                                    filter.indexOf('>=') === 0 ? accept_gen('>=', [1, 0])\n                                        : filter.indexOf('<=') === 0 ? accept_gen('<=', [-1, 0])\n                                            : filter.indexOf('>') === 0 ? accept_gen('>', [1])\n                                                : filter.indexOf('<') === 0 ? accept_gen('<', [-1])\n                                                    : filter.indexOf('~') === 0 ? function (v) {\n                                                            if (filter.substring(1).trim().length === 0) {\n                                                                return true;\n                                                            }\n                                                            return v.toLowerCase().match(filter.substring(1));\n                                                        }\n                                                        : v => v.toLowerCase().indexOf(filter) !== -1;\n\n                                return valueList.find('.pvtCheckContainer p label span.value').each(function () {\n                                    if (accept($(this).text())) {\n                                        return $(this).parent().parent().show();\n                                    } else {\n                                        return $(this).parent().parent().hide();\n                                    }\n                                });\n                            });\n                        controls.append($('<br>'));\n                        $('<button>', { type: 'button' }).appendTo(controls)\n                            .html(opts.localeStrings.selectAll)\n                            .bind('click', function () {\n                                valueList.find('input:visible:not(:checked)')\n                                    .prop('checked', true).toggleClass('changed');\n                                return false;\n                            });\n                        $('<button>', { type: 'button' }).appendTo(controls)\n                            .html(opts.localeStrings.selectNone)\n                            .bind('click', function () {\n                                valueList.find('input:visible:checked')\n                                    .prop('checked', false).toggleClass('changed');\n                                return false;\n                            });\n                    }\n\n                    const checkContainer = $('<div>').addClass('pvtCheckContainer').appendTo(valueList);\n\n                    for (let value of values.sort(getSort(opts.sorters, attr))) {\n                        const valueCount = attrValues[attr][value];\n                        const filterItem = $('<label>');\n                        let filterItemExcluded = false;\n                        if (opts.inclusions[attr]) {\n                            filterItemExcluded = (!opts.inclusions[attr].includes(value));\n                        } else if (opts.exclusions[attr]) {\n                            filterItemExcluded = (opts.exclusions[attr].includes(value));\n                        }\n                        if (!hasExcludedItem) {\n                            hasExcludedItem = filterItemExcluded;\n                        }\n                        $('<input>')\n                            .attr('type', 'checkbox').addClass('pvtFilter')\n                            .attr('checked', !filterItemExcluded).data('filter', [attr, value])\n                            .appendTo(filterItem)\n                            .bind('change', function () {\n                                return $(this).toggleClass('changed');\n                            });\n                        filterItem.append($('<span>').addClass('value').text(value));\n                        filterItem.append($('<span>').addClass('count').text('(' + valueCount + ')'));\n                        checkContainer.append($('<p>').append(filterItem));\n                    }\n                }\n\n                const closeFilterBox = function () {\n                    if (valueList.find('[type=\\'checkbox\\']').length >\n                        valueList.find('[type=\\'checkbox\\']:checked').length) {\n                        attrElem.addClass('pvtFilteredAttribute');\n                    } else {\n                        attrElem.removeClass('pvtFilteredAttribute');\n                    }\n\n                    valueList.find('.pvtSearch').val('');\n                    valueList.find('.pvtCheckContainer p').show();\n                    return valueList.hide();\n                };\n\n\n                const finalButtons = $('<p>').appendTo(valueList);\n\n                if (values.length <= opts.menuLimit) {\n                    $('<button>', { type: 'button' }).text(opts.localeStrings.apply)\n                        .appendTo(finalButtons).bind('click', function () {\n                        if (valueList.find('.changed').removeClass('changed').length) {\n                            refresh();\n                        }\n                        return closeFilterBox();\n                    });\n                }\n\n                $('<button>', { type: 'button' }).text(opts.localeStrings.cancel)\n                    .appendTo(finalButtons).bind('click', function () {\n                    valueList.find('.changed:checked')\n                        .removeClass('changed').prop('checked', false);\n                    valueList.find('.changed:not(:checked)')\n                        .removeClass('changed').prop('checked', true);\n                    return closeFilterBox();\n                });\n\n                const triangleLink = $('<span>').addClass('pvtTriangle')\n                    .html(' &#x25BE;').bind('click', function (e) {\n                        const { left, top } = $(e.currentTarget).position();\n                        return valueList.css({ left: left + 10, top: top + 10 }).show();\n                    });\n\n                const attrElem = $('<li>').addClass(`axis_${i}`)\n                    .append($('<span>').addClass('pvtAttr').text(attr).data('attrName', attr).append(triangleLink));\n\n                if (hasExcludedItem) {\n                    attrElem.addClass('pvtFilteredAttribute');\n                }\n                unused.append(attrElem).append(valueList);\n            }\n\n            $('<div>')\n                .addClass('pvtParameterLabel')\n                .appendTo(uiParameters)\n                .text(localeStrings.valuesLabel);\n\n            //aggregator menu and value area\n            const divAggregator = $('<div>')\n                .addClass('pvtAggregatorChoose')\n                .addClass('pvtParameter')\n                .appendTo(uiParameters);\n\n            const aggregator = $('<select>')\n                .addClass('pvtAggregator')\n                .appendTo(divAggregator)\n                .bind('change', () => {\n                    if (!opts.multiple) {\n                        this.find('.pvtVals .pvtAttrDropdown').each(function () {\n                            return this.remove();\n                        });\n                        aggregators = [{ id: 1, value: aggregator.val() }];\n                        return refresh();\n                    }\n                }); //capture reference\n\n            for (x of Object.keys(opts.aggregators || {})) {\n                aggregator.append($('<option>').val(x).html(locales[locale].localeStrings[x] || locales['en'].localeStrings[x] || x));\n            }\n\n            if (opts.multiple) {\n                $('<a>', { role: 'button' })\n                    .addClass('pvtAddAggregator')\n                    .addClass('pvtToolButton')\n                    .appendTo(divAggregator)\n                    .html('+')\n                    .bind('click', function () {\n                        aggregators.push({ id: ++itemsId, value: aggregator.val() });\n                        renameAggregators(aggregators);\n                        return refresh();\n                    });\n            }\n\n            const ordering = {\n                key_a_to_z: { rowSymbol: '&varr;', colSymbol: '&harr;', next: 'value_a_to_z' },\n                value_a_to_z: { rowSymbol: '&darr;', colSymbol: '&rarr;', next: 'value_z_to_a' },\n                value_z_to_a: { rowSymbol: '&uarr;', colSymbol: '&larr;', next: 'key_a_to_z' },\n            };\n\n            const rowOrderArrow = $('<a>', { role: 'button' })\n                .addClass('pvtRowOrder')\n                .addClass('pvtToolButton')\n                .appendTo(divAggregator)\n                .data('order', opts.rowOrder).html(ordering[opts.rowOrder].rowSymbol)\n                .bind('click', function () {\n                    $(this).data('order', ordering[$(this).data('order')].next);\n                    $(this).html(ordering[$(this).data('order')].rowSymbol);\n                    return refresh();\n                });\n\n            const colOrderArrow = $('<a>', { role: 'button' })\n                .addClass('pvtColOrder')\n                .addClass('pvtToolButton')\n                .appendTo(divAggregator)\n                .data('order', opts.colOrder).html(ordering[opts.colOrder].colSymbol)\n                .bind('click', function () {\n                    $(this).data('order', ordering[$(this).data('order')].next);\n                    $(this).html(ordering[$(this).data('order')].colSymbol);\n                    return refresh();\n                });\n\n            const pvVals = $('<div>').addClass('pvtVals')\n                .addClass('pvtParameter')\n                .appendTo(uiParameters);\n\n            uiParameters.append(pvVals);\n\n            // Available fields\n            $('<div>')\n                .addClass('pvtParameterLabel')\n                .appendTo(uiParameters)\n                .text(localeStrings.fieldsLabel);\n\n            uiParameters.append(unused);\n\n            //column axes\n            $('<div>')\n                .addClass('pvtParameterLabel')\n                .appendTo(uiParameters)\n                .text(localeStrings.colsLabel);\n\n            $('<div>').addClass('pvtAxisContainer pvtCols').appendTo(uiParameters);\n\n            //row axes\n            $('<div>')\n                .addClass('pvtParameterLabel')\n                .appendTo(uiParameters)\n                .text(localeStrings.rowsLabel);\n            $('<div>').addClass('pvtAxisContainer pvtRows').appendTo(uiParameters);\n\n            //the actual pivot table container\n            const pivotTable = $('<div>')\n                .addClass('pvtRendererArea')\n                .appendTo(uiPivotContainer);\n\n            //render the UI in its default state\n            this.html(uiContainer);\n\n            if (!opts.parametersActive) {\n                uiButtonColumns.removeClass('active');\n                uiParameters.hide();\n            }\n\n            //set up the UI initial state as requested by moving elements around\n\n            let initialRender = true;\n\n            //set up for refreshing\n            const refreshDelayed = () => {\n                let vals;\n                const subopts = {\n                    derivedAttributes: opts.derivedAttributes,\n                    localeStrings: opts.localeStrings,\n                    rendererOptions: opts.rendererOptions,\n                    sorters: opts.sorters,\n                    cols: [], rows: [],\n                    dataClass: opts.dataClass,\n                    grouping: opts.grouping,\n                };\n\n                this.find('.pvtRows li span.pvtAttr').each(function () {\n                    return subopts.rows.push($(this).data('attrName'));\n                });\n                this.find('.pvtCols li span.pvtAttr').each(function () {\n                    return subopts.cols.push($(this).data('attrName'));\n                });\n\n                let numInputsToProcess = 0;\n\n                const aggVals = [];\n                let j = 0, idx = j;\n                for (; j < aggregators.length; j++, idx = j) {\n                    let aggregatorType;\n                    const agg = aggregators[idx];\n                    if (typeof agg === 'object') {\n                        aggregatorType = agg.value;\n                    }\n                    const aggIdx = agg.id;\n                    const initialVals = agg.vals;\n\n                    const left = opts.aggregators[aggregatorType]([])().numInputs;\n                    if (left != null) {\n                        numInputsToProcess = left;\n                    } else {\n                        numInputsToProcess = 0;\n                    }\n                    vals = [];\n                    this.find('.pvtVals select.pvtAttrDropdown' + aggIdx).each(function () {\n                        if (numInputsToProcess !== 0) {\n                            numInputsToProcess--;\n                            if ($(this).val() !== '') {\n                                return vals.push($(this).val());\n                            }\n                        }\n                    });\n\n\n                    const pvtVals = this.find('.pvtVals');\n                    let container = this.find('.pvtVals .pvtAttrDropdownContainer' + aggIdx);\n                    const found = container.length > 0;\n                    if (opts.multiple) {\n                        let labelAggregator;\n                        if (!found) {\n                            container = $('<div>')\n                                .addClass('pvtAttrDropdownContainer')\n                                .addClass('pvtAttrDropdownContainer' + aggIdx)\n                                .appendTo(pvtVals);\n                            labelAggregator = locales[locale].localeStrings[aggregatorType] || locales['en'].localeStrings[aggregatorType] || aggregatorType;\n                            $('<label>')\n                                .addClass('pvtAttrDropdown')\n                                .addClass('pvtAttrDropdown' + aggIdx)\n                                .appendTo(container)\n                                .html('<b>' + agg.displayName + '</b>) ' + labelAggregator);\n                            initialRender = true;\n                        }\n\n                        if (!initialRender) {\n                            this.find('.pvtVals .pvtAttrDropdownContainer' + aggIdx + ' label.pvtAttrDropdown')\n                                .each(function () {\n                                    labelAggregator = locales[locale].localeStrings[aggregatorType] || locales['en'].localeStrings[aggregatorType] || aggregatorType;\n                                    return $(this).html('<b>' + agg.displayName + '</b>) ' + labelAggregator);\n                                });\n                        }\n                    } else {\n                        container = pvtVals;\n                    }\n\n                    if (numInputsToProcess !== 0) {\n                        let asc, end;\n                        for (x = 0, end = numInputsToProcess, asc = 0 <= end; asc ? x < end : x > end; asc ? x++ : x--) {\n                            const newDropdown = $('<select>')\n                                .addClass('pvtAttrDropdown' + aggIdx)\n                                .addClass('pvtAttrDropdown')\n                                .append($('<option>'))\n                                .bind('change', () => refresh());\n                            for (attr of shownInAggregators) {\n                                newDropdown.append($('<option>').val(attr).text(attr));\n                            }\n                            container.append(newDropdown);\n                        }\n                    }\n\n\n                    if (opts.multiple && !found) {\n                        $('<a>')\n                            .html('x')\n                            .addClass('pvtRemoveAggregator')\n                            .addClass('pvtToolButton')\n                            .addClass('pvtAttrDropdown' + aggIdx)\n                            .appendTo(container)\n                            .bind('click', (function () {\n                                    this.instance.find('.pvtVals .pvtAttrDropdownContainer' + this.aggIdx).remove();\n                                    idx = aggregators.findIndex(agg => agg.id === this.aggIdx);\n                                    aggregators.splice(idx, 1);\n                                    renameAggregators(aggregators);\n                                    return refresh();\n                                }).bind({ instance: this, aggIdx }),\n                            );\n                    }\n\n                    if (initialRender) {\n                        vals = initialVals != null ? initialVals : opts.vals;\n                        i = 0;\n                        this.find('.pvtVals select.pvtAttrDropdown' + aggIdx).each(function () {\n                            $(this).val(vals[i]);\n                            return i++;\n                        });\n                        initialRender = false;\n                    }\n\n                    aggVals.push(vals);\n                }\n\n                subopts.aggregatorName = aggregators.map(agg => agg.value);\n                subopts.vals = aggVals;\n                subopts.aggregator = aggregators.map((agg, i) => opts.aggregators[agg.value](aggVals[i], opts));\n                subopts.renderer = opts.renderers[renderer.val()];\n                subopts.rowOrder = rowOrderArrow.data('order');\n                subopts.colOrder = colOrderArrow.data('order');\n                if (opts.multiple) {\n                    subopts.aggregatorsLabel = aggregators.map(agg => agg.displayName);\n                }\n\n                //construct filter here\n                const exclusions = {};\n                this.find('input.pvtFilter').not(':checked').each(function () {\n                    const filter = $(this).data('filter');\n                    if (exclusions[filter[0]] != null) {\n                        return exclusions[filter[0]].push(filter[1]);\n                    } else {\n                        return exclusions[filter[0]] = [filter[1]];\n                    }\n                });\n                //include inclusions when exclusions present\n                const inclusions = {};\n                this.find('input.pvtFilter:checked').each(function () {\n                    const filter = $(this).data('filter');\n                    if (exclusions[filter[0]] != null) {\n                        if (inclusions[filter[0]] != null) {\n                            return inclusions[filter[0]].push(filter[1]);\n                        } else {\n                            return inclusions[filter[0]] = [filter[1]];\n                        }\n                    }\n                });\n\n                subopts.filter = function (record) {\n                    if (!opts.filter(record)) {\n                        return false;\n                    }\n                    for (let k in exclusions) {\n                        const excludedItems = exclusions[k];\n                        if (excludedItems.includes('' + (record[k] != null ? record[k] : 'null'))) {\n                            return false;\n                        }\n                    }\n                    return true;\n                };\n\n                pivotTable.pivot(materializedInput, subopts, locale);\n                const pivotUIOptions = $.extend({}, opts, {\n                        cols: subopts.cols,\n                        rows: subopts.rows,\n                        colOrder: subopts.colOrder,\n                        rowOrder: subopts.rowOrder,\n                        vals: aggVals,\n                        exclusions,\n                        inclusions,\n                        aggregator: subopts.aggregator,\n                        inclusionsInfo: inclusions, //duplicated for backwards-compatibility\n                        aggregatorName: subopts.aggregatorName,\n                        rendererName: renderer.val(),\n                    },\n                );\n\n                const currentPivotData = subopts.pivotData;\n                delete subopts.pivotData;\n                this.data('pivotUIOptions', pivotUIOptions);\n\n                // if requested, make sure unused columns are in alphabetical order\n                if (opts.autoSortUnusedAttrs) {\n                    const unusedAttrsContainer = this.find('td.pvtUnused.pvtAxisContainer');\n                    $(unusedAttrsContainer).children('li')\n                        .sort((a, b) => naturalSort($(a).text(), $(b).text()))\n                        .appendTo(unusedAttrsContainer);\n                }\n\n                pivotTable.css('opacity', 1);\n                if (opts.onRefresh != null) {\n                    return opts.onRefresh(pivotUIOptions, currentPivotData);\n                }\n            };\n\n            const refresh = () => {\n                pivotTable.css('opacity', 0.5);\n                return setTimeout(refreshDelayed, 10);\n            };\n\n            for (x of opts.cols) {\n                this.find('.pvtCols').append(this.find(`.axis_${$.inArray(x, shownInDragDrop)}`));\n            }\n            for (x of opts.rows) {\n                this.find('.pvtRows').append(this.find(`.axis_${$.inArray(x, shownInDragDrop)}`));\n            }\n            if (opts.aggregatorName != null) {\n                if (opts.multiple) {\n                    opts.aggregatorName = Array.isArray(opts.aggregatorName) ? opts.aggregatorName : [opts.aggregatorName];\n                    for (let idx = 0; idx < opts.aggregatorName.length; idx++) {\n                        const agg = opts.aggregatorName[idx];\n                        aggregators.push({\n                            id: ++itemsId,\n                            value: agg,\n                            vals: (opts.vals != null ? opts.vals[idx] : undefined),\n                        });\n                        renameAggregators(aggregators);\n                    }\n                } else {\n                    this.find('.pvtVals').append(this.find('.pvtAttrDropdown'));\n                    this.find('.pvtAggregator').val(opts.aggregatorName).change();\n                }\n            } else {\n                this.find('.pvtAggregator').change();\n            }\n            if (opts.rendererName != null) {\n                this.find('.pvtRenderer').val(opts.rendererName);\n            }\n\n            if (!opts.showUI) {\n                this.find('.pvtUiCell').hide();\n            }\n\n            //the very first refresh will actually display the table\n            refresh();\n\n            this.find('.pvtAxisContainer').sortable({\n                update(e, ui) {\n                    if ((ui.sender == null)) {\n                        return refresh();\n                    }\n                },\n                connectWith: this.find('.pvtAxisContainer'),\n                items: 'li',\n                placeholder: 'pvtPlaceholder',\n            });\n        } catch (error) {\n            console.error(error);\n            this.html(opts.localeStrings.uiRenderError);\n        }\n        return this;\n    };\n\n    /*\n    Heatmap post-processing\n    */\n\n    $.fn.heatmap = function (scope, opts) {\n        if (scope == null) {\n            scope = 'heatmap';\n        }\n        const numRows = this.data('numrows');\n        const numCols = this.data('numcols');\n\n        // given a series of values\n        // must return a function to map a given value to a CSS color\n        let colorScaleGenerator = opts?.heatmap?.colorScaleGenerator;\n        if (colorScaleGenerator == null) {\n            colorScaleGenerator = function (values) {\n                const min = Math.min(...(values || []));\n                const max = Math.max(...(values || []));\n                return function (x) {\n                    const nonRed = 255 - Math.round((255 * (x - min)) / (max - min));\n                    return `rgb(255,${nonRed},${nonRed})`;\n                };\n            };\n        }\n\n        const heatmapper = scope => {\n            const forEachCell = f => {\n                return this.find(scope).each(function () {\n                    const x = $(this).data('value');\n                    if ((x != null) && isFinite(x)) {\n                        return f(x, $(this));\n                    }\n                });\n            };\n\n            const values = [];\n            forEachCell(x => values.push(x));\n            const colorScale = colorScaleGenerator(values);\n            return forEachCell((x, elem) => elem.css('background-color', colorScale(x)));\n        };\n\n        switch (scope) {\n            case 'heatmap':\n                heatmapper('.pvtVal');\n                break;\n            case 'rowheatmap':\n                for (let i = 0, end = numRows, asc = 0 <= end; asc ? i < end : i > end; asc ? i++ : i--) {\n                    heatmapper(`.pvtVal.row${i}`);\n                }\n                break;\n            case 'colheatmap':\n                for (let j = 0, end1 = numCols, asc1 = 0 <= end1; asc1 ? j < end1 : j > end1; asc1 ? j++ : j--) {\n                    heatmapper(`.pvtVal.col${j}`);\n                }\n                break;\n        }\n\n        heatmapper('.pvtTotal.rowTotal');\n        heatmapper('.pvtTotal.colTotal');\n\n        return this;\n    };\n\n    /*\n    Barchart post-processing\n    */\n\n    $.fn.barchart = function (opts) {\n        const numRows = this.data('numrows');\n        const numCols = this.data('numcols');\n\n        const barcharter = scope => {\n            const forEachCell = f => {\n                return this.find(scope).each(function () {\n                    const x = $(this).data('value');\n                    if ((x != null) && isFinite(x)) {\n                        return f(x, $(this));\n                    }\n                });\n            };\n\n            const values = [];\n            forEachCell(x => values.push(x));\n            let max = Math.max(...(values || []));\n            if (max < 0) {\n                max = 0;\n            }\n            let range = max;\n            const min = Math.min(...(values || []));\n            if (min < 0) {\n                range = max - min;\n            }\n            const scaler = x => (100 * x) / (1.4 * range);\n            return forEachCell(function (x, elem) {\n                const text = elem.text();\n                const wrapper = $('<div>').css({\n                    'position': 'relative',\n                    'height': '55px',\n                });\n                let bgColor = 'gray';\n                let bBase = 0;\n                if (min < 0) {\n                    bBase = scaler(-min);\n                }\n                if (x < 0) {\n                    bBase += scaler(x);\n                    bgColor = 'darkred';\n                    x = -x;\n                }\n                wrapper.append($('<div>').css({\n                        'position': 'absolute',\n                        'bottom': bBase + '%',\n                        'left': 0,\n                        'right': 0,\n                        'height': scaler(x) + '%',\n                        'background-color': bgColor,\n                    }),\n                );\n                wrapper.append($('<div>').text(text).css({\n                        'position': 'relative',\n                        'padding-left': '5px',\n                        'padding-right': '5px',\n                    }),\n                );\n\n                return elem.css({ 'padding': 0, 'padding-top': '5px', 'text-align': 'center' }).html(wrapper);\n            });\n        };\n\n        for (let i = 0, end = numRows, asc = 0 <= end; asc ? i < end : i > end; asc ? i++ : i--) {\n            barcharter(`.pvtVal.row${i}`);\n        }\n        barcharter('.pvtTotal.colTotal');\n\n        return this;\n    };\n\n    /*\n    Grouping fold/expand rows and cols\n    */\n\n    const childIndex = el => Array.prototype.indexOf.call(el.parentNode.children, el);\n\n    const childKeysIndices = function (keys, n) {\n        const up = keys[0].length === 1 ? 1 : -1;\n        const len = keys[n].length;\n\n        const result = [];\n        n = n + up;\n        let key = keys[n];\n        while (key && key.length > len) {\n            if (key.length === (len + 1)) {\n                result.push(n);\n            } else {\n                continue;\n            }\n            n = n + up;\n            key = keys[n];\n        }\n        return result;\n    };\n\n    const parentKeysIndices = function (keys, n) {\n        const up = keys[0].length === 1 ? 1 : -1;\n        const result = [];\n        let len = keys[n].length;\n        while (len > 1) {\n            let key;\n            n = n - up;\n            key = keys[n];\n            while (key && key.length >= len) {\n                n = n - up;\n                key = keys[n];\n            }\n            result.push(n);\n\n            len = keys[n].length;\n        }\n        return result;\n    };\n\n    const levelKeysIndices = (keys, level) => (keys.filter(d => d.length === level)).map(keys.indexOf.bind(keys));\n\n    const getAxis = function (table, rows, level) {\n        if (rows) {\n            return table.find(`thead tr:last-child th.pvtAxisLabel:nth-of-type(${level})`);\n        } else {\n            return table.find(`thead tr:nth-child(${level}) th.pvtAxisLabel`);\n        }\n    };\n\n    const getHeader = (table, rows, n) => table.find(rows ? `tbody tr th.row${n}` : `thead th.col${n}`);\n\n    const rowGetter = function (table) {\n        const selecttion = table.find('tbody tr');\n        return n => $(selecttion[n]);\n    };\n\n    const colGetter = function (table) {\n        const selecttion = table.find('tr');\n        return n => selecttion.find(`.col${n}`);\n    };\n\n    const showHide = function (getter, keys, nth, offset, show) {\n        const object = childKeysIndices(keys, nth);\n        for (let i in object) {\n            const n = object[i];\n            const row = getter(n + offset);\n            const fn = show ? $.fn.show : $.fn.hide;\n            fn.call(row);\n            if (!row.hasClass('collapsed')) {\n                showHide(getter, keys, n, offset, show);\n            }\n        }\n        return true;\n    };\n\n    const expandRowsGroupAfter = function (cell, rows, keys, nth) {\n        const table = $(cell).closest('table');\n        const initIndex = childIndex(cell.parentNode);\n        const getter = rowGetter(table);\n        const row = getter(nth);\n\n        const insertPoint = row.hasClass('collapsed') ? getter(cell._old) : row;\n        if (!row.hasClass('collapsed')) {\n            cell._old = childIndex(cell.parentNode);\n        }\n        insertPoint.prepend(cell);\n\n        const object = parentKeysIndices(keys, nth);\n        for (let i in object) {\n            const p = object[i];\n            const parent = (getHeader(table, rows, p))[0];\n            const parentIndex = childIndex(parent.parentNode);\n            parent._old = parent._old != null ? parent._old : parentIndex;\n            if ((parent._old === initIndex) && (parent.rowSpan === 1)) {\n                parent._old -= initIndex - childIndex(cell.parentNode);\n            }\n\n            if (initIndex === parentIndex) {\n                insertPoint.prepend(parent);\n            }\n        }\n\n        return expandWithSpan(cell, rows, keys, nth);\n    };\n\n    const expandRowCol = function (cell, rows, keys, nth, parent) {\n        const table = $(cell).closest('table');\n        const getter = rows ? rowGetter(table) : colGetter(table);\n        const span = rows ? 'rowSpan' : 'colSpan';\n\n        const offset = rows && (this.aggregator.length > 1) ? 1 : 0;\n        if ((parent != null ? parent[span] : undefined) !== 1) {\n            showHide(getter, keys, nth, offset, getter(nth + offset).hasClass('collapsed'));\n        }\n        getter(nth + offset).toggleClass('collapsed');\n        return $(cell).toggleClass('open close');\n    };\n\n    const expandAll = function (pivotData, table, level, rows, expand) {\n        let i;\n        if (expand && (level > 1)) {\n            getAxis(table, rows, level - 1).removeClass('close').addClass('open');\n            expandAll(pivotData, table, level - 1, rows, expand);\n        }\n\n        const levels = (rows ? pivotData.rowAttrs : pivotData.colAttrs).length - 1;\n        if (!expand && (level < levels)) {\n            let asc, end, start;\n            for (start = level + 1, i = start, end = levels, asc = start <= end; asc ? i <= end : i >= end; asc ? i++ : i--) {\n                getAxis(table, rows, i).removeClass('open').addClass('close');\n            }\n        }\n\n        const keys = rows ? pivotData.rowKeys : pivotData.colKeys;\n        const object = levelKeysIndices(keys, level);\n        for (i in object) {\n            const n = object[i];\n            const el = getHeader(table, rows, n);\n            if (expand === el.hasClass('close')) {\n                el.trigger('click');\n            }\n        }\n        return null;\n    };\n\n    const getExpandHandler = (keys, rows, handler) => (function (ev) {\n        const match = ev.target.className.match(rows ? /row(\\d+)/ : /col(\\d+)/);\n        if (match) {\n            return handler(ev.target, rows, keys, +match[1]);\n        }\n    });\n\n    return getExpandAllHandler = (pivotData, level, rows) => (function (ev) {\n        expandAll(pivotData, $(ev.target).closest('table'), level + 1, rows, $(ev.target).hasClass('close'));\n        return $(ev.target).toggleClass('open close');\n    });\n})(jQuery);\n\n"]}