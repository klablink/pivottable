{"version":3,"sources":["pivot.js"],"names":["$","expandWithSpan","cell","rows","keys","nth","let","parent","i","table","closest","span","dft","Math","max","this","aggregator","length","change","_span","object","parentKeysIndices","p","getHeader","expandRowCol","getExpandAllHandler","localeGlobal","toDate","value","date","options","year","month","day","Date","toLocaleDateString","regionalSettings","e","numberFormat","opts","extend","digitsAfterDecimal","scaler","thousandsSep","decimalSep","prefix","suffix","x","fieldType","undefined","pivotUtilities","fieldsType","integer","isFunction","isNaN","isFinite","result","nStr","split","x1","x2","rgx","test","replace","toFixed","cellRenderers","text","fieldName","col","row","document","createTextNode","byType","def","type","apply","arguments","usFmt","usFmtInt","usFmtPct","aggregatorTemplates","count","formatter","data","rowKey","colKey","push","format","uniques","fn","args","attr","uniq","record","includes","numInputs","sum","parseFloat","extremes","mode","val","sorter","getSort","sorters","y","rendererOptions","toISOString","quantile","q","vals","sort","a","b","floor","ceil","runningStat","ddof","n","m","s","m_new","sqrt","sumOverSum","num","denom","sumNum","sumDenom","sumOverSumBound80","upper","sign","fractionOf","wrapped","selector","total","inner","id","agg","getAggregator","makeAggregators","fmt","fmtInt","fmtPct","Count","Count Unique Values","countUnique","List Unique Values","listUnique","Sum","Integer Sum","Average","average","Median","median","Sample Variance","var","Sample Standard Deviation","stdev","Minimum","min","Maximum","First","first","Last","last","Sum over Sum","80% Upper Bound","80% Lower Bound","Sum as Fraction of Total","Sum as Fraction of Rows","Sum as Fraction of Columns","Count as Fraction of Total","Count as Fraction of Rows","Count as Fraction of Columns","f","naturalSort","join","defaultAggregators","renderers","Table","pivotTableRenderer","Table Barchart","barchart","Heatmap","heatmap","Row Heatmap","Col Heatmap","locales","en","formatters","formatInt","formatPct","localeStrings","renderError","computeError","uiRenderError","selectAll","selectNone","tooMany","filterResults","cancel","totals","vs","by","rendererLabel","valuesLabel","fieldsLabel","colsLabel","rowsLabel","groupsLabel","Object","mthNamesEn","dayNamesEn","zeroPad","number","padding","substr","rx","rd","rz","as","bs","nulls_first","nf","nas","nbs","String","match","a1","shift","b1","filterByLength","filter","subarrays","array","map","d","slice","PivotData","constructor","input","arrSort","bind","sortKeys","getColKeys","getRowKeys","Array","isArray","aggregatorName","colAttrs","cols","rowAttrs","valAttrs","rowOrder","colOrder","derivedAttributes","tree","rowKeys","colKeys","rowTotals","colTotals","allTotal","sorted","aggregatorsLabel","grouping","rowGroupBefore","colGroupBefore","forEachRecord","processRecord","entries","forEach","key","addRecord","isEmptyObject","k","v","compactRecord","j","tblCols","each","Error","forEachMatchingRecord","criteria","callback","attrs","sortersArr","comparison","r","c","all_keys","flatRowKey","fromCharCode","result1","flatColKey","renameAggregators","aggregators","displayName","toUpperCase","pivotData","getClickHandler","td","th","totalAggregator","tr","defaults","clickCallback","typeCellRenderer","headCellRenderer","dataCellRenderer","spanSize","arr","asc","end","noDraw","len","asc1","end1","stop","compactLayout","rowValues","colValues","filters","rowExpandHandler","expandRowsGroupAfter","rowsExpandHandler","getExpandHandler","colsExpandHandler","createElement","thead","className","parseInt","setAttribute","appendChild","call","onclick","innerHTML","tbody","lbl","colspan","textContent","rowGap","txt","colSpan","style","paddingLeft","append","derivers","bin","binWidth","dateFormat","formatString","utcOutput","mthNames","dayNames","utc","parse","string","time","datetime","boolean","sortAs","order","mapping","l_mapping","toLowerCase","pivot","inputOpts","locale","indexOf","dataClass","renderer","error","console","stack","html","error1","hasChildNodes","removeChild","lastChild","pivotUI","overwrite","hiddenAttributes","hiddenFromAggregators","hiddenFromDragDrop","menuLimit","exclusions","inclusions","unusedAttrsVertical","autoSortUnusedAttrs","onRefresh","showUI","multiple","parametersActive","itemsId","localeDefaults","existingOpts","unusedAttrsVerticalAutoCutoff","attrValues","materializedInput","recordsProcessed","uiContainer","addClass","uiMenu","uiParameters","uiPivotContainer","uiButtonColumns","on","show","removeClass","hide","appendTo","uiButtonGroups","refresh","pvtRenderType","unused","shownAttributes","shownInAggregators","shownInDragDrop","attrLength","values","hasExcludedItem","valueList","controls","placeholder","class","trim","accept_gen","accepted","real_filter","substring","accept","find","prop","toggleClass","checkContainer","valueCount","filterItem","filterItemExcluded","closeFilterBox","attrElem","finalButtons","triangleLink","left","top","currentTarget","position","css","divAggregator","remove","role","ordering","key_a_to_z","rowSymbol","colSymbol","next","value_a_to_z","value_z_to_a","rowOrderArrow","colOrderArrow","pvVals","pivotTable","initialRender","refreshDelayed","subopts","numInputsToProcess","aggVals","idx","aggregatorType","aggIdx","initialVals","pvtVals","container","found","labelAggregator","newDropdown","instance","findIndex","splice","not","unusedAttrsContainer","pivotUIOptions","inclusionsInfo","rendererName","currentPivotData","children","setTimeout","inArray","sortable","update","ui","sender","connectWith","items","scope","numRows","numCols","colorScaleGenerator","nonRed","round","heatmapper","forEachCell","colorScale","elem","barcharter","range","wrapper","height","bgColor","bBase","bottom","right","background-color","padding-left","padding-right","padding-top","text-align","rowGetter","selecttion","childIndex","el","prototype","parentNode","childKeysIndices","up","levelKeysIndices","level","getAxis","showHide","getter","offset","hasClass","initIndex","insertPoint","_old","prepend","parentIndex","rowSpan","expandAll","expand","levels","start","trigger","handler","ev","target","jQuery"],"mappings":"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","file":"pivot.min.js","sourcesContent":["\n(function ($) {\n\n    const expandWithSpan = function (cell, rows, keys, nth) {\n        let parent;\n        const table = $(cell).closest('table');\n        const span = rows ? 'rowSpan' : 'colSpan';\n\n        const dft = !rows ? Math.max(1, this.aggregator.length) : 1;\n        [cell._span, cell[span]] = [cell[span], cell._span != null ? cell._span : dft];\n        const change = cell[span] - cell._span;\n\n        const object = parentKeysIndices(keys, nth);\n        for (let i in object) {\n            const p = object[i];\n            parent = (getHeader(table, rows, p))[0];\n            if (parent[span] === 1) {\n                parent._span += change;\n                break;\n            }\n            parent[span] += change;\n        }\n\n        return expandRowCol(cell, rows, keys, nth, parent);\n    };\n    /*\n        Utilities\n        */\n\n    let getExpandAllHandler;\n    let localeGlobal = 'en';\n\n    const addSeparators = function (nStr, thousandsSep, decimalSep) {\n        nStr += '';\n        const x = nStr.split('.');\n        let x1 = x[0];\n        const x2 = x.length > 1 ? decimalSep + x[1] : '';\n        const rgx = /(\\d+)(\\d{3})/;\n        while (rgx.test(x1)) {\n            x1 = x1.replace(rgx, '$1' + thousandsSep + '$2');\n        }\n        return x1 + x2;\n    };\n\n\n    function toDate(value) {\n        let date = '';\n\n        if (value) {\n            try {\n                const options = { year: 'numeric', month: '2-digit', day: '2-digit' };\n                date = (new Date(value)).toLocaleDateString(regionalSettings || localeGlobal, options);\n            } catch (e) {\n                date = value;\n            }\n        }\n\n        return date;\n    }\n\n    const numberFormat = function (opts) {\n        const defaults = {\n            digitsAfterDecimal: 2, scaler: 1,\n            thousandsSep: ',', decimalSep: '.',\n            prefix: '', suffix: '',\n        };\n        opts = $.extend({}, defaults, opts);\n        return function (x, fieldType) {\n            if (x === undefined) {\n                return '';\n            }\n\n            if (fieldType === $.pivotUtilities.fieldsType.integer) {\n                return x;\n            } else if (fieldType === $.pivotUtilities.fieldsType.date) {\n                return toDate(x);\n            } else if ($.isFunction(fieldType)) {\n                return fieldType(x);\n            }\n\n            if (isNaN(x) || !isFinite(x)) {\n                return '';\n            }\n\n            const result = addSeparators((opts.scaler * x).toFixed(opts.digitsAfterDecimal), opts.thousandsSep, opts.decimalSep);\n            return '' + opts.prefix + result + opts.suffix;\n        };\n    };\n\n    const cellRenderers = {\n        text: function (value, fieldName, col, row) {\n            const { fieldsType } = this;\n\n            if (value === undefined) {\n                value = '';\n            }\n            // Header type date\n            if (fieldName && fieldsType[fieldName] === $.pivotUtilities.fieldsType.date) {\n                return document.createTextNode(toDate(value));\n            }\n\n            return document.createTextNode(value);\n        },\n        byType: function (opts, def) {\n            return function (value, type) {\n                return (opts[type] || def || cellRenderers.text).apply(this, arguments);\n            };\n        },\n    };\n\n    //aggregator templates default to US number formatting, but this is overrideable\n    const usFmt = numberFormat();\n    const usFmtInt = numberFormat({ digitsAfterDecimal: 0 });\n    const usFmtPct = numberFormat({ digitsAfterDecimal: 1, scaler: 100, suffix: '%' });\n\n    const aggregatorTemplates = {\n        count(formatter) {\n            if (formatter == null) {\n                formatter = usFmtInt;\n            }\n            return () => (function (data, rowKey, colKey) {\n                return {\n                    count: 0,\n                    push() {\n                        return this.count++;\n                    },\n                    value() {\n                        return this.count;\n                    },\n                    format: formatter,\n                };\n            });\n        },\n\n        uniques(fn, formatter) {\n            if (formatter == null) {\n                formatter = usFmtInt;\n            }\n            return function (...args) {\n                const [attr] = args[0];\n                return function (data, rowKey, colKey) {\n                    return {\n                        attr,\n                        uniq: [],\n                        push(record) {\n                            if (!this.uniq.includes(record[attr])) {\n                                return this.uniq.push(record[attr]);\n                            }\n                        },\n                        value() {\n                            return fn(this.uniq);\n                        },\n                        format: formatter,\n                        numInputs: (attr != null) ? 0 : 1,\n                    };\n                };\n            };\n        },\n\n        sum(formatter) {\n            if (formatter == null) {\n                formatter = usFmt;\n            }\n            return function (...args) {\n                const [attr] = args[0];\n                return function (data, rowKey, colKey) {\n                    return {\n                        attr,\n                        sum: 0,\n                        push(record) {\n                            if (!isNaN(parseFloat(record[attr]))) {\n                                return this.sum += parseFloat(record[attr]);\n                            }\n                        },\n                        value() {\n                            return this.sum;\n                        },\n                        format: formatter,\n                        numInputs: (attr != null) ? 0 : 1,\n                    };\n                };\n            };\n        },\n\n        extremes(mode, formatter) {\n            if (formatter == null) {\n                formatter = usFmt;\n            }\n            return function (...args) {\n                const [attr] = args[0];\n                const opts = args[1] || {};\n                return function (data, rowKey, colKey) {\n                    return {\n                        attr,\n                        val: null,\n                        sorter: getSort(data != null ? data.sorters : undefined, attr),\n                        push(record) {\n                            let x = record[attr];\n                            let y = this.val;\n\n                            if (opts.rendererOptions?.fieldsType[attr] === $.pivotUtilities.fieldsType.date) {\n                                x = new Date(x);\n                                y = !y ? x : new Date(y);\n                            } else if (['min', 'max'].includes(mode)) {\n                                x = parseFloat(x);\n                            }\n\n                            if (['min', 'max'].includes(mode)) {\n                                if (!isNaN(x)) {\n                                    this.val = Math[mode](x, y != null ? y : x);\n                                }\n                            }\n                            if (mode === 'first') {\n                                if (this.sorter(x, y != null ? y : x) <= 0) {\n                                    this.val = x;\n                                }\n                            }\n                            if (mode === 'last') {\n                                if (this.sorter(x, y != null ? y : x) >= 0) {\n                                    this.val = x;\n                                }\n                            }\n\n                            if (opts.rendererOptions?.fieldsType[attr] === $.pivotUtilities.fieldsType.date) {\n                                this.val = new Date(this.val).toISOString();\n                            }\n\n                        },\n                        value() {\n                            return this.val;\n                        },\n                        format(x, fieldType) {\n                            if (isNaN(x)) {\n                                return x;\n                            } else {\n                                return formatter(x, fieldType);\n                            }\n                        },\n                        numInputs: (attr != null) ? 0 : 1,\n                    };\n                };\n            };\n        },\n\n        quantile(q, formatter) {\n            if (formatter == null) {\n                formatter = usFmt;\n            }\n            return function (...args) {\n                const [attr] = args[0];\n                return function (data, rowKey, colKey) {\n                    return {\n                        attr,\n                        vals: [],\n                        push(record) {\n                            const x = parseFloat(record[attr]);\n                            if (!isNaN(x)) {\n                                return this.vals.push(x);\n                            }\n                        },\n                        value() {\n                            if (this.vals.length === 0) {\n                                return null;\n                            }\n                            this.vals.sort((a, b) => a - b);\n                            const i = (this.vals.length - 1) * q;\n                            return (this.vals[Math.floor(i)] + this.vals[Math.ceil(i)]) / 2.0;\n                        },\n                        format: formatter,\n                        numInputs: (attr != null) ? 0 : 1,\n                    };\n                };\n            };\n        },\n\n        runningStat(mode, ddof, formatter) {\n            if (mode == null) {\n                mode = 'mean';\n            }\n            if (ddof == null) {\n                ddof = 1;\n            }\n            if (formatter == null) {\n                formatter = usFmt;\n            }\n            return function (...args) {\n                const [attr] = args[0];\n                return function (data, rowKey, colKey) {\n                    return {\n                        attr,\n                        n: 0.0, m: 0.0, s: 0.0,\n                        push(record) {\n                            const x = parseFloat(record[attr]);\n                            if (isNaN(x)) {\n                                return;\n                            }\n                            this.n += 1.0;\n                            if (this.n === 1.0) {\n                                return this.m = x;\n                            } else {\n                                const m_new = this.m + ((x - this.m) / this.n);\n                                this.s = this.s + ((x - this.m) * (x - m_new));\n                                return this.m = m_new;\n                            }\n                        },\n                        value() {\n                            if (mode === 'mean') {\n                                if (this.n === 0) {\n                                    return 0 / 0;\n                                } else {\n                                    return this.m;\n                                }\n                            }\n                            if (this.n <= ddof) {\n                                return 0;\n                            }\n                            switch (mode) {\n                                case 'var':\n                                    return this.s / (this.n - ddof);\n                                case 'stdev':\n                                    return Math.sqrt(this.s / (this.n - ddof));\n                            }\n                        },\n                        format: formatter,\n                        numInputs: (attr != null) ? 0 : 1,\n                    };\n                };\n            };\n        },\n\n        sumOverSum(formatter) {\n            if (formatter == null) {\n                formatter = usFmt;\n            }\n            return function (...args) {\n                const [num, denom] = args[0];\n                return function (data, rowKey, colKey) {\n                    return {\n                        sumNum: 0,\n                        sumDenom: 0,\n                        push(record) {\n                            if (!isNaN(parseFloat(record[num]))) {\n                                this.sumNum += parseFloat(record[num]);\n                            }\n                            if (!isNaN(parseFloat(record[denom]))) {\n                                return this.sumDenom += parseFloat(record[denom]);\n                            }\n                        },\n                        value() {\n                            return this.sumNum / this.sumDenom;\n                        },\n                        format: formatter,\n                        numInputs: (num != null) && (denom != null) ? 0 : 2,\n                    };\n                };\n            };\n        },\n\n        sumOverSumBound80(upper, formatter) {\n            if (upper == null) {\n                upper = true;\n            }\n            if (formatter == null) {\n                formatter = usFmt;\n            }\n            return function (...args) {\n                const [num, denom] = args[0];\n                return function (data, rowKey, colKey) {\n                    return {\n                        sumNum: 0,\n                        sumDenom: 0,\n                        push(record) {\n                            if (!isNaN(parseFloat(record[num]))) {\n                                this.sumNum += parseFloat(record[num]);\n                            }\n                            if (!isNaN(parseFloat(record[denom]))) {\n                                return this.sumDenom += parseFloat(record[denom]);\n                            }\n                        },\n                        value() {\n                            const sign = upper ? 1 : -1;\n                            return ((0.821187207574908 / this.sumDenom) + (this.sumNum / this.sumDenom) + (1.2815515655446004 * sign *\n                                    Math.sqrt((0.410593603787454 / (this.sumDenom * this.sumDenom)) + ((this.sumNum * (1 - (this.sumNum / this.sumDenom))) / (this.sumDenom * this.sumDenom))))) /\n                                (1 + (1.642374415149816 / this.sumDenom));\n                        },\n                        format: formatter,\n                        numInputs: (num != null) && (denom != null) ? 0 : 2,\n                    };\n                };\n            };\n        },\n\n        fractionOf(wrapped, type, formatter) {\n            if (type == null) {\n                type = 'total';\n            }\n            if (formatter == null) {\n                formatter = usFmtPct;\n            }\n            return (...x) => (function (data, rowKey, colKey) {\n                return {\n                    selector: { total: [[], []], row: [rowKey, []], col: [[], colKey] }[type],\n                    inner: wrapped(...(x || []))(data, rowKey, colKey),\n                    push(record) {\n                        return this.inner.push(record);\n                    },\n                    format: formatter,\n                    value(id) {\n                        const agg = data.getAggregator(...([...this.selector, id] || []));\n                        return this.inner.value() / agg.inner.value();\n                    },\n                    numInputs: wrapped(...(x || []))().numInputs,\n                };\n            });\n        },\n    };\n\n    aggregatorTemplates.countUnique = f => aggregatorTemplates.uniques((x => x.length), f);\n    aggregatorTemplates.listUnique = s => aggregatorTemplates.uniques((x => x.sort(naturalSort).join(s)), (x => x));\n    aggregatorTemplates.max = f => aggregatorTemplates.extremes('max', f);\n    aggregatorTemplates.min = f => aggregatorTemplates.extremes('min', f);\n    aggregatorTemplates.first = f => aggregatorTemplates.extremes('first', f);\n    aggregatorTemplates.last = f => aggregatorTemplates.extremes('last', f);\n    aggregatorTemplates.median = f => aggregatorTemplates.quantile(0.5, f);\n    aggregatorTemplates.average = f => aggregatorTemplates.runningStat('mean', 1, f);\n    aggregatorTemplates.var = (ddof, f) => aggregatorTemplates.runningStat('var', ddof, f);\n    aggregatorTemplates.stdev = (ddof, f) => aggregatorTemplates.runningStat('stdev', ddof, f);\n\n    function makeAggregators(fmt, fmtInt, fmtPct) {\n        return {\n            'Count': aggregatorTemplates.count(fmtInt),\n            'Count Unique Values': aggregatorTemplates.countUnique(fmtInt),\n            'List Unique Values': aggregatorTemplates.listUnique(', '),\n            'Sum': aggregatorTemplates.sum(fmt),\n            'Integer Sum': aggregatorTemplates.sum(fmtInt),\n            'Average': aggregatorTemplates.average(fmt),\n            'Median': aggregatorTemplates.median(fmt),\n            'Sample Variance': aggregatorTemplates.var(1, fmt),\n            'Sample Standard Deviation': aggregatorTemplates.stdev(1, fmt),\n            'Minimum': aggregatorTemplates.min(fmt),\n            'Maximum': aggregatorTemplates.max(fmt),\n            'First': aggregatorTemplates.first(fmt),\n            'Last': aggregatorTemplates.last(fmt),\n            'Sum over Sum': aggregatorTemplates.sumOverSum(fmt),\n            '80% Upper Bound': aggregatorTemplates.sumOverSumBound80(true, fmt),\n            '80% Lower Bound': aggregatorTemplates.sumOverSumBound80(false, fmt),\n            'Sum as Fraction of Total': aggregatorTemplates.fractionOf(aggregatorTemplates.sum(), 'total', fmtPct),\n            'Sum as Fraction of Rows': aggregatorTemplates.fractionOf(aggregatorTemplates.sum(), 'row', fmtPct),\n            'Sum as Fraction of Columns': aggregatorTemplates.fractionOf(aggregatorTemplates.sum(), 'col', fmtPct),\n            'Count as Fraction of Total': aggregatorTemplates.fractionOf(aggregatorTemplates.count(), 'total', fmtPct),\n            'Count as Fraction of Rows': aggregatorTemplates.fractionOf(aggregatorTemplates.count(), 'row', fmtPct),\n            'Count as Fraction of Columns': aggregatorTemplates.fractionOf(aggregatorTemplates.count(), 'col', fmtPct),\n        };\n    }\n\n    //default aggregators & renderers use US naming and number formatting\n    const defaultAggregators = makeAggregators(usFmt, usFmtInt, usFmtPct);\n\n    const renderers = {\n        'Table'(data, opts) {\n            return pivotTableRenderer(data, opts);\n        },\n        'Table Barchart'(data, opts) {\n            return $(pivotTableRenderer(data, opts)).barchart();\n        },\n        'Heatmap'(data, opts) {\n            return $(pivotTableRenderer(data, opts)).heatmap('heatmap', opts);\n        },\n        'Row Heatmap'(data, opts) {\n            return $(pivotTableRenderer(data, opts)).heatmap('rowheatmap', opts);\n        },\n        'Col Heatmap'(data, opts) {\n            return $(pivotTableRenderer(data, opts)).heatmap('colheatmap', opts);\n        },\n    };\n\n    var regionalSettings = '';\n    const locales = {\n        en: {\n            formatters: {\n                format: usFmt,\n                formatInt: usFmtInt,\n                formatPct: usFmtPct,\n            },\n            renderers,\n            localeStrings: {\n                renderError: 'An error occurred rendering the PivotTable results.',\n                computeError: 'An error occurred computing the PivotTable results.',\n                uiRenderError: 'An error occurred rendering the PivotTable UI.',\n                selectAll: 'Select All',\n                selectNone: 'Select None',\n                tooMany: '(too many to list)',\n                filterResults: 'Filter values',\n                apply: 'Apply',\n                cancel: 'Cancel',\n                totals: 'Totals', //for table renderer\n                vs: 'vs', //for gchart renderer\n                by: 'by', //for gchart renderer\n                rendererLabel: 'Renderer',\n                valuesLabel: 'Values',\n                fieldsLabel: 'Fields',\n                colsLabel: 'Columns',\n                rowsLabel: 'Rows',\n                groupsLabel: 'Groups',\n            },\n        },\n    };\n\n    for (const agg of Object.keys(defaultAggregators)) {\n        locales.en.localeStrings[agg] = agg;\n    }\n\n    //dateFormat deriver l10n requires month and day names to be passed in directly\n    const mthNamesEn = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n    const dayNamesEn = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n    const zeroPad = (number, padding = 2) => ('0' + number).substr(-padding, padding);\n\n    const derivers = {\n        bin(col, binWidth) {\n            return record => record[col] - (record[col] % binWidth);\n        },\n        dateFormat(col, formatString, utcOutput, mthNames, dayNames) {\n            if (utcOutput == null) {\n                utcOutput = false;\n            }\n            if (mthNames == null) {\n                mthNames = mthNamesEn;\n            }\n            if (dayNames == null) {\n                dayNames = dayNamesEn;\n            }\n            const utc = utcOutput ? 'UTC' : '';\n            return function (record) { //thanks http://stackoverflow.com/a/12213072/112871\n                const date = new Date(Date.parse(record[col]));\n                if (isNaN(date)) {\n                    return '';\n                }\n                return formatString.replace(/%(.)/g, function (m, p) {\n                    switch (p) {\n                        case 'y':\n                            return date[`get${utc}FullYear`]();\n                        case 'm':\n                            return zeroPad(date[`get${utc}Month`]() + 1);\n                        case 'n':\n                            return mthNames[date[`get${utc}Month`]()];\n                        case 'd':\n                            return zeroPad(date[`get${utc}Date`]());\n                        case 'w':\n                            return dayNames[date[`get${utc}Day`]()];\n                        case 'x':\n                            return date[`get${utc}Day`]();\n                        case 'H':\n                            return zeroPad(date[`get${utc}Hours`]());\n                        case 'M':\n                            return zeroPad(date[`get${utc}Minutes`]());\n                        case 'S':\n                            return zeroPad(date[`get${utc}Seconds`]());\n                        default:\n                            return '%' + p;\n                    }\n                });\n            };\n        },\n    };\n\n    const rx = /(\\d+)|(\\D+)/g;\n    const rd = /\\d/;\n    const rz = /^0/;\n    const naturalSort = (as, bs, nulls_first) => {\n        //nulls first\n        if (nulls_first == null) {\n            nulls_first = true;\n        }\n        const nf = nulls_first ? 1 : -1;\n        if ((bs != null) && (as == null)) {\n            return -1 * nf;\n        }\n        if ((as != null) && (bs == null)) {\n            return 1 * nf;\n        }\n\n        //then raw NaNs\n        if ((typeof as === 'number') && isNaN(as)) {\n            return -1;\n        }\n        if ((typeof bs === 'number') && isNaN(bs)) {\n            return 1;\n        }\n\n        //numbers and numbery strings group together\n        const nas = +as;\n        const nbs = +bs;\n        if (nas < nbs) {\n            return -1;\n        }\n        if (nas > nbs) {\n            return 1;\n        }\n\n        //within that, true numbers before numbery strings\n        if ((typeof as === 'number') && (typeof bs !== 'number')) {\n            return -1;\n        }\n        if ((typeof bs === 'number') && (typeof as !== 'number')) {\n            return 1;\n        }\n        if ((typeof as === 'number') && (typeof bs === 'number')) {\n            return 0;\n        }\n\n        // 'Infinity' is a textual number, so less than 'A'\n        if (isNaN(nbs) && !isNaN(nas)) {\n            return -1;\n        }\n        if (isNaN(nas) && !isNaN(nbs)) {\n            return 1;\n        }\n\n        //finally, \"smart\" string sorting per http://stackoverflow.com/a/4373421/112871\n        let a = String(as);\n        let b = String(bs);\n        if (a === b) {\n            return 0;\n        }\n        if (!rd.test(a) || !rd.test(b)) {\n            return (a > b ? 1 : -1);\n        }\n\n        //special treatment for strings containing digits\n        a = a.match(rx); //create digits vs. non-digit chunks and iterate through\n        b = b.match(rx);\n        while (a.length && b.length) {\n            const a1 = a.shift();\n            const b1 = b.shift();\n            if (a1 !== b1) {\n                if (rd.test(a1) && rd.test(b1)) { //both are digit chunks\n                    return a1.replace(rz, '.0') - b1.replace(rz, '.0');\n                } else {\n                    return (a1 > b1 ? 1 : -1);\n                }\n            }\n        }\n        return a.length - b.length;\n    };\n\n    const sortAs = function (order) {\n        const mapping = {};\n        const l_mapping = {}; // sort lowercased keys similarly\n        for (let i in order) {\n            const x = order[i];\n            mapping[x] = i;\n            if (typeof x === 'string') {\n                l_mapping[x.toLowerCase()] = i;\n            }\n        }\n        return function (a, b) {\n            if ((mapping[a] != null) && (mapping[b] != null)) {\n                return mapping[a] - mapping[b];\n            } else if (mapping[a] != null) {\n                return -1;\n            } else if (mapping[b] != null) {\n                return 1;\n            } else if ((l_mapping[a] != null) && (l_mapping[b] != null)) {\n                return l_mapping[a] - l_mapping[b];\n            } else if (l_mapping[a] != null) {\n                return -1;\n            } else if (l_mapping[b] != null) {\n                return 1;\n            } else {\n                return naturalSort(a, b);\n            }\n        };\n    };\n\n    function getSort(sorters, attr) {\n        if (sorters != null) {\n            if ($.isFunction(sorters)) {\n                const sort = sorters(attr);\n                if ($.isFunction(sort)) {\n                    return sort;\n                }\n            } else if (sorters[attr] != null) {\n                return sorters[attr];\n            }\n        }\n        return naturalSort;\n    }\n\n    const filterByLength = (keys, length) => keys.filter(x => x.length === length);\n\n    const subarrays = array => array.map((d, i) => array.slice(0, i + 1));  // [1,2,3] => [[1], [1,2], [1,2,3]]\n\n    function normalizeData(data) {\n        Object.entries(data).forEach(([key, value]) => {\n            if (value instanceof Date) {\n                data[key] = value.toISOString();\n            }\n        });\n\n        return data;\n    }\n\n    /*\n    Data Model class\n    */\n\n    class PivotData {\n        constructor(input, opts) {\n            this.arrSort = this.arrSort.bind(this);\n            this.sortKeys = this.sortKeys.bind(this);\n            this.getColKeys = this.getColKeys.bind(this);\n            this.getRowKeys = this.getRowKeys.bind(this);\n            this.getAggregator = this.getAggregator.bind(this);\n            if (opts == null) {\n                opts = {};\n            }\n            this.input = input;\n            if (!Array.isArray(opts.aggregator)) {\n                opts.aggregator = opts.aggregator != null ? opts.aggregator : aggregatorTemplates.count()();\n                opts.aggregator = [opts.aggregator];\n            }\n            this.aggregator = opts.aggregator != null ? opts.aggregator : [aggregatorTemplates.count()()];\n            this.aggregatorName = opts.aggregatorName != null ? opts.aggregatorName : 'Count';\n            this.colAttrs = opts.cols != null ? opts.cols : [];\n            this.rowAttrs = opts.rows != null ? opts.rows : [];\n            this.valAttrs = opts.vals != null ? opts.vals : [];\n            this.sorters = opts.sorters != null ? opts.sorters : {};\n            this.rowOrder = opts.rowOrder != null ? opts.rowOrder : 'key_a_to_z';\n            this.colOrder = opts.colOrder != null ? opts.colOrder : 'key_a_to_z';\n            this.derivedAttributes = opts.derivedAttributes != null ? opts.derivedAttributes : {};\n            this.filter = opts.filter != null ? opts.filter : (() => true);\n            this.tree = {};\n            this.rowKeys = [];\n            this.colKeys = [];\n            this.rowTotals = {};\n            this.colTotals = {};\n            this.allTotal = this.aggregator.map(agg => agg(this, [], []));\n            this.sorted = false;\n            this.aggregatorsLabel = opts.aggregatorsLabel != null ? opts.aggregatorsLabel : [];\n            this.grouping = opts.grouping != null ? opts.grouping : false;\n            this.rowGroupBefore = (opts.grouping != null ? opts.grouping.rowGroupBefore : undefined) != null ? (opts.grouping != null ? opts.grouping.rowGroupBefore : undefined) : true;\n            this.colGroupBefore = (opts.grouping != null ? opts.grouping.colGroupBefore : undefined) != null ? (opts.grouping != null ? opts.grouping.colGroupBefore : undefined) : false;\n\n            // iterate through input, accumulating data for cells\n            PivotData.forEachRecord(this.input, this.derivedAttributes, record => {\n                if (this.filter(record)) {\n                    return this.processRecord(normalizeData(record));\n                }\n            });\n        }\n\n        //can handle arrays or jQuery selections of tables\n        static forEachRecord(input, derivedAttributes, f) {\n            let addRecord;\n            if ($.isEmptyObject(derivedAttributes)) {\n                addRecord = f;\n            } else {\n                addRecord = function (record) {\n                    for (let k in derivedAttributes) {\n                        const v = derivedAttributes[k];\n                        record[k] = v(record) || record[k];\n                    }\n                    return f(record);\n                };\n            }\n\n            //if it's a function, have its calls us back\n            if ($.isFunction(input)) {\n                return input(addRecord);\n            } else if ($.isArray(input)) {\n                if ($.isArray(input[0])) { //array of arrays\n                    const result = [];\n                    for (let i of Object.keys(input || {})) {\n                        const compactRecord = input[i];\n                        if (i > 0) {\n                            const record = {};\n                            for (let j of Object.keys(input[0] || {})) {\n                                const k = input[0][j];\n                                record[k] = compactRecord[j];\n                            }\n                            result.push(addRecord(record));\n                        }\n                    }\n                    return result;\n                } else { //array of objects\n                    const result = [];\n                    for (let record of input) {\n                        result.push(addRecord(record));\n                    }\n                    return result;\n                }\n            } else if (input instanceof $) {\n                const tblCols = [];\n                $('thead > tr > th', input).each(function (i) {\n                    return tblCols.push($(this).text());\n                });\n                return $('tbody > tr', input).each(function (i) {\n                    const record = {};\n                    $('td', this).each(function (j) {\n                        return record[tblCols[j]] = $(this).text();\n                    });\n                    return addRecord(record);\n                });\n            } else {\n                throw new Error('unknown input format');\n            }\n        }\n\n        forEachMatchingRecord(criteria, callback) {\n            return PivotData.forEachRecord(this.input, this.derivedAttributes, record => {\n                if (!this.filter(record)) {\n                    return;\n                }\n                for (let k in criteria) {\n                    const v = criteria[k];\n                    if (v !== (record[k] != null ? record[k] : 'null')) {\n                        return;\n                    }\n                }\n                return callback(record);\n            });\n        }\n\n        arrSort(attrs, nulls_first) {\n\n            const sortersArr = [];\n            for (const a of attrs) {\n                sortersArr.push(getSort(this.sorters, a));\n            }\n\n            return function (a, b) {\n                for (let i of Object.keys(sortersArr || {})) {\n                    const sorter = sortersArr[i];\n                    const comparison = sorter(a[i], b[i], nulls_first);\n                    if (comparison !== 0) {\n                        return comparison;\n                    }\n                }\n                return 0;\n            };\n        }\n\n        sortKeys() {\n            if (!this.sorted) {\n                this.sorted = true;\n                const v = (r, c) => this.getAggregator(r, c).value();\n                switch (this.rowOrder) {\n                    case 'value_a_to_z':\n                        this.rowKeys.sort((a, b) => naturalSort(v(a, []), v(b, [])));\n                        break;\n                    case 'value_z_to_a':\n                        this.rowKeys.sort((a, b) => -naturalSort(v(a, []), v(b, [])));\n                        break;\n                    default:\n                        this.rowKeys.sort(this.arrSort(this.rowAttrs, this.rowGroupBefore));\n                }\n                switch (this.colOrder) {\n                    case 'value_a_to_z':\n                        return this.colKeys.sort((a, b) => naturalSort(v([], a), v([], b)));\n                    case 'value_z_to_a':\n                        return this.colKeys.sort((a, b) => -naturalSort(v([], a), v([], b)));\n                    default:\n                        return this.colKeys.sort(this.arrSort(this.colAttrs, this.colGroupBefore));\n                }\n            }\n        }\n\n        getColKeys(all_keys) {\n            if (all_keys == null) {\n                all_keys = false;\n            }\n            this.sortKeys();\n            if (all_keys) {\n                return this.colKeys;\n            } else {\n                return filterByLength(this.colKeys, this.colAttrs.length);\n            }\n        }\n\n        getRowKeys(all_keys) {\n            if (all_keys == null) {\n                all_keys = false;\n            }\n            this.sortKeys();\n            if (all_keys) {\n                return this.rowKeys;\n            } else {\n                return filterByLength(this.rowKeys, this.rowAttrs.length);\n            }\n        }\n\n        processRecord(record) { //this code is called in a tight loop\n            let x;\n            let colKeys = [];\n            let rowKeys = [];\n            for (x of this.colAttrs) {\n                colKeys.push(record[x] != null ? record[x] : 'null');\n            }\n            for (x of this.rowAttrs) {\n                rowKeys.push(record[x] != null ? record[x] : 'null');\n            }\n            colKeys = this.grouping && colKeys.length ? subarrays(colKeys) : [colKeys];\n            rowKeys = this.grouping && rowKeys.length ? subarrays(rowKeys) : [rowKeys];\n\n            this.aggregator.forEach((agg, id) => {\n                return this.allTotal[id].push(record);\n            });\n\n            const result = [];\n            for (let j in rowKeys) {\n                const rowKey = rowKeys[j];\n                const flatRowKey = rowKey.join(String.fromCharCode(0));\n\n                const result1 = [];\n                for (let i in colKeys) {\n                    const colKey = colKeys[i];\n                    const flatColKey = colKey.join(String.fromCharCode(0));\n\n                    if (rowKey.length !== 0) {\n                        if (!this.rowTotals[flatRowKey]) {\n                            this.rowKeys.push(rowKey);\n                            this.rowTotals[flatRowKey] = this.aggregator.map(agg => agg(this, rowKey, []));\n                        }\n                        this.rowTotals[flatRowKey].forEach((agg, id) => {\n                            if (!this.grouping || (colKey.length === 1)) {\n                                return agg.push(record);\n                            }\n                        });\n                    }\n\n                    if (colKey.length !== 0) {\n                        if (!this.colTotals[flatColKey]) {\n                            this.colKeys.push(colKey);\n                            this.colTotals[flatColKey] = this.aggregator.map(agg => agg(this, [], colKey));\n                        }\n                        this.colTotals[flatColKey].forEach((agg, id) => {\n                            if (!this.grouping || (rowKey.length === 1)) {\n                                return agg.push(record);\n                            }\n                        });\n                    }\n\n                    if ((colKey.length !== 0) && (rowKey.length !== 0)) {\n                        if (!this.tree[flatRowKey]) {\n                            this.tree[flatRowKey] = {};\n                        }\n                        if (!this.tree[flatRowKey][flatColKey]) {\n                            this.tree[flatRowKey][flatColKey] = this.aggregator.map(agg => agg(this, rowKey, colKey));\n                        }\n                        result1.push(this.tree[flatRowKey][flatColKey].forEach((agg, id) => agg.push(record)));\n                    } else {\n                        result1.push(undefined);\n                    }\n                }\n                result.push(result1);\n            }\n            return result;\n        }\n\n        getAggregator(rowKey, colKey, id) {\n            let agg;\n            if (id == null) {\n                id = 0;\n            }\n            const flatRowKey = rowKey.join(String.fromCharCode(0));\n            const flatColKey = colKey.join(String.fromCharCode(0));\n            if ((rowKey.length === 0) && (colKey.length === 0)) {\n                agg = this.allTotal[id];\n            } else if (rowKey.length === 0) {\n                agg = this.colTotals[flatColKey] && this.colTotals[flatColKey][id];\n            } else if (colKey.length === 0) {\n                agg = this.rowTotals[flatRowKey] && this.rowTotals[flatRowKey][id];\n            } else {\n                agg = this.tree[flatRowKey][flatColKey] && this.tree[flatRowKey][flatColKey][id];\n            }\n            return agg != null ? agg : {\n                value() {\n                    return null;\n                }, format() {\n                    return '';\n                },\n            };\n        }\n    }\n\n    const renameAggregators = (aggregators) => aggregators.map((agg, id) =>\n        (agg.displayName = String.fromCharCode(97 + id).toUpperCase()));\n\n    const fieldsType = {\n        string: 'String',\n        number: 'Number',\n        date: 'Date',\n        time: 'Time',\n        datetime: 'Datetime',\n        boolean: 'Boolean',\n        integer: 'Integer',\n    };\n\n    //expose these to the outside world\n    $.pivotUtilities = {\n        aggregatorTemplates, aggregators: defaultAggregators, renderers, cellRenderers, derivers, locales, fieldsType,\n        zeroPad, naturalSort, numberFormat, sortAs, PivotData\n    };\n\n    /*\n    Default Renderer for hierarchical table layout\n    */\n\n    function pivotTableRenderer(pivotData, opts) {\n\n        let agg, aggregator, colKey, getClickHandler, i, id, j, td, th, totalAggregator, tr, val, x;\n        const defaults = {\n            table: {\n                clickCallback: null,\n                rowTotals: true,\n                colTotals: true,\n            },\n            localeStrings: {\n                totals: 'Totals',\n            },\n\n            typeCellRenderer: cellRenderers.text,\n            headCellRenderer: cellRenderers.text,\n            dataCellRenderer: cellRenderers.text,\n\n            fieldsType: {},\n        };\n\n        opts = $.extend(true, {}, defaults, opts);\n\n        const {\n            colAttrs,\n        } = pivotData;\n        const {\n            rowAttrs,\n        } = pivotData;\n        const rowKeys = pivotData.getRowKeys(true);\n        const colKeys = pivotData.getColKeys(true);\n\n        if (opts.table.clickCallback) {\n            getClickHandler = function (value, rowValues, colValues) {\n                let attr, i;\n                const filters = {};\n                for (i of Object.keys(colAttrs || {})) {\n                    attr = colAttrs[i];\n                    if (colValues[i] != null) {\n                        filters[attr] = colValues[i];\n                    }\n                }\n                for (i of Object.keys(rowAttrs || {})) {\n                    attr = rowAttrs[i];\n                    if (rowValues[i] != null) {\n                        filters[attr] = rowValues[i];\n                    }\n                }\n                return e => opts.table.clickCallback(e, value, filters, pivotData);\n            };\n        }\n\n        const compactLayout = (opts.table.compactLayout != null ? opts.table.compactLayout : true) && pivotData.grouping;\n        const rowExpandHandler = compactLayout ? expandRowCol : pivotData.rowGroupBefore ? expandWithSpan : expandRowsGroupAfter;\n\n        const rowsExpandHandler = getExpandHandler(rowKeys, true, rowExpandHandler.bind(pivotData));\n        const colsExpandHandler = getExpandHandler(colKeys, false, expandWithSpan.bind(pivotData));\n\n        //now actually build the outpu\n        const result = document.createElement('table');\n        result.className = 'pvtTable';\n\n        //helper function for setting row/col-span in pivotTableRenderer\n        const spanSize = function (arr, i, j) {\n            let x;\n            if (i !== 0) {\n                let asc, end;\n                let noDraw = true;\n                for (x = 0, end = j, asc = 0 <= end; asc ? x <= end : x >= end; asc ? x++ : x--) {\n                    if (arr[i - 1][x] !== arr[i][x]) {\n                        noDraw = false;\n                    }\n                }\n                if (noDraw) {\n                    return -1; //do not draw cell\n                }\n            }\n            let len = 0;\n            while ((i + len) < arr.length) {\n                let asc1, end1;\n                let stop = false;\n                for (x = 0, end1 = j, asc1 = 0 <= end1; asc1 ? x <= end1 : x >= end1; asc1 ? x++ : x--) {\n                    if (arr[i][x] !== arr[i + len][x]) {\n                        stop = true;\n                    }\n                }\n                if (stop) {\n                    break;\n                }\n                len++;\n            }\n            return len;\n        };\n\n        //the first few rows are for col headers\n        const thead = document.createElement('thead');\n        for (j of Object.keys(colAttrs || {})) {\n            const c = colAttrs[j];\n            tr = document.createElement('tr');\n            if ((parseInt(j) === 0) && (rowAttrs.length !== 0)) {\n                th = document.createElement('th');\n                th.setAttribute('colspan', rowAttrs.length);\n                th.setAttribute('rowspan', colAttrs.length);\n                tr.appendChild(th);\n            }\n            th = document.createElement('th');\n            th.className = 'pvtAxisLabel';\n            th.appendChild(opts.typeCellRenderer.call(opts, c));\n            if (pivotData.grouping && (j < (colAttrs.length - 1))) {\n                th.onclick = getExpandAllHandler(pivotData, +j, false);\n                th.className += ` open level${j}`;\n            }\n            tr.appendChild(th);\n            for (i of Object.keys(colKeys || {})) {\n                colKey = colKeys[i];\n                x = spanSize(colKeys, parseInt(i), parseInt(j));\n                if (x !== -1) {\n                    th = document.createElement('th');\n                    th.className = 'pvtColLabel';\n                    th.className += ` col${pivotData.colGroupBefore ? +i : (+i + x) - 1}`;\n                    th.appendChild(opts.headCellRenderer.call(opts, colKey[j], c));\n                    th.setAttribute('colspan', x * Math.max(1, pivotData.aggregator.length));\n                    if ((parseInt(j) === (colAttrs.length - 1)) && (rowAttrs.length !== 0)) {\n                        th.setAttribute('rowspan', 2);\n                    }\n                    if (pivotData.grouping && (j < (colAttrs.length - 1)) && colKey[j]) {\n                        th.className += ' pvtSubtotal open';\n                        th.setAttribute('colspan', x * Math.max(1, pivotData.aggregator.length));\n                        th.onclick = colsExpandHandler;\n                    }\n                    tr.appendChild(th);\n                }\n            }\n            if ((parseInt(j) === 0) && opts.table.rowTotals) {\n                th = document.createElement('th');\n                th.className = 'pvtTotalLabel pvtRowTotalLabel';\n                th.innerHTML = opts.localeStrings.totals;\n                th.setAttribute('colspan', Math.max(1, pivotData.aggregator.length));\n                th.setAttribute('rowspan', colAttrs.length + (rowAttrs.length === 0 ? 0 : 1));\n                tr.appendChild(th);\n            }\n            thead.appendChild(tr);\n        }\n\n        //then a row for row header headers\n        if (rowAttrs.length !== 0) {\n            tr = document.createElement('tr');\n            for (i of Object.keys(rowAttrs || {})) {\n                const r = rowAttrs[i];\n                th = document.createElement('th');\n                th.className = 'pvtAxisLabel';\n                th.appendChild(opts.typeCellRenderer.call(opts, r));\n                if (pivotData.grouping && (i < (rowAttrs.length - 1))) {\n                    th.className += ` open level${i}`;\n                    th.onclick = getExpandAllHandler(pivotData, +i, true);\n                }\n                tr.appendChild(th);\n            }\n            th = document.createElement('th');\n            if (colAttrs.length === 0) {\n                th.className = 'pvtTotalLabel pvtRowTotalLabel';\n                th.innerHTML = opts.localeStrings.totals;\n                th.setAttribute('colspan', pivotData.aggregator.length);\n            }\n            tr.appendChild(th);\n            thead.appendChild(tr);\n        }\n        result.appendChild(thead);\n\n        //now the actual data rows, with their row headers and totals\n        const tbody = document.createElement('tbody');\n\n        if (pivotData.aggregatorsLabel && (pivotData.aggregatorsLabel.length > 1)) {\n            let lbl;\n            tr = document.createElement('tr');\n            th = document.createElement('th');\n            const colspan = rowAttrs.length + (colAttrs.length === 0 ? 0 : 1);\n            th.setAttribute('colspan', colspan);\n            tr.appendChild(th);\n\n            for (j of Object.keys(colKeys || {})) { //this is a tight loop\n                colKey = colKeys[j];\n                for (lbl of pivotData.aggregatorsLabel) {\n                    th = document.createElement('th');\n                    th.className = `pvtAggregatorLabel col${j}`;\n                    th.textContent = lbl;\n                    tr.appendChild(th);\n                }\n            }\n\n            for (lbl of pivotData.aggregatorsLabel) {\n                th = document.createElement('th');\n                th.className = 'pvtAggregatorLabel';\n                th.textContent = lbl;\n                tr.appendChild(th);\n            }\n\n            tbody.appendChild(tr);\n        }\n\n\n        for (i of Object.keys(rowKeys || {})) {\n            const rowKey = rowKeys[i];\n            tr = document.createElement('tr');\n            const rowGap = rowAttrs.length - rowKey.length;\n            tr.className = rowGap ? `pvtSubtotal level${rowKey.length}` : 'pvtData';\n            for (j of Object.keys(rowKey || {})) {\n                const txt = rowKey[j];\n                if (compactLayout && (j < (rowKey.length - 1))) {\n                    continue;\n                }\n                x = compactLayout ? 1 : spanSize(rowKeys, parseInt(i), parseInt(j));\n                if (x !== -1) {\n                    th = document.createElement('th');\n                    th.className = 'pvtRowLabel';\n                    th.className += ` row${pivotData.rowGroupBefore ? +i : (+i + x) - 1}`;\n                    th.appendChild(opts.headCellRenderer.call(opts, txt, rowAttrs[j]));\n                    th.setAttribute('rowspan', x);\n                    if (compactLayout) {\n                        th.colSpan = rowAttrs.length;\n                        th.style.paddingLeft = 5 + (parseInt(j) * 20) + 'px';\n                    }\n                    if (pivotData.grouping && (j < (rowAttrs.length - 1))) {\n                        th.className += ' open';\n                        th.onclick = rowsExpandHandler;\n                    }\n                    tr.appendChild(th);\n                }\n            }\n\n            if (!compactLayout && rowGap) {\n                th = document.createElement('th');\n                th.colSpan = rowGap;\n                th.textContent = `Total (${rowKey[j]})`;\n                tr.appendChild(th);\n            }\n\n            if (colAttrs.length) {\n                th.colSpan++;\n            }\n\n            for (j of Object.keys(colKeys || {})) { //this is a tight loop\n                colKey = colKeys[j];\n                for (id = 0; id < pivotData.aggregator.length; id++) {\n                    agg = pivotData.aggregator[id];\n                    aggregator = pivotData.getAggregator(rowKey, colKey, id);\n                    val = aggregator.value(id);\n                    td = document.createElement('td');\n                    if (!rowGap) {\n                        td.className = 'pvtVal ';\n                    }\n                    td.className += `row${i} col${j}`;\n                    if (colAttrs.length - colKey.length) {\n                        td.className = `pvtSubtotal level${colKey.length} row${i} col${j}`;\n                    }\n                    td.appendChild(opts.dataCellRenderer.call(opts, aggregator.format(val, opts.fieldsType[aggregator?.attr]), aggregator?.attr, rowKey, colKey));\n                    td.setAttribute('data-value', val);\n                    if (getClickHandler != null) {\n                        td.onclick = getClickHandler(val, rowKey, colKey);\n                    }\n                    tr.appendChild(td);\n                }\n            }\n\n            if (opts.table.rowTotals || (colAttrs.length === 0)) {\n                for (id = 0; id < pivotData.aggregator.length; id++) {\n                    agg = pivotData.aggregator[id];\n                    totalAggregator = pivotData.getAggregator(rowKey, [], id);\n                    val = totalAggregator.value(id);\n                    td = document.createElement('td');\n                    td.className = 'pvtTotal rowTotal';\n                    td.append(opts.dataCellRenderer.call(opts, totalAggregator.format(val, opts.fieldsType[totalAggregator?.attr]), totalAggregator?.attr, rowKey, []));\n                    td.setAttribute('data-value', val);\n                    if (getClickHandler != null) {\n                        td.onclick = getClickHandler(val, rowKey, []);\n                    }\n                    td.setAttribute('data-for', 'row' + i);\n                    tr.appendChild(td);\n                }\n            }\n            tbody.appendChild(tr);\n        }\n\n        //finally, the row for col totals, and a grand total\n        if (opts.table.colTotals || (rowAttrs.length === 0)) {\n            tr = document.createElement('tr');\n            if (opts.table.colTotals || (rowAttrs.length === 0)) {\n                th = document.createElement('th');\n                th.className = 'pvtTotalLabel pvtColTotalLabel';\n                th.innerHTML = opts.localeStrings.totals;\n                th.setAttribute('colspan', rowAttrs.length + (colAttrs.length === 0 ? 0 : 1));\n                tr.appendChild(th);\n            }\n            for (j of Object.keys(colKeys || {})) {\n                colKey = colKeys[j];\n                for (id = 0; id < pivotData.aggregator.length; id++) {\n                    agg = pivotData.aggregator[id];\n                    totalAggregator = pivotData.getAggregator([], colKey, id);\n                    val = totalAggregator.value(id);\n                    td = document.createElement('td');\n                    td.className = `pvtTotal colTotal col${j}`;\n                    if (colKey.length !== colAttrs.length) {\n                        td.className += ` pvtSubtotal level${colKey.length}`;\n                    }\n                    td.append(opts.dataCellRenderer.call(opts, totalAggregator.format(val, opts.fieldsType[totalAggregator?.attr]), totalAggregator?.attr, [], colKey));\n                    td.setAttribute('data-value', val);\n                    if (getClickHandler != null) {\n                        td.onclick = getClickHandler(val, [], colKey);\n                    }\n                    td.setAttribute('data-for', 'col' + j);\n                    tr.appendChild(td);\n                }\n            }\n            if (opts.table.rowTotals || (colAttrs.length === 0)) {\n                for (id = 0; id < pivotData.aggregator.length; id++) {\n                    agg = pivotData.aggregator[id];\n                    totalAggregator = pivotData.getAggregator([], [], id);\n                    val = totalAggregator.value(id);\n                    td = document.createElement('td');\n                    td.className = 'pvtGrandTotal';\n                    td.append(opts.dataCellRenderer.call(opts, totalAggregator.format(val, opts.fieldsType[totalAggregator?.attr]), totalAggregator?.attr, [], []));\n                    td.setAttribute('data-value', val);\n                    if (getClickHandler != null) {\n                        td.onclick = getClickHandler(val, [], []);\n                    }\n                    tr.appendChild(td);\n                }\n            }\n            tbody.appendChild(tr);\n        }\n        result.appendChild(tbody);\n\n        //squirrel this away for later\n        result.setAttribute('data-numrows', rowKeys.length);\n        result.setAttribute('data-numcols', colKeys.length);\n\n        return result;\n    }\n\n    /*\n    Pivot Table core: create PivotData object and call Renderer on it\n    */\n\n    $.fn.pivot = function (input, inputOpts, locale) {\n        let e;\n        if (locale.indexOf('/') > -1) {\n            let split = locale.split('/');\n            locale = split[0];\n            regionalSettings = split[1];\n        }\n        if (locale == null) {\n            locale = 'en';\n        }\n        if (locales[locale] == null) {\n            locale = 'en';\n        }\n        if (regionalSettings.length === 0) {\n            regionalSettings = locale;\n        }\n        localeGlobal = locale;\n        inputOpts = inputOpts || {};\n        const defaults = {\n            cols: [], rows: [], vals: [],\n            rowOrder: 'key_a_to_z', colOrder: 'key_a_to_z',\n            dataClass: PivotData,\n            filter() {\n                return true;\n            },\n            aggregator: aggregatorTemplates.count()(),\n            aggregatorName: 'Count',\n            sorters: {},\n            derivedAttributes: {},\n            renderer: pivotTableRenderer,\n        };\n\n        const localeStrings = $.extend(true, {}, locales.en.localeStrings, locales[locale].localeStrings);\n        const localeDefaults = {\n            rendererOptions: { localeStrings },\n            localeStrings,\n        };\n\n        const opts = $.extend(true, {}, localeDefaults, $.extend({}, defaults, inputOpts));\n\n        let result;\n        inputOpts.pivotData = null;\n        try {\n            const pivotData = new opts.dataClass(input, opts);\n            try {\n                result = opts.renderer(pivotData, opts.rendererOptions);\n                inputOpts.pivotData = pivotData;\n            } catch (error) {\n                e = error;\n                if (typeof console !== 'undefined' && console !== null) {\n                    console.error(e.stack);\n                }\n                result = $('<span>').html(opts.localeStrings.renderError);\n            }\n        } catch (error1) {\n            e = error1;\n            if (typeof console !== 'undefined' && console !== null) {\n                console.error(e.stack);\n            }\n            result = $('<span>').html(opts.localeStrings.computeError);\n        }\n\n        const x = this[0];\n        while (x.hasChildNodes()) {\n            x.removeChild(x.lastChild);\n        }\n        return this.append(result);\n    };\n\n    /*\n    Pivot Table UI: calls the Pivot Table core above with options set by user\n    */\n\n    $.fn.pivotUI = function (input, inputOpts, overwrite, locale) {\n        let opts;\n        let a, c;\n        if (overwrite == null) {\n            overwrite = false;\n        }\n        if (locale.indexOf('/') > -1) {\n            let split = locale.split('/');\n            locale = split[0];\n            regionalSettings = split[1];\n        }\n        if (locale == null) {\n            locale = 'fr';\n        }\n        if ((locales[locale] == null)) {\n            locale = 'en';\n        }\n\n        const defaults = {\n            derivedAttributes: {},\n            aggregators: defaultAggregators,\n            renderers,\n            hiddenAttributes: [],\n            hiddenFromAggregators: [],\n            hiddenFromDragDrop: [],\n            menuLimit: 500,\n            cols: [], rows: [], vals: [],\n            rowOrder: 'key_a_to_z', colOrder: 'key_a_to_z',\n            dataClass: PivotData,\n            exclusions: {},\n            inclusions: {},\n            unusedAttrsVertical: 85,\n            autoSortUnusedAttrs: false,\n            onRefresh: null,\n            showUI: true,\n            filter() {\n                return true;\n            },\n            sorters: {},\n            multiple: true,\n            parametersActive: false,\n        };\n\n        let itemsId = 0;\n        let aggregators = [];\n        const localeStrings = $.extend(true, {}, locales.en.localeStrings, locales[locale].localeStrings);\n        const localeDefaults = {\n            rendererOptions: { localeStrings },\n            localeStrings,\n        };\n\n        const existingOpts = this.data('pivotUIOptions');\n        if ((existingOpts == null) || overwrite) {\n            opts = $.extend(true, {}, localeDefaults, $.extend({}, defaults, inputOpts));\n        } else {\n            opts = existingOpts;\n        }\n\n        if (!inputOpts?.aggregators && locales[regionalSettings].formatters) {\n            opts.aggregators = makeAggregators(\n                locales[regionalSettings].formatters.format,\n                locales[regionalSettings].formatters.formatInt,\n                locales[regionalSettings].formatters.formatPct);\n        }\n\n        try {\n            // do a first pass on the data to cache a materialized copy of any\n            // function-valued inputs and to compute dimension cardinalities\n            let attr, i, unusedAttrsVerticalAutoCutoff, x;\n            const attrValues = {};\n            const materializedInput = [];\n            let recordsProcessed = 0;\n            PivotData.forEachRecord(input, opts.derivedAttributes, function (record) {\n                let attr;\n                if (!opts.filter(record)) {\n                    return;\n                }\n                materializedInput.push(record);\n                for (attr of Object.keys(record || {})) {\n                    if ((attrValues[attr] == null)) {\n                        attrValues[attr] = {};\n                        if (recordsProcessed > 0) {\n                            attrValues[attr]['null'] = recordsProcessed;\n                        }\n                    }\n                }\n                for (attr in attrValues) {\n                    const value = record[attr] != null ? record[attr] : 'null';\n                    if (attrValues[attr][value] == null) {\n                        attrValues[attr][value] = 0;\n                    }\n                    attrValues[attr][value]++;\n                }\n                return recordsProcessed++;\n            });\n\n            const uiContainer = $('<div>').addClass('pvtUi');\n\n            const uiMenu = $('<div>').addClass('pvtUiMenu');\n            const uiParameters = $('<div>').addClass('pvtUiParameters');\n            const uiPivotContainer = $('<div>').addClass('pvtUiContainer');\n\n            const uiButtonColumns = $('<div>')\n                .addClass('pvtUiVerticalButton')\n                .addClass('pvtUiButtonColumns')\n                .addClass('active')\n                .text(localeStrings.colsLabel)\n                .on('click', function () {\n                    opts.parametersActive = !opts.parametersActive;\n                    if (opts.parametersActive) {\n                        uiButtonColumns.addClass('active');\n                        return uiParameters.show();\n                    } else {\n                        uiButtonColumns.removeClass('active');\n                        return uiParameters.hide();\n                    }\n                })\n                .appendTo(uiMenu);\n\n            const uiButtonGroups = $('<div>')\n                .addClass('pvtUiVerticalButton')\n                .addClass('pvtUiButtonGroups')\n                .text(localeStrings.groupsLabel)\n                .on('click', function () {\n                    if (opts.grouping) {\n                        uiButtonGroups.removeClass('active');\n                        opts.grouping = false;\n                    } else {\n                        uiButtonGroups.addClass('active');\n                        opts.grouping = {\n                            colGroupBefore: false,\n                        };\n                    }\n                    return refresh();\n                })\n                .appendTo(uiMenu);\n\n            uiContainer\n                .append(uiMenu)\n                .append(uiParameters)\n                .append(uiPivotContainer);\n\n            //# Render type\n            $('<div>')\n                .addClass('pvtParameterLabel')\n                .appendTo(uiParameters)\n                .text(localeStrings.rendererLabel);\n            let pvtRenderType = $('<div>')\n                .addClass('pvtRendererType')\n                .addClass('pvtParameter')\n                .appendTo(uiParameters);\n            const renderer = $('<select>')\n                .addClass('pvtRenderer')\n                .appendTo(pvtRenderType)\n                .bind('change', () => refresh()); //capture reference\n            for (x of Object.keys(opts.renderers || {})) {\n                const r = opts.localeStrings[x] || x;\n                $('<option>').val(x).html(r).appendTo(renderer);\n            }\n\n            //axis list, including the double click menu\n            const unused = $('<div>').addClass('pvtAxisContainer pvtUnused');\n            const shownAttributes = [];\n            for (a in attrValues) {\n                if (!opts.hiddenAttributes.includes(a)) {\n                    shownAttributes.push(a);\n                }\n            }\n            const shownInAggregators = [];\n            for (c of shownAttributes) {\n                if (!opts.hiddenFromAggregators.includes(c)) {\n                    shownInAggregators.push(c);\n                }\n            }\n            const shownInDragDrop = [];\n            for (c of shownAttributes) {\n                if (!opts.hiddenFromDragDrop.includes(c)) {\n                    shownInDragDrop.push(c);\n                }\n            }\n\n            let unusedAttrsVerticalAutoOverride = false;\n            if (opts.unusedAttrsVertical === 'auto') {\n                unusedAttrsVerticalAutoCutoff = 120; // legacy support\n            } else {\n                unusedAttrsVerticalAutoCutoff = parseInt(opts.unusedAttrsVertical);\n            }\n\n            if (!isNaN(unusedAttrsVerticalAutoCutoff)) {\n                let attrLength = 0;\n                for (a of shownInDragDrop) {\n                    attrLength += a.length;\n                }\n                unusedAttrsVerticalAutoOverride = attrLength > unusedAttrsVerticalAutoCutoff;\n            }\n\n            for (i of Object.keys(shownInDragDrop || {})) {\n                attr = shownInDragDrop[i];\n                const values = [];\n                for (const v in attrValues[attr]) {\n                    values.push(v);\n                }\n                let hasExcludedItem = false;\n                const valueList = $('<div>').addClass('pvtFilterBox').hide();\n\n                valueList.append($('<h4>').append(\n                        $('<span>').text(attr),\n                        $('<span>').addClass('count').text(`(${values.length})`),\n                    ),\n                );\n                if (values.length > opts.menuLimit) {\n                    valueList.append($('<p>').html(opts.localeStrings.tooMany));\n                } else {\n                    if (values.length > 5) {\n                        const controls = $('<p>').appendTo(valueList);\n                        const sorter = getSort(opts.sorters, attr);\n                        const placeholder = opts.localeStrings.filterResults;\n                        $('<input>', { type: 'text' }).appendTo(controls)\n                            .attr({ placeholder, class: 'pvtSearch' })\n                            .bind('keyup', function () {\n                                const filter = $(this).val().toLowerCase().trim();\n                                const accept_gen = (prefix, accepted) => (function (v) {\n                                    const real_filter = filter.substring(prefix.length).trim();\n                                    if (real_filter.length === 0) {\n                                        return true;\n                                    }\n                                    return accepted.includes(Math.sign(sorter(v.toLowerCase(), real_filter)));\n                                });\n                                const accept =\n                                    filter.indexOf('>=') === 0 ? accept_gen('>=', [1, 0])\n                                        : filter.indexOf('<=') === 0 ? accept_gen('<=', [-1, 0])\n                                            : filter.indexOf('>') === 0 ? accept_gen('>', [1])\n                                                : filter.indexOf('<') === 0 ? accept_gen('<', [-1])\n                                                    : filter.indexOf('~') === 0 ? function (v) {\n                                                            if (filter.substring(1).trim().length === 0) {\n                                                                return true;\n                                                            }\n                                                            return v.toLowerCase().match(filter.substring(1));\n                                                        }\n                                                        : v => v.toLowerCase().indexOf(filter) !== -1;\n\n                                return valueList.find('.pvtCheckContainer p label span.value').each(function () {\n                                    if (accept($(this).text())) {\n                                        return $(this).parent().parent().show();\n                                    } else {\n                                        return $(this).parent().parent().hide();\n                                    }\n                                });\n                            });\n                        controls.append($('<br>'));\n                        $('<button>', { type: 'button' }).appendTo(controls)\n                            .html(opts.localeStrings.selectAll)\n                            .bind('click', function () {\n                                valueList.find('input:visible:not(:checked)')\n                                    .prop('checked', true).toggleClass('changed');\n                                return false;\n                            });\n                        $('<button>', { type: 'button' }).appendTo(controls)\n                            .html(opts.localeStrings.selectNone)\n                            .bind('click', function () {\n                                valueList.find('input:visible:checked')\n                                    .prop('checked', false).toggleClass('changed');\n                                return false;\n                            });\n                    }\n\n                    const checkContainer = $('<div>').addClass('pvtCheckContainer').appendTo(valueList);\n\n                    for (let value of values.sort(getSort(opts.sorters, attr))) {\n                        const valueCount = attrValues[attr][value];\n                        const filterItem = $('<label>');\n                        let filterItemExcluded = false;\n                        if (opts.inclusions[attr]) {\n                            filterItemExcluded = (!opts.inclusions[attr].includes(value));\n                        } else if (opts.exclusions[attr]) {\n                            filterItemExcluded = (opts.exclusions[attr].includes(value));\n                        }\n                        if (!hasExcludedItem) {\n                            hasExcludedItem = filterItemExcluded;\n                        }\n                        $('<input>')\n                            .attr('type', 'checkbox').addClass('pvtFilter')\n                            .attr('checked', !filterItemExcluded).data('filter', [attr, value])\n                            .appendTo(filterItem)\n                            .bind('change', function () {\n                                return $(this).toggleClass('changed');\n                            });\n                        filterItem.append($('<span>').addClass('value').text(value));\n                        filterItem.append($('<span>').addClass('count').text('(' + valueCount + ')'));\n                        checkContainer.append($('<p>').append(filterItem));\n                    }\n                }\n\n                const closeFilterBox = function () {\n                    if (valueList.find('[type=\\'checkbox\\']').length >\n                        valueList.find('[type=\\'checkbox\\']:checked').length) {\n                        attrElem.addClass('pvtFilteredAttribute');\n                    } else {\n                        attrElem.removeClass('pvtFilteredAttribute');\n                    }\n\n                    valueList.find('.pvtSearch').val('');\n                    valueList.find('.pvtCheckContainer p').show();\n                    return valueList.hide();\n                };\n\n\n                const finalButtons = $('<p>').appendTo(valueList);\n\n                if (values.length <= opts.menuLimit) {\n                    $('<button>', { type: 'button' }).text(opts.localeStrings.apply)\n                        .appendTo(finalButtons).bind('click', function () {\n                        if (valueList.find('.changed').removeClass('changed').length) {\n                            refresh();\n                        }\n                        return closeFilterBox();\n                    });\n                }\n\n                $('<button>', { type: 'button' }).text(opts.localeStrings.cancel)\n                    .appendTo(finalButtons).bind('click', function () {\n                    valueList.find('.changed:checked')\n                        .removeClass('changed').prop('checked', false);\n                    valueList.find('.changed:not(:checked)')\n                        .removeClass('changed').prop('checked', true);\n                    return closeFilterBox();\n                });\n\n                const triangleLink = $('<span>').addClass('pvtTriangle')\n                    .html(' &#x25BE;').bind('click', function (e) {\n                        const { left, top } = $(e.currentTarget).position();\n                        return valueList.css({ left: left + 10, top: top + 10 }).show();\n                    });\n\n                const attrElem = $('<li>').addClass(`axis_${i}`)\n                    .append($('<span>').addClass('pvtAttr').text(attr).data('attrName', attr).append(triangleLink));\n\n                if (hasExcludedItem) {\n                    attrElem.addClass('pvtFilteredAttribute');\n                }\n                unused.append(attrElem).append(valueList);\n            }\n\n            $('<div>')\n                .addClass('pvtParameterLabel')\n                .appendTo(uiParameters)\n                .text(localeStrings.valuesLabel);\n\n            //aggregator menu and value area\n            const divAggregator = $('<div>')\n                .addClass('pvtAggregatorChoose')\n                .addClass('pvtParameter')\n                .appendTo(uiParameters);\n\n            const aggregator = $('<select>')\n                .addClass('pvtAggregator')\n                .appendTo(divAggregator)\n                .bind('change', () => {\n                    if (!opts.multiple) {\n                        this.find('.pvtVals .pvtAttrDropdown').each(function () {\n                            return this.remove();\n                        });\n                        aggregators = [{ id: 1, value: aggregator.val() }];\n                        return refresh();\n                    }\n                }); //capture reference\n\n            for (x of Object.keys(opts.aggregators || {})) {\n                aggregator.append($('<option>').val(x).html(locales[locale].localeStrings[x] || locales['en'].localeStrings[x] || x));\n            }\n\n            if (opts.multiple) {\n                $('<a>', { role: 'button' })\n                    .addClass('pvtAddAggregator')\n                    .addClass('pvtToolButton')\n                    .appendTo(divAggregator)\n                    .html('+')\n                    .bind('click', function () {\n                        aggregators.push({ id: ++itemsId, value: aggregator.val() });\n                        renameAggregators(aggregators);\n                        return refresh();\n                    });\n            }\n\n            const ordering = {\n                key_a_to_z: { rowSymbol: '&varr;', colSymbol: '&harr;', next: 'value_a_to_z' },\n                value_a_to_z: { rowSymbol: '&darr;', colSymbol: '&rarr;', next: 'value_z_to_a' },\n                value_z_to_a: { rowSymbol: '&uarr;', colSymbol: '&larr;', next: 'key_a_to_z' },\n            };\n\n            const rowOrderArrow = $('<a>', { role: 'button' })\n                .addClass('pvtRowOrder')\n                .addClass('pvtToolButton')\n                .appendTo(divAggregator)\n                .data('order', opts.rowOrder).html(ordering[opts.rowOrder].rowSymbol)\n                .bind('click', function () {\n                    $(this).data('order', ordering[$(this).data('order')].next);\n                    $(this).html(ordering[$(this).data('order')].rowSymbol);\n                    return refresh();\n                });\n\n            const colOrderArrow = $('<a>', { role: 'button' })\n                .addClass('pvtColOrder')\n                .addClass('pvtToolButton')\n                .appendTo(divAggregator)\n                .data('order', opts.colOrder).html(ordering[opts.colOrder].colSymbol)\n                .bind('click', function () {\n                    $(this).data('order', ordering[$(this).data('order')].next);\n                    $(this).html(ordering[$(this).data('order')].colSymbol);\n                    return refresh();\n                });\n\n            const pvVals = $('<div>').addClass('pvtVals')\n                .addClass('pvtParameter')\n                .appendTo(uiParameters);\n\n            uiParameters.append(pvVals);\n\n            // Available fields\n            $('<div>')\n                .addClass('pvtParameterLabel')\n                .appendTo(uiParameters)\n                .text(localeStrings.fieldsLabel);\n\n            uiParameters.append(unused);\n\n            //column axes\n            $('<div>')\n                .addClass('pvtParameterLabel')\n                .appendTo(uiParameters)\n                .text(localeStrings.colsLabel);\n\n            $('<div>').addClass('pvtAxisContainer pvtCols').appendTo(uiParameters);\n\n            //row axes\n            $('<div>')\n                .addClass('pvtParameterLabel')\n                .appendTo(uiParameters)\n                .text(localeStrings.rowsLabel);\n            $('<div>').addClass('pvtAxisContainer pvtRows').appendTo(uiParameters);\n\n            //the actual pivot table container\n            const pivotTable = $('<div>')\n                .addClass('pvtRendererArea')\n                .appendTo(uiPivotContainer);\n\n            //render the UI in its default state\n            this.html(uiContainer);\n\n            if (!opts.parametersActive) {\n                uiButtonColumns.removeClass('active');\n                uiParameters.hide();\n            }\n\n            //set up the UI initial state as requested by moving elements around\n\n            let initialRender = true;\n\n            //set up for refreshing\n            const refreshDelayed = () => {\n                let vals;\n                const subopts = {\n                    derivedAttributes: opts.derivedAttributes,\n                    localeStrings: opts.localeStrings,\n                    rendererOptions: opts.rendererOptions,\n                    sorters: opts.sorters,\n                    cols: [], rows: [],\n                    dataClass: opts.dataClass,\n                    grouping: opts.grouping,\n                };\n\n                this.find('.pvtRows li span.pvtAttr').each(function () {\n                    return subopts.rows.push($(this).data('attrName'));\n                });\n                this.find('.pvtCols li span.pvtAttr').each(function () {\n                    return subopts.cols.push($(this).data('attrName'));\n                });\n\n                let numInputsToProcess = 0;\n\n                const aggVals = [];\n                let j = 0, idx = j;\n                for (; j < aggregators.length; j++, idx = j) {\n                    let aggregatorType;\n                    const agg = aggregators[idx];\n                    if (typeof agg === 'object') {\n                        aggregatorType = agg.value;\n                    }\n                    const aggIdx = agg.id;\n                    const initialVals = agg.vals;\n\n                    numInputsToProcess = opts.aggregators[aggregatorType]([])().numInputs || 0;\n\n                    vals = [];\n                    this.find('.pvtVals select.pvtAttrDropdown' + aggIdx).each(function () {\n                        if (numInputsToProcess !== 0) {\n                            numInputsToProcess--;\n                            if ($(this).val() !== '') {\n                                return vals.push($(this).val());\n                            }\n                        }\n                    });\n\n\n                    const pvtVals = this.find('.pvtVals');\n                    let container = this.find('.pvtVals .pvtAttrDropdownContainer' + aggIdx);\n                    const found = container.length > 0;\n                    if (opts.multiple) {\n                        let labelAggregator;\n                        if (!found) {\n                            container = $('<div>')\n                                .addClass('pvtAttrDropdownContainer')\n                                .addClass('pvtAttrDropdownContainer' + aggIdx)\n                                .appendTo(pvtVals);\n                            labelAggregator = locales[locale].localeStrings[aggregatorType] || locales['en'].localeStrings[aggregatorType] || aggregatorType;\n                            $('<label>')\n                                .addClass('pvtAttrDropdown')\n                                .addClass('pvtAttrDropdown' + aggIdx)\n                                .appendTo(container)\n                                .html('<b>' + agg.displayName + '</b>) ' + labelAggregator);\n                            initialRender = true;\n                        }\n\n                        if (!initialRender) {\n                            this.find('.pvtVals .pvtAttrDropdownContainer' + aggIdx + ' label.pvtAttrDropdown')\n                                .each(function () {\n                                    labelAggregator = locales[locale].localeStrings[aggregatorType] || locales['en'].localeStrings[aggregatorType] || aggregatorType;\n                                    return $(this).html('<b>' + agg.displayName + '</b>) ' + labelAggregator);\n                                });\n                        }\n                    } else {\n                        container = pvtVals;\n                    }\n\n                    if (numInputsToProcess !== 0) {\n                        let asc, end;\n                        for (x = 0, end = numInputsToProcess, asc = 0 <= end; asc ? x < end : x > end; asc ? x++ : x--) {\n                            const newDropdown = $('<select>')\n                                .addClass('pvtAttrDropdown' + aggIdx)\n                                .addClass('pvtAttrDropdown')\n                                .append($('<option>'))\n                                .bind('change', () => refresh());\n                            for (attr of shownInAggregators) {\n                                newDropdown.append($('<option>').val(attr).text(attr));\n                            }\n                            container.append(newDropdown);\n                        }\n                    }\n\n\n                    if (opts.multiple && !found) {\n                        $('<a>')\n                            .html('x')\n                            .addClass('pvtRemoveAggregator')\n                            .addClass('pvtToolButton')\n                            .addClass('pvtAttrDropdown' + aggIdx)\n                            .appendTo(container)\n                            .bind('click', (function () {\n                                    this.instance.find('.pvtVals .pvtAttrDropdownContainer' + this.aggIdx).remove();\n                                    idx = aggregators.findIndex(agg => agg.id === this.aggIdx);\n                                    aggregators.splice(idx, 1);\n                                    renameAggregators(aggregators);\n                                    return refresh();\n                                }).bind({ instance: this, aggIdx }),\n                            );\n                    }\n\n                    if (initialRender) {\n                        vals = initialVals != null ? initialVals : opts.vals;\n                        i = 0;\n                        this.find('.pvtVals select.pvtAttrDropdown' + aggIdx).each(function () {\n                            $(this).val(vals[i]);\n                            return i++;\n                        });\n                        initialRender = false;\n                    }\n\n                    aggVals.push(vals);\n                }\n\n                subopts.aggregatorName = aggregators.map(agg => agg.value);\n                subopts.vals = aggVals;\n                subopts.aggregator = aggregators.map((agg, i) => opts.aggregators[agg.value](aggVals[i], opts));\n                subopts.renderer = opts.renderers[renderer.val()];\n                subopts.rowOrder = rowOrderArrow.data('order');\n                subopts.colOrder = colOrderArrow.data('order');\n                if (opts.multiple) {\n                    subopts.aggregatorsLabel = aggregators.map(agg => agg.displayName);\n                }\n\n                //construct filter here\n                const exclusions = {};\n                this.find('input.pvtFilter').not(':checked').each(function () {\n                    const filter = $(this).data('filter');\n                    if (exclusions[filter[0]] != null) {\n                        return exclusions[filter[0]].push(filter[1]);\n                    } else {\n                        return exclusions[filter[0]] = [filter[1]];\n                    }\n                });\n                //include inclusions when exclusions present\n                const inclusions = {};\n                this.find('input.pvtFilter:checked').each(function () {\n                    const filter = $(this).data('filter');\n                    if (exclusions[filter[0]] != null) {\n                        if (inclusions[filter[0]] != null) {\n                            return inclusions[filter[0]].push(filter[1]);\n                        } else {\n                            return inclusions[filter[0]] = [filter[1]];\n                        }\n                    }\n                });\n\n                subopts.filter = function (record) {\n                    if (!opts.filter(record)) {\n                        return false;\n                    }\n                    for (let k in exclusions) {\n                        const excludedItems = exclusions[k];\n                        if (excludedItems.includes('' + (record[k] != null ? record[k] : 'null'))) {\n                            return false;\n                        }\n                    }\n                    return true;\n                };\n\n                pivotTable.pivot(materializedInput, subopts, locale);\n                const pivotUIOptions = $.extend({}, opts, {\n                        cols: subopts.cols,\n                        rows: subopts.rows,\n                        colOrder: subopts.colOrder,\n                        rowOrder: subopts.rowOrder,\n                        vals: aggVals,\n                        exclusions,\n                        inclusions,\n                        aggregator: subopts.aggregator,\n                        inclusionsInfo: inclusions, //duplicated for backwards-compatibility\n                        aggregatorName: subopts.aggregatorName,\n                        rendererName: renderer.val(),\n                    },\n                );\n\n                const currentPivotData = subopts.pivotData;\n                delete subopts.pivotData;\n                this.data('pivotUIOptions', pivotUIOptions);\n\n                // if requested, make sure unused columns are in alphabetical order\n                if (opts.autoSortUnusedAttrs) {\n                    const unusedAttrsContainer = this.find('td.pvtUnused.pvtAxisContainer');\n                    $(unusedAttrsContainer).children('li')\n                        .sort((a, b) => naturalSort($(a).text(), $(b).text()))\n                        .appendTo(unusedAttrsContainer);\n                }\n\n                pivotTable.css('opacity', 1);\n                if (opts.onRefresh != null) {\n                    return opts.onRefresh(pivotUIOptions, currentPivotData);\n                }\n            };\n\n            const refresh = () => {\n                pivotTable.css('opacity', 0.5);\n                return setTimeout(refreshDelayed, 10);\n            };\n\n            for (x of opts.cols) {\n                this.find('.pvtCols').append(this.find(`.axis_${$.inArray(x, shownInDragDrop)}`));\n            }\n            for (x of opts.rows) {\n                this.find('.pvtRows').append(this.find(`.axis_${$.inArray(x, shownInDragDrop)}`));\n            }\n            if (opts.aggregatorName != null) {\n                if (opts.multiple) {\n                    opts.aggregatorName = Array.isArray(opts.aggregatorName) ? opts.aggregatorName : [opts.aggregatorName];\n                    for (let idx = 0; idx < opts.aggregatorName.length; idx++) {\n                        const agg = opts.aggregatorName[idx];\n                        aggregators.push({\n                            id: ++itemsId,\n                            value: agg,\n                            vals: (opts.vals != null ? opts.vals[idx] : undefined),\n                        });\n                        renameAggregators(aggregators);\n                    }\n                } else {\n                    this.find('.pvtVals').append(this.find('.pvtAttrDropdown'));\n                    this.find('.pvtAggregator').val(opts.aggregatorName).change();\n                }\n            } else {\n                this.find('.pvtAggregator').change();\n            }\n            if (opts.rendererName != null) {\n                this.find('.pvtRenderer').val(opts.rendererName);\n            }\n\n            if (!opts.showUI) {\n                this.find('.pvtUiCell').hide();\n            }\n\n            //the very first refresh will actually display the table\n            refresh();\n\n            this.find('.pvtAxisContainer').sortable({\n                update(e, ui) {\n                    if ((ui.sender == null)) {\n                        return refresh();\n                    }\n                },\n                connectWith: this.find('.pvtAxisContainer'),\n                items: 'li',\n                placeholder: 'pvtPlaceholder',\n            });\n        } catch (error) {\n            console.error(error);\n            this.html(opts.localeStrings.uiRenderError);\n        }\n        return this;\n    };\n\n    /*\n    Heatmap post-processing\n    */\n\n    $.fn.heatmap = function (scope, opts) {\n        if (scope == null) {\n            scope = 'heatmap';\n        }\n        const numRows = this.data('numrows');\n        const numCols = this.data('numcols');\n\n        // given a series of values\n        // must return a function to map a given value to a CSS color\n        let colorScaleGenerator = opts?.heatmap?.colorScaleGenerator;\n        if (colorScaleGenerator == null) {\n            colorScaleGenerator = function (values) {\n                const min = Math.min(...(values || []));\n                const max = Math.max(...(values || []));\n                return function (x) {\n                    const nonRed = 255 - Math.round((255 * (x - min)) / (max - min));\n                    return `rgb(255,${nonRed},${nonRed})`;\n                };\n            };\n        }\n\n        const heatmapper = scope => {\n            const forEachCell = f => {\n                return this.find(scope).each(function () {\n                    const x = $(this).data('value');\n                    if ((x != null) && isFinite(x)) {\n                        return f(x, $(this));\n                    }\n                });\n            };\n\n            const values = [];\n            forEachCell(x => values.push(x));\n            const colorScale = colorScaleGenerator(values);\n            return forEachCell((x, elem) => elem.css('background-color', colorScale(x)));\n        };\n\n        switch (scope) {\n            case 'heatmap':\n                heatmapper('.pvtVal');\n                break;\n            case 'rowheatmap':\n                for (let i = 0, end = numRows, asc = 0 <= end; asc ? i < end : i > end; asc ? i++ : i--) {\n                    heatmapper(`.pvtVal.row${i}`);\n                }\n                break;\n            case 'colheatmap':\n                for (let j = 0, end1 = numCols, asc1 = 0 <= end1; asc1 ? j < end1 : j > end1; asc1 ? j++ : j--) {\n                    heatmapper(`.pvtVal.col${j}`);\n                }\n                break;\n        }\n\n        heatmapper('.pvtTotal.rowTotal');\n        heatmapper('.pvtTotal.colTotal');\n\n        return this;\n    };\n\n    /*\n    Barchart post-processing\n    */\n\n    $.fn.barchart = function (opts) {\n        const numRows = this.data('numrows');\n        const numCols = this.data('numcols');\n\n        const barcharter = scope => {\n            const forEachCell = f => {\n                return this.find(scope).each(function () {\n                    const x = $(this).data('value');\n                    if ((x != null) && isFinite(x)) {\n                        return f(x, $(this));\n                    }\n                });\n            };\n\n            const values = [];\n            forEachCell(x => values.push(x));\n            let max = Math.max(...(values || []));\n            if (max < 0) {\n                max = 0;\n            }\n            let range = max;\n            const min = Math.min(...(values || []));\n            if (min < 0) {\n                range = max - min;\n            }\n            const scaler = x => (100 * x) / (1.4 * range);\n            return forEachCell(function (x, elem) {\n                const text = elem.text();\n                const wrapper = $('<div>').css({\n                    'position': 'relative',\n                    'height': '55px',\n                });\n                let bgColor = 'gray';\n                let bBase = 0;\n                if (min < 0) {\n                    bBase = scaler(-min);\n                }\n                if (x < 0) {\n                    bBase += scaler(x);\n                    bgColor = 'darkred';\n                    x = -x;\n                }\n                wrapper.append($('<div>').css({\n                        'position': 'absolute',\n                        'bottom': bBase + '%',\n                        'left': 0,\n                        'right': 0,\n                        'height': scaler(x) + '%',\n                        'background-color': bgColor,\n                    }),\n                );\n                wrapper.append($('<div>').text(text).css({\n                        'position': 'relative',\n                        'padding-left': '5px',\n                        'padding-right': '5px',\n                    }),\n                );\n\n                return elem.css({ 'padding': 0, 'padding-top': '5px', 'text-align': 'center' }).html(wrapper);\n            });\n        };\n\n        for (let i = 0, end = numRows, asc = 0 <= end; asc ? i < end : i > end; asc ? i++ : i--) {\n            barcharter(`.pvtVal.row${i}`);\n        }\n        barcharter('.pvtTotal.colTotal');\n\n        return this;\n    };\n\n    /*\n    Grouping fold/expand rows and cols\n    */\n\n    const childIndex = el => Array.prototype.indexOf.call(el.parentNode.children, el);\n\n    const childKeysIndices = function (keys, n) {\n        const up = keys[0].length === 1 ? 1 : -1;\n        const len = keys[n].length;\n\n        const result = [];\n        n = n + up;\n        let key = keys[n];\n        while (key && key.length > len) {\n            if (key.length === (len + 1)) {\n                result.push(n);\n            } else {\n                continue;\n            }\n            n = n + up;\n            key = keys[n];\n        }\n        return result;\n    };\n\n    const parentKeysIndices = function (keys, n) {\n        const up = keys[0].length === 1 ? 1 : -1;\n        const result = [];\n        let len = keys[n].length;\n        while (len > 1) {\n            let key;\n            n = n - up;\n            key = keys[n];\n            while (key && key.length >= len) {\n                n = n - up;\n                key = keys[n];\n            }\n            result.push(n);\n\n            len = keys[n].length;\n        }\n        return result;\n    };\n\n    const levelKeysIndices = (keys, level) => (keys.filter(d => d.length === level)).map(keys.indexOf.bind(keys));\n\n    const getAxis = function (table, rows, level) {\n        if (rows) {\n            return table.find(`thead tr:last-child th.pvtAxisLabel:nth-of-type(${level})`);\n        } else {\n            return table.find(`thead tr:nth-child(${level}) th.pvtAxisLabel`);\n        }\n    };\n\n    const getHeader = (table, rows, n) => table.find(rows ? `tbody tr th.row${n}` : `thead th.col${n}`);\n\n    const rowGetter = function (table) {\n        const selecttion = table.find('tbody tr');\n        return n => $(selecttion[n]);\n    };\n\n    const colGetter = function (table) {\n        const selecttion = table.find('tr');\n        return n => selecttion.find(`.col${n}`);\n    };\n\n    const showHide = function (getter, keys, nth, offset, show) {\n        const object = childKeysIndices(keys, nth);\n        for (let i in object) {\n            const n = object[i];\n            const row = getter(n + offset);\n            const fn = show ? $.fn.show : $.fn.hide;\n            fn.call(row);\n            if (!row.hasClass('collapsed')) {\n                showHide(getter, keys, n, offset, show);\n            }\n        }\n        return true;\n    };\n\n    const expandRowsGroupAfter = function (cell, rows, keys, nth) {\n        const table = $(cell).closest('table');\n        const initIndex = childIndex(cell.parentNode);\n        const getter = rowGetter(table);\n        const row = getter(nth);\n\n        const insertPoint = row.hasClass('collapsed') ? getter(cell._old) : row;\n        if (!row.hasClass('collapsed')) {\n            cell._old = childIndex(cell.parentNode);\n        }\n        insertPoint.prepend(cell);\n\n        const object = parentKeysIndices(keys, nth);\n        for (let i in object) {\n            const p = object[i];\n            const parent = (getHeader(table, rows, p))[0];\n            const parentIndex = childIndex(parent.parentNode);\n            parent._old = parent._old != null ? parent._old : parentIndex;\n            if ((parent._old === initIndex) && (parent.rowSpan === 1)) {\n                parent._old -= initIndex - childIndex(cell.parentNode);\n            }\n\n            if (initIndex === parentIndex) {\n                insertPoint.prepend(parent);\n            }\n        }\n\n        return expandWithSpan(cell, rows, keys, nth);\n    };\n\n    const expandRowCol = function (cell, rows, keys, nth, parent) {\n        const table = $(cell).closest('table');\n        const getter = rows ? rowGetter(table) : colGetter(table);\n        const span = rows ? 'rowSpan' : 'colSpan';\n\n        const offset = rows && (this.aggregator.length > 1) ? 1 : 0;\n        if ((parent != null ? parent[span] : undefined) !== 1) {\n            showHide(getter, keys, nth, offset, getter(nth + offset).hasClass('collapsed'));\n        }\n        getter(nth + offset).toggleClass('collapsed');\n        return $(cell).toggleClass('open close');\n    };\n\n    const expandAll = function (pivotData, table, level, rows, expand) {\n        let i;\n        if (expand && (level > 1)) {\n            getAxis(table, rows, level - 1).removeClass('close').addClass('open');\n            expandAll(pivotData, table, level - 1, rows, expand);\n        }\n\n        const levels = (rows ? pivotData.rowAttrs : pivotData.colAttrs).length - 1;\n        if (!expand && (level < levels)) {\n            let asc, end, start;\n            for (start = level + 1, i = start, end = levels, asc = start <= end; asc ? i <= end : i >= end; asc ? i++ : i--) {\n                getAxis(table, rows, i).removeClass('open').addClass('close');\n            }\n        }\n\n        const keys = rows ? pivotData.rowKeys : pivotData.colKeys;\n        const object = levelKeysIndices(keys, level);\n        for (i in object) {\n            const n = object[i];\n            const el = getHeader(table, rows, n);\n            if (expand === el.hasClass('close')) {\n                el.trigger('click');\n            }\n        }\n        return null;\n    };\n\n    const getExpandHandler = (keys, rows, handler) => (function (ev) {\n        const match = ev.target.className.match(rows ? /row(\\d+)/ : /col(\\d+)/);\n        if (match) {\n            return handler(ev.target, rows, keys, +match[1]);\n        }\n    });\n\n    return getExpandAllHandler = (pivotData, level, rows) => (function (ev) {\n        expandAll(pivotData, $(ev.target).closest('table'), level + 1, rows, $(ev.target).hasClass('close'));\n        return $(ev.target).toggleClass('open close');\n    });\n})(jQuery);\n\n"]}