{"version":3,"sources":["pivot.js"],"names":["$","expandWithSpan","cell","rows","keys","nth","let","parent","i","table","closest","span","dft","Math","max","this","aggregator","length","change","_span","object","parentKeysIndices","p","getHeader","expandRowCol","getExpandAllHandler","localeGlobal","toDate","value","date","options","year","month","day","Date","toLocaleDateString","e","numberFormat","opts","extend","digitsAfterDecimal","scaler","thousandsSep","decimalSep","prefix","suffix","x","fieldType","undefined","pivotUtilities","fieldsType","integer","isFunction","isNaN","isFinite","result","nStr","split","x1","x2","rgx","test","replace","toFixed","cellRenderers","text","fieldName","col","row","document","createTextNode","byType","def","type","apply","arguments","usFmt","usFmtInt","usFmtPct","aggregatorTemplates","count","formatter","data","rowKey","colKey","push","format","uniques","fn","args","attr","uniq","record","includes","numInputs","sum","parseFloat","extremes","mode","val","sorter","getSort","sorters","y","rendererOptions","toISOString","quantile","q","vals","sort","a","b","floor","ceil","runningStat","ddof","n","m","s","m_new","sqrt","sumOverSum","num","denom","sumNum","sumDenom","sumOverSumBound80","upper","sign","fractionOf","wrapped","selector","total","inner","id","agg","getAggregator","makeAggregators","fmt","fmtInt","fmtPct","Count","Count Unique Values","countUnique","List Unique Values","listUnique","Sum","Integer Sum","Average","average","Median","median","Sample Variance","var","Sample Standard Deviation","stdev","Minimum","min","Maximum","First","first","Last","last","Sum over Sum","80% Upper Bound","80% Lower Bound","Sum as Fraction of Total","Sum as Fraction of Rows","Sum as Fraction of Columns","Count as Fraction of Total","Count as Fraction of Rows","Count as Fraction of Columns","f","naturalSort","join","defaultAggregators","renderers","Table","pivotTableRenderer","Table Barchart","barchart","Heatmap","heatmap","Row Heatmap","Col Heatmap","locales","en","formatters","formatInt","formatPct","localeStrings","renderError","computeError","uiRenderError","selectAll","selectNone","tooMany","filterResults","cancel","totals","vs","by","rendererLabel","valuesLabel","fieldsLabel","colsLabel","rowsLabel","groupsLabel","Object","mthNamesEn","dayNamesEn","zeroPad","number","padding","substr","rx","rd","rz","as","bs","nulls_first","nf","nas","nbs","String","match","a1","shift","b1","filterByLength","filter","subarrays","array","map","d","slice","PivotData","constructor","input","arrSort","bind","sortKeys","getColKeys","getRowKeys","Array","isArray","aggregatorName","colAttrs","cols","rowAttrs","valAttrs","rowOrder","colOrder","derivedAttributes","tree","rowKeys","colKeys","rowTotals","colTotals","allTotal","sorted","aggregatorsLabel","grouping","rowGroupBefore","colGroupBefore","forEachRecord","processRecord","entries","forEach","key","addRecord","isEmptyObject","k","v","compactRecord","j","tblCols","each","Error","forEachMatchingRecord","criteria","callback","attrs","sortersArr","comparison","r","c","all_keys","flatRowKey","fromCharCode","result1","flatColKey","renameAggregators","aggregators","displayName","toUpperCase","pivotData","getClickHandler","td","th","totalAggregator","tr","defaults","clickCallback","typeCellRenderer","headCellRenderer","dataCellRenderer","spanSize","arr","asc","end","noDraw","len","asc1","end1","stop","compactLayout","rowValues","colValues","filters","rowExpandHandler","expandRowsGroupAfter","rowsExpandHandler","getExpandHandler","colsExpandHandler","createElement","thead","className","parseInt","setAttribute","appendChild","call","onclick","innerHTML","tbody","lbl","colspan","textContent","rowGap","txt","colSpan","style","paddingLeft","append","derivers","bin","binWidth","dateFormat","formatString","utcOutput","mthNames","dayNames","utc","parse","string","time","datetime","boolean","sortAs","order","mapping","l_mapping","toLowerCase","pivot","inputOpts","locale","dataClass","renderer","error","console","stack","html","error1","hasChildNodes","removeChild","lastChild","pivotUI","overwrite","hiddenAttributes","hiddenFromAggregators","hiddenFromDragDrop","menuLimit","exclusions","inclusions","unusedAttrsVertical","autoSortUnusedAttrs","onRefresh","showUI","multiple","parametersActive","itemsId","localeDefaults","existingOpts","unusedAttrsVerticalAutoCutoff","attrValues","materializedInput","recordsProcessed","uiContainer","addClass","uiMenu","uiParameters","uiPivotContainer","uiButtonColumns","on","show","removeClass","hide","appendTo","uiButtonGroups","refresh","pvtRenderType","unused","shownAttributes","shownInAggregators","shownInDragDrop","attrLength","values","hasExcludedItem","valueList","controls","placeholder","class","trim","accept_gen","accepted","real_filter","substring","accept","indexOf","find","prop","toggleClass","checkContainer","valueCount","filterItem","filterItemExcluded","closeFilterBox","attrElem","finalButtons","triangleLink","left","top","currentTarget","position","css","divAggregator","remove","role","ordering","key_a_to_z","rowSymbol","colSymbol","next","value_a_to_z","value_z_to_a","rowOrderArrow","colOrderArrow","pvVals","pivotTable","initialRender","refreshDelayed","subopts","numInputsToProcess","aggVals","idx","aggregatorType","aggIdx","initialVals","pvtVals","container","found","labelAggregator","newDropdown","instance","findIndex","splice","not","unusedAttrsContainer","pivotUIOptions","inclusionsInfo","rendererName","currentPivotData","children","setTimeout","inArray","sortable","update","ui","sender","connectWith","items","scope","numRows","numCols","colorScaleGenerator","nonRed","round","heatmapper","forEachCell","colorScale","elem","barcharter","range","wrapper","height","bgColor","bBase","bottom","right","background-color","padding-left","padding-right","padding-top","text-align","rowGetter","selecttion","childIndex","el","prototype","parentNode","childKeysIndices","up","levelKeysIndices","level","getAxis","showHide","getter","offset","hasClass","initIndex","insertPoint","_old","prepend","parentIndex","rowSpan","expandAll","expand","levels","start","trigger","handler","ev","target","jQuery"],"mappings":"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","file":"pivot.min.js","sourcesContent":["\n(function ($) {\n\n    const expandWithSpan = function (cell, rows, keys, nth) {\n        let parent;\n        const table = $(cell).closest('table');\n        const span = rows ? 'rowSpan' : 'colSpan';\n\n        const dft = !rows ? Math.max(1, this.aggregator.length) : 1;\n        [cell._span, cell[span]] = [cell[span], cell._span != null ? cell._span : dft];\n        const change = cell[span] - cell._span;\n\n        const object = parentKeysIndices(keys, nth);\n        for (let i in object) {\n            const p = object[i];\n            parent = (getHeader(table, rows, p))[0];\n            if (parent[span] === 1) {\n                parent._span += change;\n                break;\n            }\n            parent[span] += change;\n        }\n\n        return expandRowCol(cell, rows, keys, nth, parent);\n    };\n    /*\n        Utilities\n        */\n\n    let getExpandAllHandler;\n    let localeGlobal = 'en';\n\n    const addSeparators = function (nStr, thousandsSep, decimalSep) {\n        nStr += '';\n        const x = nStr.split('.');\n        let x1 = x[0];\n        const x2 = x.length > 1 ? decimalSep + x[1] : '';\n        const rgx = /(\\d+)(\\d{3})/;\n        while (rgx.test(x1)) {\n            x1 = x1.replace(rgx, '$1' + thousandsSep + '$2');\n        }\n        return x1 + x2;\n    };\n\n\n    function toDate(value) {\n        let date = '';\n\n        if (value) {\n            try {\n                const options = { year: 'numeric', month: '2-digit', day: '2-digit' };\n                date = (new Date(value)).toLocaleDateString(localeGlobal, options);\n            } catch (e) {\n                date = value;\n            }\n        }\n\n        return date;\n    }\n\n    const numberFormat = function (opts) {\n        const defaults = {\n            digitsAfterDecimal: 2, scaler: 1,\n            thousandsSep: ',', decimalSep: '.',\n            prefix: '', suffix: '',\n        };\n        opts = $.extend({}, defaults, opts);\n        return function (x, fieldType) {\n            if (x === undefined) {\n                return '';\n            }\n\n            if (fieldType === $.pivotUtilities.fieldsType.integer) {\n                return x;\n            } else if (fieldType === $.pivotUtilities.fieldsType.date) {\n                return toDate(x);\n            } else if ($.isFunction(fieldType)) {\n                return fieldType(x);\n            }\n\n            if (isNaN(x) || !isFinite(x)) {\n                return '';\n            }\n\n            const result = addSeparators((opts.scaler * x).toFixed(opts.digitsAfterDecimal), opts.thousandsSep, opts.decimalSep);\n            return '' + opts.prefix + result + opts.suffix;\n        };\n    };\n\n    const cellRenderers = {\n        text: function (value, fieldName, col, row) {\n            const { fieldsType } = this;\n\n            if (value === undefined) {\n                value = '';\n            }\n            // Header type date\n            if (fieldName && fieldsType[fieldName] === $.pivotUtilities.fieldsType.date) {\n                return document.createTextNode(toDate(value));\n            }\n\n            return document.createTextNode(value);\n        },\n        byType: function (opts, def) {\n            return function (value, type) {\n                return (opts[type] || def || cellRenderers.text).apply(this, arguments);\n            };\n        },\n    };\n\n    //aggregator templates default to US number formatting, but this is overrideable\n    const usFmt = numberFormat();\n    const usFmtInt = numberFormat({ digitsAfterDecimal: 0 });\n    const usFmtPct = numberFormat({ digitsAfterDecimal: 1, scaler: 100, suffix: '%' });\n\n    const aggregatorTemplates = {\n        count(formatter) {\n            if (formatter == null) {\n                formatter = usFmtInt;\n            }\n            return () => (function (data, rowKey, colKey) {\n                return {\n                    count: 0,\n                    push() {\n                        return this.count++;\n                    },\n                    value() {\n                        return this.count;\n                    },\n                    format: formatter,\n                };\n            });\n        },\n\n        uniques(fn, formatter) {\n            if (formatter == null) {\n                formatter = usFmtInt;\n            }\n            return function (...args) {\n                const [attr] = args[0];\n                return function (data, rowKey, colKey) {\n                    return {\n                        attr,\n                        uniq: [],\n                        push(record) {\n                            if (!this.uniq.includes(record[attr])) {\n                                return this.uniq.push(record[attr]);\n                            }\n                        },\n                        value() {\n                            return fn(this.uniq);\n                        },\n                        format: formatter,\n                        numInputs: (attr != null) ? 0 : 1,\n                    };\n                };\n            };\n        },\n\n        sum(formatter) {\n            if (formatter == null) {\n                formatter = usFmt;\n            }\n            return function (...args) {\n                const [attr] = args[0];\n                return function (data, rowKey, colKey) {\n                    return {\n                        attr,\n                        sum: 0,\n                        push(record) {\n                            if (!isNaN(parseFloat(record[attr]))) {\n                                return this.sum += parseFloat(record[attr]);\n                            }\n                        },\n                        value() {\n                            return this.sum;\n                        },\n                        format: formatter,\n                        numInputs: (attr != null) ? 0 : 1,\n                    };\n                };\n            };\n        },\n\n        extremes(mode, formatter) {\n            if (formatter == null) {\n                formatter = usFmt;\n            }\n            return function (...args) {\n                const [attr] = args[0];\n                const opts = args[1] || {};\n                return function (data, rowKey, colKey) {\n                    return {\n                        attr,\n                        val: null,\n                        sorter: getSort(data != null ? data.sorters : undefined, attr),\n                        push(record) {\n                            let x = record[attr];\n                            let y = this.val;\n\n                            if (opts.rendererOptions?.fieldsType[attr] === $.pivotUtilities.fieldsType.date) {\n                                x = new Date(x);\n                                y = !y ? x : new Date(y);\n                            } else if (['min', 'max'].includes(mode)) {\n                                x = parseFloat(x);\n                            }\n\n                            if (['min', 'max'].includes(mode)) {\n                                if (!isNaN(x)) {\n                                    this.val = Math[mode](x, y != null ? y : x);\n                                }\n                            }\n                            if (mode === 'first') {\n                                if (this.sorter(x, y != null ? y : x) <= 0) {\n                                    this.val = x;\n                                }\n                            }\n                            if (mode === 'last') {\n                                if (this.sorter(x, y != null ? y : x) >= 0) {\n                                    this.val = x;\n                                }\n                            }\n\n                            if (opts.rendererOptions?.fieldsType[attr] === $.pivotUtilities.fieldsType.date) {\n                                this.val = new Date(this.val).toISOString();\n                            }\n\n                        },\n                        value() {\n                            return this.val;\n                        },\n                        format(x, fieldType) {\n                            if (isNaN(x)) {\n                                return x;\n                            } else {\n                                return formatter(x, fieldType);\n                            }\n                        },\n                        numInputs: (attr != null) ? 0 : 1,\n                    };\n                };\n            };\n        },\n\n        quantile(q, formatter) {\n            if (formatter == null) {\n                formatter = usFmt;\n            }\n            return function (...args) {\n                const [attr] = args[0];\n                return function (data, rowKey, colKey) {\n                    return {\n                        attr,\n                        vals: [],\n                        push(record) {\n                            const x = parseFloat(record[attr]);\n                            if (!isNaN(x)) {\n                                return this.vals.push(x);\n                            }\n                        },\n                        value() {\n                            if (this.vals.length === 0) {\n                                return null;\n                            }\n                            this.vals.sort((a, b) => a - b);\n                            const i = (this.vals.length - 1) * q;\n                            return (this.vals[Math.floor(i)] + this.vals[Math.ceil(i)]) / 2.0;\n                        },\n                        format: formatter,\n                        numInputs: (attr != null) ? 0 : 1,\n                    };\n                };\n            };\n        },\n\n        runningStat(mode, ddof, formatter) {\n            if (mode == null) {\n                mode = 'mean';\n            }\n            if (ddof == null) {\n                ddof = 1;\n            }\n            if (formatter == null) {\n                formatter = usFmt;\n            }\n            return function (...args) {\n                const [attr] = args[0];\n                return function (data, rowKey, colKey) {\n                    return {\n                        attr,\n                        n: 0.0, m: 0.0, s: 0.0,\n                        push(record) {\n                            const x = parseFloat(record[attr]);\n                            if (isNaN(x)) {\n                                return;\n                            }\n                            this.n += 1.0;\n                            if (this.n === 1.0) {\n                                return this.m = x;\n                            } else {\n                                const m_new = this.m + ((x - this.m) / this.n);\n                                this.s = this.s + ((x - this.m) * (x - m_new));\n                                return this.m = m_new;\n                            }\n                        },\n                        value() {\n                            if (mode === 'mean') {\n                                if (this.n === 0) {\n                                    return 0 / 0;\n                                } else {\n                                    return this.m;\n                                }\n                            }\n                            if (this.n <= ddof) {\n                                return 0;\n                            }\n                            switch (mode) {\n                                case 'var':\n                                    return this.s / (this.n - ddof);\n                                case 'stdev':\n                                    return Math.sqrt(this.s / (this.n - ddof));\n                            }\n                        },\n                        format: formatter,\n                        numInputs: (attr != null) ? 0 : 1,\n                    };\n                };\n            };\n        },\n\n        sumOverSum(formatter) {\n            if (formatter == null) {\n                formatter = usFmt;\n            }\n            return function (...args) {\n                const [num, denom] = args[0];\n                return function (data, rowKey, colKey) {\n                    return {\n                        sumNum: 0,\n                        sumDenom: 0,\n                        push(record) {\n                            if (!isNaN(parseFloat(record[num]))) {\n                                this.sumNum += parseFloat(record[num]);\n                            }\n                            if (!isNaN(parseFloat(record[denom]))) {\n                                return this.sumDenom += parseFloat(record[denom]);\n                            }\n                        },\n                        value() {\n                            return this.sumNum / this.sumDenom;\n                        },\n                        format: formatter,\n                        numInputs: (num != null) && (denom != null) ? 0 : 2,\n                    };\n                };\n            };\n        },\n\n        sumOverSumBound80(upper, formatter) {\n            if (upper == null) {\n                upper = true;\n            }\n            if (formatter == null) {\n                formatter = usFmt;\n            }\n            return function (...args) {\n                const [num, denom] = args[0];\n                return function (data, rowKey, colKey) {\n                    return {\n                        sumNum: 0,\n                        sumDenom: 0,\n                        push(record) {\n                            if (!isNaN(parseFloat(record[num]))) {\n                                this.sumNum += parseFloat(record[num]);\n                            }\n                            if (!isNaN(parseFloat(record[denom]))) {\n                                return this.sumDenom += parseFloat(record[denom]);\n                            }\n                        },\n                        value() {\n                            const sign = upper ? 1 : -1;\n                            return ((0.821187207574908 / this.sumDenom) + (this.sumNum / this.sumDenom) + (1.2815515655446004 * sign *\n                                    Math.sqrt((0.410593603787454 / (this.sumDenom * this.sumDenom)) + ((this.sumNum * (1 - (this.sumNum / this.sumDenom))) / (this.sumDenom * this.sumDenom))))) /\n                                (1 + (1.642374415149816 / this.sumDenom));\n                        },\n                        format: formatter,\n                        numInputs: (num != null) && (denom != null) ? 0 : 2,\n                    };\n                };\n            };\n        },\n\n        fractionOf(wrapped, type, formatter) {\n            if (type == null) {\n                type = 'total';\n            }\n            if (formatter == null) {\n                formatter = usFmtPct;\n            }\n            return (...x) => (function (data, rowKey, colKey) {\n                return {\n                    selector: { total: [[], []], row: [rowKey, []], col: [[], colKey] }[type],\n                    inner: wrapped(...(x || []))(data, rowKey, colKey),\n                    push(record) {\n                        return this.inner.push(record);\n                    },\n                    format: formatter,\n                    value(id) {\n                        const agg = data.getAggregator(...([...this.selector, id] || []));\n                        return this.inner.value() / agg.inner.value();\n                    },\n                    numInputs: wrapped(...(x || []))().numInputs,\n                };\n            });\n        },\n    };\n\n    aggregatorTemplates.countUnique = f => aggregatorTemplates.uniques((x => x.length), f);\n    aggregatorTemplates.listUnique = s => aggregatorTemplates.uniques((x => x.sort(naturalSort).join(s)), (x => x));\n    aggregatorTemplates.max = f => aggregatorTemplates.extremes('max', f);\n    aggregatorTemplates.min = f => aggregatorTemplates.extremes('min', f);\n    aggregatorTemplates.first = f => aggregatorTemplates.extremes('first', f);\n    aggregatorTemplates.last = f => aggregatorTemplates.extremes('last', f);\n    aggregatorTemplates.median = f => aggregatorTemplates.quantile(0.5, f);\n    aggregatorTemplates.average = f => aggregatorTemplates.runningStat('mean', 1, f);\n    aggregatorTemplates.var = (ddof, f) => aggregatorTemplates.runningStat('var', ddof, f);\n    aggregatorTemplates.stdev = (ddof, f) => aggregatorTemplates.runningStat('stdev', ddof, f);\n\n    function makeAggregators(fmt, fmtInt, fmtPct) {\n        return {\n            'Count': aggregatorTemplates.count(fmtInt),\n            'Count Unique Values': aggregatorTemplates.countUnique(fmtInt),\n            'List Unique Values': aggregatorTemplates.listUnique(', '),\n            'Sum': aggregatorTemplates.sum(fmt),\n            'Integer Sum': aggregatorTemplates.sum(fmtInt),\n            'Average': aggregatorTemplates.average(fmt),\n            'Median': aggregatorTemplates.median(fmt),\n            'Sample Variance': aggregatorTemplates.var(1, fmt),\n            'Sample Standard Deviation': aggregatorTemplates.stdev(1, fmt),\n            'Minimum': aggregatorTemplates.min(fmt),\n            'Maximum': aggregatorTemplates.max(fmt),\n            'First': aggregatorTemplates.first(fmt),\n            'Last': aggregatorTemplates.last(fmt),\n            'Sum over Sum': aggregatorTemplates.sumOverSum(fmt),\n            '80% Upper Bound': aggregatorTemplates.sumOverSumBound80(true, fmt),\n            '80% Lower Bound': aggregatorTemplates.sumOverSumBound80(false, fmt),\n            'Sum as Fraction of Total': aggregatorTemplates.fractionOf(aggregatorTemplates.sum(), 'total', fmtPct),\n            'Sum as Fraction of Rows': aggregatorTemplates.fractionOf(aggregatorTemplates.sum(), 'row', fmtPct),\n            'Sum as Fraction of Columns': aggregatorTemplates.fractionOf(aggregatorTemplates.sum(), 'col', fmtPct),\n            'Count as Fraction of Total': aggregatorTemplates.fractionOf(aggregatorTemplates.count(), 'total', fmtPct),\n            'Count as Fraction of Rows': aggregatorTemplates.fractionOf(aggregatorTemplates.count(), 'row', fmtPct),\n            'Count as Fraction of Columns': aggregatorTemplates.fractionOf(aggregatorTemplates.count(), 'col', fmtPct),\n        };\n    }\n\n    //default aggregators & renderers use US naming and number formatting\n    const defaultAggregators = makeAggregators(usFmt, usFmtInt, usFmtPct);\n\n    const renderers = {\n        'Table'(data, opts) {\n            return pivotTableRenderer(data, opts);\n        },\n        'Table Barchart'(data, opts) {\n            return $(pivotTableRenderer(data, opts)).barchart();\n        },\n        'Heatmap'(data, opts) {\n            return $(pivotTableRenderer(data, opts)).heatmap('heatmap', opts);\n        },\n        'Row Heatmap'(data, opts) {\n            return $(pivotTableRenderer(data, opts)).heatmap('rowheatmap', opts);\n        },\n        'Col Heatmap'(data, opts) {\n            return $(pivotTableRenderer(data, opts)).heatmap('colheatmap', opts);\n        },\n    };\n\n    const locales = {\n        en: {\n            formatters: {\n                format: usFmt,\n                formatInt: usFmtInt,\n                formatPct: usFmtPct,\n            },\n            renderers,\n            localeStrings: {\n                renderError: 'An error occurred rendering the PivotTable results.',\n                computeError: 'An error occurred computing the PivotTable results.',\n                uiRenderError: 'An error occurred rendering the PivotTable UI.',\n                selectAll: 'Select All',\n                selectNone: 'Select None',\n                tooMany: '(too many to list)',\n                filterResults: 'Filter values',\n                apply: 'Apply',\n                cancel: 'Cancel',\n                totals: 'Totals', //for table renderer\n                vs: 'vs', //for gchart renderer\n                by: 'by', //for gchart renderer\n                rendererLabel: 'Renderer',\n                valuesLabel: 'Values',\n                fieldsLabel: 'Fields',\n                colsLabel: 'Columns',\n                rowsLabel: 'Rows',\n                groupsLabel: 'Groups',\n            },\n        },\n    };\n\n    for (const agg of Object.keys(defaultAggregators)) {\n        locales.en.localeStrings[agg] = agg;\n    }\n\n    //dateFormat deriver l10n requires month and day names to be passed in directly\n    const mthNamesEn = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n    const dayNamesEn = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n    const zeroPad = (number, padding = 2) => ('0' + number).substr(-padding, padding);\n\n    const derivers = {\n        bin(col, binWidth) {\n            return record => record[col] - (record[col] % binWidth);\n        },\n        dateFormat(col, formatString, utcOutput, mthNames, dayNames) {\n            if (utcOutput == null) {\n                utcOutput = false;\n            }\n            if (mthNames == null) {\n                mthNames = mthNamesEn;\n            }\n            if (dayNames == null) {\n                dayNames = dayNamesEn;\n            }\n            const utc = utcOutput ? 'UTC' : '';\n            return function (record) { //thanks http://stackoverflow.com/a/12213072/112871\n                const date = new Date(Date.parse(record[col]));\n                if (isNaN(date)) {\n                    return '';\n                }\n                return formatString.replace(/%(.)/g, function (m, p) {\n                    switch (p) {\n                        case 'y':\n                            return date[`get${utc}FullYear`]();\n                        case 'm':\n                            return zeroPad(date[`get${utc}Month`]() + 1);\n                        case 'n':\n                            return mthNames[date[`get${utc}Month`]()];\n                        case 'd':\n                            return zeroPad(date[`get${utc}Date`]());\n                        case 'w':\n                            return dayNames[date[`get${utc}Day`]()];\n                        case 'x':\n                            return date[`get${utc}Day`]();\n                        case 'H':\n                            return zeroPad(date[`get${utc}Hours`]());\n                        case 'M':\n                            return zeroPad(date[`get${utc}Minutes`]());\n                        case 'S':\n                            return zeroPad(date[`get${utc}Seconds`]());\n                        default:\n                            return '%' + p;\n                    }\n                });\n            };\n        },\n    };\n\n    const rx = /(\\d+)|(\\D+)/g;\n    const rd = /\\d/;\n    const rz = /^0/;\n    const naturalSort = (as, bs, nulls_first) => {\n        //nulls first\n        if (nulls_first == null) {\n            nulls_first = true;\n        }\n        const nf = nulls_first ? 1 : -1;\n        if ((bs != null) && (as == null)) {\n            return -1 * nf;\n        }\n        if ((as != null) && (bs == null)) {\n            return 1 * nf;\n        }\n\n        //then raw NaNs\n        if ((typeof as === 'number') && isNaN(as)) {\n            return -1;\n        }\n        if ((typeof bs === 'number') && isNaN(bs)) {\n            return 1;\n        }\n\n        //numbers and numbery strings group together\n        const nas = +as;\n        const nbs = +bs;\n        if (nas < nbs) {\n            return -1;\n        }\n        if (nas > nbs) {\n            return 1;\n        }\n\n        //within that, true numbers before numbery strings\n        if ((typeof as === 'number') && (typeof bs !== 'number')) {\n            return -1;\n        }\n        if ((typeof bs === 'number') && (typeof as !== 'number')) {\n            return 1;\n        }\n        if ((typeof as === 'number') && (typeof bs === 'number')) {\n            return 0;\n        }\n\n        // 'Infinity' is a textual number, so less than 'A'\n        if (isNaN(nbs) && !isNaN(nas)) {\n            return -1;\n        }\n        if (isNaN(nas) && !isNaN(nbs)) {\n            return 1;\n        }\n\n        //finally, \"smart\" string sorting per http://stackoverflow.com/a/4373421/112871\n        let a = String(as);\n        let b = String(bs);\n        if (a === b) {\n            return 0;\n        }\n        if (!rd.test(a) || !rd.test(b)) {\n            return (a > b ? 1 : -1);\n        }\n\n        //special treatment for strings containing digits\n        a = a.match(rx); //create digits vs. non-digit chunks and iterate through\n        b = b.match(rx);\n        while (a.length && b.length) {\n            const a1 = a.shift();\n            const b1 = b.shift();\n            if (a1 !== b1) {\n                if (rd.test(a1) && rd.test(b1)) { //both are digit chunks\n                    return a1.replace(rz, '.0') - b1.replace(rz, '.0');\n                } else {\n                    return (a1 > b1 ? 1 : -1);\n                }\n            }\n        }\n        return a.length - b.length;\n    };\n\n    const sortAs = function (order) {\n        const mapping = {};\n        const l_mapping = {}; // sort lowercased keys similarly\n        for (let i in order) {\n            const x = order[i];\n            mapping[x] = i;\n            if (typeof x === 'string') {\n                l_mapping[x.toLowerCase()] = i;\n            }\n        }\n        return function (a, b) {\n            if ((mapping[a] != null) && (mapping[b] != null)) {\n                return mapping[a] - mapping[b];\n            } else if (mapping[a] != null) {\n                return -1;\n            } else if (mapping[b] != null) {\n                return 1;\n            } else if ((l_mapping[a] != null) && (l_mapping[b] != null)) {\n                return l_mapping[a] - l_mapping[b];\n            } else if (l_mapping[a] != null) {\n                return -1;\n            } else if (l_mapping[b] != null) {\n                return 1;\n            } else {\n                return naturalSort(a, b);\n            }\n        };\n    };\n\n    function getSort(sorters, attr) {\n        if (sorters != null) {\n            if ($.isFunction(sorters)) {\n                const sort = sorters(attr);\n                if ($.isFunction(sort)) {\n                    return sort;\n                }\n            } else if (sorters[attr] != null) {\n                return sorters[attr];\n            }\n        }\n        return naturalSort;\n    }\n\n    const filterByLength = (keys, length) => keys.filter(x => x.length === length);\n\n    const subarrays = array => array.map((d, i) => array.slice(0, i + 1));  // [1,2,3] => [[1], [1,2], [1,2,3]]\n\n    function normalizeData(data) {\n        Object.entries(data).forEach(([key, value]) => {\n            if (value instanceof Date) {\n                data[key] = value.toISOString();\n            }\n        });\n\n        return data;\n    }\n\n    /*\n    Data Model class\n    */\n\n    class PivotData {\n        constructor(input, opts) {\n            this.arrSort = this.arrSort.bind(this);\n            this.sortKeys = this.sortKeys.bind(this);\n            this.getColKeys = this.getColKeys.bind(this);\n            this.getRowKeys = this.getRowKeys.bind(this);\n            this.getAggregator = this.getAggregator.bind(this);\n            if (opts == null) {\n                opts = {};\n            }\n            this.input = input;\n            if (!Array.isArray(opts.aggregator)) {\n                opts.aggregator = opts.aggregator != null ? opts.aggregator : aggregatorTemplates.count()();\n                opts.aggregator = [opts.aggregator];\n            }\n            this.aggregator = opts.aggregator != null ? opts.aggregator : [aggregatorTemplates.count()()];\n            this.aggregatorName = opts.aggregatorName != null ? opts.aggregatorName : 'Count';\n            this.colAttrs = opts.cols != null ? opts.cols : [];\n            this.rowAttrs = opts.rows != null ? opts.rows : [];\n            this.valAttrs = opts.vals != null ? opts.vals : [];\n            this.sorters = opts.sorters != null ? opts.sorters : {};\n            this.rowOrder = opts.rowOrder != null ? opts.rowOrder : 'key_a_to_z';\n            this.colOrder = opts.colOrder != null ? opts.colOrder : 'key_a_to_z';\n            this.derivedAttributes = opts.derivedAttributes != null ? opts.derivedAttributes : {};\n            this.filter = opts.filter != null ? opts.filter : (() => true);\n            this.tree = {};\n            this.rowKeys = [];\n            this.colKeys = [];\n            this.rowTotals = {};\n            this.colTotals = {};\n            this.allTotal = this.aggregator.map(agg => agg(this, [], []));\n            this.sorted = false;\n            this.aggregatorsLabel = opts.aggregatorsLabel != null ? opts.aggregatorsLabel : [];\n            this.grouping = opts.grouping != null ? opts.grouping : false;\n            this.rowGroupBefore = (opts.grouping != null ? opts.grouping.rowGroupBefore : undefined) != null ? (opts.grouping != null ? opts.grouping.rowGroupBefore : undefined) : true;\n            this.colGroupBefore = (opts.grouping != null ? opts.grouping.colGroupBefore : undefined) != null ? (opts.grouping != null ? opts.grouping.colGroupBefore : undefined) : false;\n\n            // iterate through input, accumulating data for cells\n            PivotData.forEachRecord(this.input, this.derivedAttributes, record => {\n                if (this.filter(record)) {\n                    return this.processRecord(normalizeData(record));\n                }\n            });\n        }\n\n        //can handle arrays or jQuery selections of tables\n        static forEachRecord(input, derivedAttributes, f) {\n            let addRecord;\n            if ($.isEmptyObject(derivedAttributes)) {\n                addRecord = f;\n            } else {\n                addRecord = function (record) {\n                    for (let k in derivedAttributes) {\n                        const v = derivedAttributes[k];\n                        record[k] = v(record) || record[k];\n                    }\n                    return f(record);\n                };\n            }\n\n            //if it's a function, have its calls us back\n            if ($.isFunction(input)) {\n                return input(addRecord);\n            } else if ($.isArray(input)) {\n                if ($.isArray(input[0])) { //array of arrays\n                    const result = [];\n                    for (let i of Object.keys(input || {})) {\n                        const compactRecord = input[i];\n                        if (i > 0) {\n                            const record = {};\n                            for (let j of Object.keys(input[0] || {})) {\n                                const k = input[0][j];\n                                record[k] = compactRecord[j];\n                            }\n                            result.push(addRecord(record));\n                        }\n                    }\n                    return result;\n                } else { //array of objects\n                    const result = [];\n                    for (let record of input) {\n                        result.push(addRecord(record));\n                    }\n                    return result;\n                }\n            } else if (input instanceof $) {\n                const tblCols = [];\n                $('thead > tr > th', input).each(function (i) {\n                    return tblCols.push($(this).text());\n                });\n                return $('tbody > tr', input).each(function (i) {\n                    const record = {};\n                    $('td', this).each(function (j) {\n                        return record[tblCols[j]] = $(this).text();\n                    });\n                    return addRecord(record);\n                });\n            } else {\n                throw new Error('unknown input format');\n            }\n        }\n\n        forEachMatchingRecord(criteria, callback) {\n            return PivotData.forEachRecord(this.input, this.derivedAttributes, record => {\n                if (!this.filter(record)) {\n                    return;\n                }\n                for (let k in criteria) {\n                    const v = criteria[k];\n                    if (v !== (record[k] != null ? record[k] : 'null')) {\n                        return;\n                    }\n                }\n                return callback(record);\n            });\n        }\n\n        arrSort(attrs, nulls_first) {\n\n            const sortersArr = [];\n            for (const a of attrs) {\n                sortersArr.push(getSort(this.sorters, a));\n            }\n\n            return function (a, b) {\n                for (let i of Object.keys(sortersArr || {})) {\n                    const sorter = sortersArr[i];\n                    const comparison = sorter(a[i], b[i], nulls_first);\n                    if (comparison !== 0) {\n                        return comparison;\n                    }\n                }\n                return 0;\n            };\n        }\n\n        sortKeys() {\n            if (!this.sorted) {\n                this.sorted = true;\n                const v = (r, c) => this.getAggregator(r, c).value();\n                switch (this.rowOrder) {\n                    case 'value_a_to_z':\n                        this.rowKeys.sort((a, b) => naturalSort(v(a, []), v(b, [])));\n                        break;\n                    case 'value_z_to_a':\n                        this.rowKeys.sort((a, b) => -naturalSort(v(a, []), v(b, [])));\n                        break;\n                    default:\n                        this.rowKeys.sort(this.arrSort(this.rowAttrs, this.rowGroupBefore));\n                }\n                switch (this.colOrder) {\n                    case 'value_a_to_z':\n                        return this.colKeys.sort((a, b) => naturalSort(v([], a), v([], b)));\n                    case 'value_z_to_a':\n                        return this.colKeys.sort((a, b) => -naturalSort(v([], a), v([], b)));\n                    default:\n                        return this.colKeys.sort(this.arrSort(this.colAttrs, this.colGroupBefore));\n                }\n            }\n        }\n\n        getColKeys(all_keys) {\n            if (all_keys == null) {\n                all_keys = false;\n            }\n            this.sortKeys();\n            if (all_keys) {\n                return this.colKeys;\n            } else {\n                return filterByLength(this.colKeys, this.colAttrs.length);\n            }\n        }\n\n        getRowKeys(all_keys) {\n            if (all_keys == null) {\n                all_keys = false;\n            }\n            this.sortKeys();\n            if (all_keys) {\n                return this.rowKeys;\n            } else {\n                return filterByLength(this.rowKeys, this.rowAttrs.length);\n            }\n        }\n\n        processRecord(record) { //this code is called in a tight loop\n            let x;\n            let colKeys = [];\n            let rowKeys = [];\n            for (x of this.colAttrs) {\n                colKeys.push(record[x] != null ? record[x] : 'null');\n            }\n            for (x of this.rowAttrs) {\n                rowKeys.push(record[x] != null ? record[x] : 'null');\n            }\n            colKeys = this.grouping && colKeys.length ? subarrays(colKeys) : [colKeys];\n            rowKeys = this.grouping && rowKeys.length ? subarrays(rowKeys) : [rowKeys];\n\n            this.aggregator.forEach((agg, id) => {\n                return this.allTotal[id].push(record);\n            });\n\n            const result = [];\n            for (let j in rowKeys) {\n                const rowKey = rowKeys[j];\n                const flatRowKey = rowKey.join(String.fromCharCode(0));\n\n                const result1 = [];\n                for (let i in colKeys) {\n                    const colKey = colKeys[i];\n                    const flatColKey = colKey.join(String.fromCharCode(0));\n\n                    if (rowKey.length !== 0) {\n                        if (!this.rowTotals[flatRowKey]) {\n                            this.rowKeys.push(rowKey);\n                            this.rowTotals[flatRowKey] = this.aggregator.map(agg => agg(this, rowKey, []));\n                        }\n                        this.rowTotals[flatRowKey].forEach((agg, id) => {\n                            if (!this.grouping || (colKey.length === 1)) {\n                                return agg.push(record);\n                            }\n                        });\n                    }\n\n                    if (colKey.length !== 0) {\n                        if (!this.colTotals[flatColKey]) {\n                            this.colKeys.push(colKey);\n                            this.colTotals[flatColKey] = this.aggregator.map(agg => agg(this, [], colKey));\n                        }\n                        this.colTotals[flatColKey].forEach((agg, id) => {\n                            if (!this.grouping || (rowKey.length === 1)) {\n                                return agg.push(record);\n                            }\n                        });\n                    }\n\n                    if ((colKey.length !== 0) && (rowKey.length !== 0)) {\n                        if (!this.tree[flatRowKey]) {\n                            this.tree[flatRowKey] = {};\n                        }\n                        if (!this.tree[flatRowKey][flatColKey]) {\n                            this.tree[flatRowKey][flatColKey] = this.aggregator.map(agg => agg(this, rowKey, colKey));\n                        }\n                        result1.push(this.tree[flatRowKey][flatColKey].forEach((agg, id) => agg.push(record)));\n                    } else {\n                        result1.push(undefined);\n                    }\n                }\n                result.push(result1);\n            }\n            return result;\n        }\n\n        getAggregator(rowKey, colKey, id) {\n            let agg;\n            if (id == null) {\n                id = 0;\n            }\n            const flatRowKey = rowKey.join(String.fromCharCode(0));\n            const flatColKey = colKey.join(String.fromCharCode(0));\n            if ((rowKey.length === 0) && (colKey.length === 0)) {\n                agg = this.allTotal[id];\n            } else if (rowKey.length === 0) {\n                agg = this.colTotals[flatColKey] && this.colTotals[flatColKey][id];\n            } else if (colKey.length === 0) {\n                agg = this.rowTotals[flatRowKey] && this.rowTotals[flatRowKey][id];\n            } else {\n                agg = this.tree[flatRowKey][flatColKey] && this.tree[flatRowKey][flatColKey][id];\n            }\n            return agg != null ? agg : {\n                value() {\n                    return null;\n                }, format() {\n                    return '';\n                },\n            };\n        }\n    }\n\n    const renameAggregators = (aggregators) => aggregators.map((agg, id) =>\n        (agg.displayName = String.fromCharCode(97 + id).toUpperCase()));\n\n    const fieldsType = {\n        string: 'String',\n        number: 'Number',\n        date: 'Date',\n        time: 'Time',\n        datetime: 'Datetime',\n        boolean: 'Boolean',\n        integer: 'Integer',\n    };\n\n    //expose these to the outside world\n    $.pivotUtilities = {\n        aggregatorTemplates, aggregators: defaultAggregators, renderers, cellRenderers, derivers, locales, fieldsType,\n        zeroPad, naturalSort, numberFormat, sortAs, PivotData\n    };\n\n    /*\n    Default Renderer for hierarchical table layout\n    */\n\n    function pivotTableRenderer(pivotData, opts) {\n\n        let agg, aggregator, colKey, getClickHandler, i, id, j, td, th, totalAggregator, tr, val, x;\n        const defaults = {\n            table: {\n                clickCallback: null,\n                rowTotals: true,\n                colTotals: true,\n            },\n            localeStrings: {\n                totals: 'Totals',\n            },\n\n            typeCellRenderer: cellRenderers.text,\n            headCellRenderer: cellRenderers.text,\n            dataCellRenderer: cellRenderers.text,\n\n            fieldsType: {},\n        };\n\n        opts = $.extend(true, {}, defaults, opts);\n\n        const {\n            colAttrs,\n        } = pivotData;\n        const {\n            rowAttrs,\n        } = pivotData;\n        const rowKeys = pivotData.getRowKeys(true);\n        const colKeys = pivotData.getColKeys(true);\n\n        if (opts.table.clickCallback) {\n            getClickHandler = function (value, rowValues, colValues) {\n                let attr, i;\n                const filters = {};\n                for (i of Object.keys(colAttrs || {})) {\n                    attr = colAttrs[i];\n                    if (colValues[i] != null) {\n                        filters[attr] = colValues[i];\n                    }\n                }\n                for (i of Object.keys(rowAttrs || {})) {\n                    attr = rowAttrs[i];\n                    if (rowValues[i] != null) {\n                        filters[attr] = rowValues[i];\n                    }\n                }\n                return e => opts.table.clickCallback(e, value, filters, pivotData);\n            };\n        }\n\n        const compactLayout = (opts.table.compactLayout != null ? opts.table.compactLayout : true) && pivotData.grouping;\n        const rowExpandHandler = compactLayout ? expandRowCol : pivotData.rowGroupBefore ? expandWithSpan : expandRowsGroupAfter;\n\n        const rowsExpandHandler = getExpandHandler(rowKeys, true, rowExpandHandler.bind(pivotData));\n        const colsExpandHandler = getExpandHandler(colKeys, false, expandWithSpan.bind(pivotData));\n\n        //now actually build the outpu\n        const result = document.createElement('table');\n        result.className = 'pvtTable';\n\n        //helper function for setting row/col-span in pivotTableRenderer\n        const spanSize = function (arr, i, j) {\n            let x;\n            if (i !== 0) {\n                let asc, end;\n                let noDraw = true;\n                for (x = 0, end = j, asc = 0 <= end; asc ? x <= end : x >= end; asc ? x++ : x--) {\n                    if (arr[i - 1][x] !== arr[i][x]) {\n                        noDraw = false;\n                    }\n                }\n                if (noDraw) {\n                    return -1; //do not draw cell\n                }\n            }\n            let len = 0;\n            while ((i + len) < arr.length) {\n                let asc1, end1;\n                let stop = false;\n                for (x = 0, end1 = j, asc1 = 0 <= end1; asc1 ? x <= end1 : x >= end1; asc1 ? x++ : x--) {\n                    if (arr[i][x] !== arr[i + len][x]) {\n                        stop = true;\n                    }\n                }\n                if (stop) {\n                    break;\n                }\n                len++;\n            }\n            return len;\n        };\n\n        //the first few rows are for col headers\n        const thead = document.createElement('thead');\n        for (j of Object.keys(colAttrs || {})) {\n            const c = colAttrs[j];\n            tr = document.createElement('tr');\n            if ((parseInt(j) === 0) && (rowAttrs.length !== 0)) {\n                th = document.createElement('th');\n                th.setAttribute('colspan', rowAttrs.length);\n                th.setAttribute('rowspan', colAttrs.length);\n                tr.appendChild(th);\n            }\n            th = document.createElement('th');\n            th.className = 'pvtAxisLabel';\n            th.appendChild(opts.typeCellRenderer.call(opts, c));\n            if (pivotData.grouping && (j < (colAttrs.length - 1))) {\n                th.onclick = getExpandAllHandler(pivotData, +j, false);\n                th.className += ` open level${j}`;\n            }\n            tr.appendChild(th);\n            for (i of Object.keys(colKeys || {})) {\n                colKey = colKeys[i];\n                x = spanSize(colKeys, parseInt(i), parseInt(j));\n                if (x !== -1) {\n                    th = document.createElement('th');\n                    th.className = 'pvtColLabel';\n                    th.className += ` col${pivotData.colGroupBefore ? +i : (+i + x) - 1}`;\n                    th.appendChild(opts.headCellRenderer.call(opts, colKey[j], c));\n                    th.setAttribute('colspan', x * Math.max(1, pivotData.aggregator.length));\n                    if ((parseInt(j) === (colAttrs.length - 1)) && (rowAttrs.length !== 0)) {\n                        th.setAttribute('rowspan', 2);\n                    }\n                    if (pivotData.grouping && (j < (colAttrs.length - 1)) && colKey[j]) {\n                        th.className += ' pvtSubtotal open';\n                        th.setAttribute('colspan', x * Math.max(1, pivotData.aggregator.length));\n                        th.onclick = colsExpandHandler;\n                    }\n                    tr.appendChild(th);\n                }\n            }\n            if ((parseInt(j) === 0) && opts.table.rowTotals) {\n                th = document.createElement('th');\n                th.className = 'pvtTotalLabel pvtRowTotalLabel';\n                th.innerHTML = opts.localeStrings.totals;\n                th.setAttribute('colspan', Math.max(1, pivotData.aggregator.length));\n                th.setAttribute('rowspan', colAttrs.length + (rowAttrs.length === 0 ? 0 : 1));\n                tr.appendChild(th);\n            }\n            thead.appendChild(tr);\n        }\n\n        //then a row for row header headers\n        if (rowAttrs.length !== 0) {\n            tr = document.createElement('tr');\n            for (i of Object.keys(rowAttrs || {})) {\n                const r = rowAttrs[i];\n                th = document.createElement('th');\n                th.className = 'pvtAxisLabel';\n                th.appendChild(opts.typeCellRenderer.call(opts, r));\n                if (pivotData.grouping && (i < (rowAttrs.length - 1))) {\n                    th.className += ` open level${i}`;\n                    th.onclick = getExpandAllHandler(pivotData, +i, true);\n                }\n                tr.appendChild(th);\n            }\n            th = document.createElement('th');\n            if (colAttrs.length === 0) {\n                th.className = 'pvtTotalLabel pvtRowTotalLabel';\n                th.innerHTML = opts.localeStrings.totals;\n                th.setAttribute('colspan', pivotData.aggregator.length);\n            }\n            tr.appendChild(th);\n            thead.appendChild(tr);\n        }\n        result.appendChild(thead);\n\n        //now the actual data rows, with their row headers and totals\n        const tbody = document.createElement('tbody');\n\n        if (pivotData.aggregatorsLabel && (pivotData.aggregatorsLabel.length > 1)) {\n            let lbl;\n            tr = document.createElement('tr');\n            th = document.createElement('th');\n            const colspan = rowAttrs.length + (colAttrs.length === 0 ? 0 : 1);\n            th.setAttribute('colspan', colspan);\n            tr.appendChild(th);\n\n            for (j of Object.keys(colKeys || {})) { //this is a tight loop\n                colKey = colKeys[j];\n                for (lbl of pivotData.aggregatorsLabel) {\n                    th = document.createElement('th');\n                    th.className = `pvtAggregatorLabel col${j}`;\n                    th.textContent = lbl;\n                    tr.appendChild(th);\n                }\n            }\n\n            for (lbl of pivotData.aggregatorsLabel) {\n                th = document.createElement('th');\n                th.className = 'pvtAggregatorLabel';\n                th.textContent = lbl;\n                tr.appendChild(th);\n            }\n\n            tbody.appendChild(tr);\n        }\n\n\n        for (i of Object.keys(rowKeys || {})) {\n            const rowKey = rowKeys[i];\n            tr = document.createElement('tr');\n            const rowGap = rowAttrs.length - rowKey.length;\n            tr.className = rowGap ? `pvtSubtotal level${rowKey.length}` : 'pvtData';\n            for (j of Object.keys(rowKey || {})) {\n                const txt = rowKey[j];\n                if (compactLayout && (j < (rowKey.length - 1))) {\n                    continue;\n                }\n                x = compactLayout ? 1 : spanSize(rowKeys, parseInt(i), parseInt(j));\n                if (x !== -1) {\n                    th = document.createElement('th');\n                    th.className = 'pvtRowLabel';\n                    th.className += ` row${pivotData.rowGroupBefore ? +i : (+i + x) - 1}`;\n                    th.appendChild(opts.headCellRenderer.call(opts, txt, rowAttrs[j]));\n                    th.setAttribute('rowspan', x);\n                    if (compactLayout) {\n                        th.colSpan = rowAttrs.length;\n                        th.style.paddingLeft = 5 + (parseInt(j) * 20) + 'px';\n                    }\n                    if (pivotData.grouping && (j < (rowAttrs.length - 1))) {\n                        th.className += ' open';\n                        th.onclick = rowsExpandHandler;\n                    }\n                    tr.appendChild(th);\n                }\n            }\n\n            if (!compactLayout && rowGap) {\n                th = document.createElement('th');\n                th.colSpan = rowGap;\n                th.textContent = `Total (${rowKey[j]})`;\n                tr.appendChild(th);\n            }\n\n            if (colAttrs.length) {\n                th.colSpan++;\n            }\n\n            for (j of Object.keys(colKeys || {})) { //this is a tight loop\n                colKey = colKeys[j];\n                for (id = 0; id < pivotData.aggregator.length; id++) {\n                    agg = pivotData.aggregator[id];\n                    aggregator = pivotData.getAggregator(rowKey, colKey, id);\n                    val = aggregator.value(id);\n                    td = document.createElement('td');\n                    if (!rowGap) {\n                        td.className = 'pvtVal ';\n                    }\n                    td.className += `row${i} col${j}`;\n                    if (colAttrs.length - colKey.length) {\n                        td.className = `pvtSubtotal level${colKey.length} row${i} col${j}`;\n                    }\n                    td.appendChild(opts.dataCellRenderer.call(opts, aggregator.format(val, opts.fieldsType[aggregator?.attr]), aggregator?.attr, rowKey, colKey));\n                    td.setAttribute('data-value', val);\n                    if (getClickHandler != null) {\n                        td.onclick = getClickHandler(val, rowKey, colKey);\n                    }\n                    tr.appendChild(td);\n                }\n            }\n\n            if (opts.table.rowTotals || (colAttrs.length === 0)) {\n                for (id = 0; id < pivotData.aggregator.length; id++) {\n                    agg = pivotData.aggregator[id];\n                    totalAggregator = pivotData.getAggregator(rowKey, [], id);\n                    val = totalAggregator.value(id);\n                    td = document.createElement('td');\n                    td.className = 'pvtTotal rowTotal';\n                    td.append(opts.dataCellRenderer.call(opts, totalAggregator.format(val, opts.fieldsType[totalAggregator?.attr]), totalAggregator?.attr, rowKey, []));\n                    td.setAttribute('data-value', val);\n                    if (getClickHandler != null) {\n                        td.onclick = getClickHandler(val, rowKey, []);\n                    }\n                    td.setAttribute('data-for', 'row' + i);\n                    tr.appendChild(td);\n                }\n            }\n            tbody.appendChild(tr);\n        }\n\n        //finally, the row for col totals, and a grand total\n        if (opts.table.colTotals || (rowAttrs.length === 0)) {\n            tr = document.createElement('tr');\n            if (opts.table.colTotals || (rowAttrs.length === 0)) {\n                th = document.createElement('th');\n                th.className = 'pvtTotalLabel pvtColTotalLabel';\n                th.innerHTML = opts.localeStrings.totals;\n                th.setAttribute('colspan', rowAttrs.length + (colAttrs.length === 0 ? 0 : 1));\n                tr.appendChild(th);\n            }\n            for (j of Object.keys(colKeys || {})) {\n                colKey = colKeys[j];\n                for (id = 0; id < pivotData.aggregator.length; id++) {\n                    agg = pivotData.aggregator[id];\n                    totalAggregator = pivotData.getAggregator([], colKey, id);\n                    val = totalAggregator.value(id);\n                    td = document.createElement('td');\n                    td.className = `pvtTotal colTotal col${j}`;\n                    if (colKey.length !== colAttrs.length) {\n                        td.className += ` pvtSubtotal level${colKey.length}`;\n                    }\n                    td.append(opts.dataCellRenderer.call(opts, totalAggregator.format(val, opts.fieldsType[totalAggregator?.attr]), totalAggregator?.attr, [], colKey));\n                    td.setAttribute('data-value', val);\n                    if (getClickHandler != null) {\n                        td.onclick = getClickHandler(val, [], colKey);\n                    }\n                    td.setAttribute('data-for', 'col' + j);\n                    tr.appendChild(td);\n                }\n            }\n            if (opts.table.rowTotals || (colAttrs.length === 0)) {\n                for (id = 0; id < pivotData.aggregator.length; id++) {\n                    agg = pivotData.aggregator[id];\n                    totalAggregator = pivotData.getAggregator([], [], id);\n                    val = totalAggregator.value(id);\n                    td = document.createElement('td');\n                    td.className = 'pvtGrandTotal';\n                    td.append(opts.dataCellRenderer.call(opts, totalAggregator.format(val, opts.fieldsType[totalAggregator?.attr]), totalAggregator?.attr, [], []));\n                    td.setAttribute('data-value', val);\n                    if (getClickHandler != null) {\n                        td.onclick = getClickHandler(val, [], []);\n                    }\n                    tr.appendChild(td);\n                }\n            }\n            tbody.appendChild(tr);\n        }\n        result.appendChild(tbody);\n\n        //squirrel this away for later\n        result.setAttribute('data-numrows', rowKeys.length);\n        result.setAttribute('data-numcols', colKeys.length);\n\n        return result;\n    }\n\n    /*\n    Pivot Table core: create PivotData object and call Renderer on it\n    */\n\n    $.fn.pivot = function (input, inputOpts, locale) {\n        let e;\n        if (locale == null) {\n            locale = 'en';\n        }\n        if ((locales[locale] == null)) {\n            locale = 'en';\n        }\n        localeGlobal = locale;\n        inputOpts = inputOpts || {};\n        const defaults = {\n            cols: [], rows: [], vals: [],\n            rowOrder: 'key_a_to_z', colOrder: 'key_a_to_z',\n            dataClass: PivotData,\n            filter() {\n                return true;\n            },\n            aggregator: aggregatorTemplates.count()(),\n            aggregatorName: 'Count',\n            sorters: {},\n            derivedAttributes: {},\n            renderer: pivotTableRenderer,\n        };\n\n        const localeStrings = $.extend(true, {}, locales.en.localeStrings, locales[locale].localeStrings);\n        const localeDefaults = {\n            rendererOptions: { localeStrings },\n            localeStrings,\n        };\n\n        const opts = $.extend(true, {}, localeDefaults, $.extend({}, defaults, inputOpts));\n\n        let result;\n        inputOpts.pivotData = null;\n        try {\n            const pivotData = new opts.dataClass(input, opts);\n            try {\n                result = opts.renderer(pivotData, opts.rendererOptions);\n                inputOpts.pivotData = pivotData;\n            } catch (error) {\n                e = error;\n                if (typeof console !== 'undefined' && console !== null) {\n                    console.error(e.stack);\n                }\n                result = $('<span>').html(opts.localeStrings.renderError);\n            }\n        } catch (error1) {\n            e = error1;\n            if (typeof console !== 'undefined' && console !== null) {\n                console.error(e.stack);\n            }\n            result = $('<span>').html(opts.localeStrings.computeError);\n        }\n\n        const x = this[0];\n        while (x.hasChildNodes()) {\n            x.removeChild(x.lastChild);\n        }\n        return this.append(result);\n    };\n\n    /*\n    Pivot Table UI: calls the Pivot Table core above with options set by user\n    */\n\n    $.fn.pivotUI = function (input, inputOpts, overwrite, locale) {\n        let opts;\n        let a, c;\n        if (overwrite == null) {\n            overwrite = false;\n        }\n        if (locale == null) {\n            locale = 'fr';\n        }\n        if ((locales[locale] == null)) {\n            locale = 'en';\n        }\n\n        const defaults = {\n            derivedAttributes: {},\n            aggregators: defaultAggregators,\n            renderers,\n            hiddenAttributes: [],\n            hiddenFromAggregators: [],\n            hiddenFromDragDrop: [],\n            menuLimit: 500,\n            cols: [], rows: [], vals: [],\n            rowOrder: 'key_a_to_z', colOrder: 'key_a_to_z',\n            dataClass: PivotData,\n            exclusions: {},\n            inclusions: {},\n            unusedAttrsVertical: 85,\n            autoSortUnusedAttrs: false,\n            onRefresh: null,\n            showUI: true,\n            filter() {\n                return true;\n            },\n            sorters: {},\n            multiple: true,\n            parametersActive: false,\n        };\n\n        let itemsId = 0;\n        let aggregators = [];\n        const localeStrings = $.extend(true, {}, locales.en.localeStrings, locales[locale].localeStrings);\n        const localeDefaults = {\n            rendererOptions: { localeStrings },\n            localeStrings,\n        };\n\n        const existingOpts = this.data('pivotUIOptions');\n        if ((existingOpts == null) || overwrite) {\n            opts = $.extend(true, {}, localeDefaults, $.extend({}, defaults, inputOpts));\n        } else {\n            opts = existingOpts;\n        }\n\n        if (!inputOpts?.aggregators && locales[locale].formatters) {\n            opts.aggregators = makeAggregators(\n                locales[locale].formatters.format,\n                locales[locale].formatters.formatInt,\n                locales[locale].formatters.formatPct);\n        }\n\n        try {\n            // do a first pass on the data to cache a materialized copy of any\n            // function-valued inputs and to compute dimension cardinalities\n            let attr, i, unusedAttrsVerticalAutoCutoff, x;\n            const attrValues = {};\n            const materializedInput = [];\n            let recordsProcessed = 0;\n            PivotData.forEachRecord(input, opts.derivedAttributes, function (record) {\n                let attr;\n                if (!opts.filter(record)) {\n                    return;\n                }\n                materializedInput.push(record);\n                for (attr of Object.keys(record || {})) {\n                    if ((attrValues[attr] == null)) {\n                        attrValues[attr] = {};\n                        if (recordsProcessed > 0) {\n                            attrValues[attr]['null'] = recordsProcessed;\n                        }\n                    }\n                }\n                for (attr in attrValues) {\n                    const value = record[attr] != null ? record[attr] : 'null';\n                    if (attrValues[attr][value] == null) {\n                        attrValues[attr][value] = 0;\n                    }\n                    attrValues[attr][value]++;\n                }\n                return recordsProcessed++;\n            });\n\n            const uiContainer = $('<div>').addClass('pvtUi');\n\n            const uiMenu = $('<div>').addClass('pvtUiMenu');\n            const uiParameters = $('<div>').addClass('pvtUiParameters');\n            const uiPivotContainer = $('<div>').addClass('pvtUiContainer');\n\n            const uiButtonColumns = $('<div>')\n                .addClass('pvtUiVerticalButton')\n                .addClass('pvtUiButtonColumns')\n                .addClass('active')\n                .text(localeStrings.colsLabel)\n                .on('click', function () {\n                    opts.parametersActive = !opts.parametersActive;\n                    if (opts.parametersActive) {\n                        uiButtonColumns.addClass('active');\n                        return uiParameters.show();\n                    } else {\n                        uiButtonColumns.removeClass('active');\n                        return uiParameters.hide();\n                    }\n                })\n                .appendTo(uiMenu);\n\n            const uiButtonGroups = $('<div>')\n                .addClass('pvtUiVerticalButton')\n                .addClass('pvtUiButtonGroups')\n                .text(localeStrings.groupsLabel)\n                .on('click', function () {\n                    if (opts.grouping) {\n                        uiButtonGroups.removeClass('active');\n                        opts.grouping = false;\n                    } else {\n                        uiButtonGroups.addClass('active');\n                        opts.grouping = {\n                            colGroupBefore: false,\n                        };\n                    }\n                    return refresh();\n                })\n                .appendTo(uiMenu);\n\n            uiContainer\n                .append(uiMenu)\n                .append(uiParameters)\n                .append(uiPivotContainer);\n\n            //# Render type\n            $('<div>')\n                .addClass('pvtParameterLabel')\n                .appendTo(uiParameters)\n                .text(localeStrings.rendererLabel);\n            let pvtRenderType = $('<div>')\n                .addClass('pvtRendererType')\n                .addClass('pvtParameter')\n                .appendTo(uiParameters);\n            const renderer = $('<select>')\n                .addClass('pvtRenderer')\n                .appendTo(pvtRenderType)\n                .bind('change', () => refresh()); //capture reference\n            for (x of Object.keys(opts.renderers || {})) {\n                const r = opts.localeStrings[x] || x;\n                $('<option>').val(x).html(r).appendTo(renderer);\n            }\n\n            //axis list, including the double click menu\n            const unused = $('<div>').addClass('pvtAxisContainer pvtUnused');\n            const shownAttributes = [];\n            for (a in attrValues) {\n                if (!opts.hiddenAttributes.includes(a)) {\n                    shownAttributes.push(a);\n                }\n            }\n            const shownInAggregators = [];\n            for (c of shownAttributes) {\n                if (!opts.hiddenFromAggregators.includes(c)) {\n                    shownInAggregators.push(c);\n                }\n            }\n            const shownInDragDrop = [];\n            for (c of shownAttributes) {\n                if (!opts.hiddenFromDragDrop.includes(c)) {\n                    shownInDragDrop.push(c);\n                }\n            }\n\n            let unusedAttrsVerticalAutoOverride = false;\n            if (opts.unusedAttrsVertical === 'auto') {\n                unusedAttrsVerticalAutoCutoff = 120; // legacy support\n            } else {\n                unusedAttrsVerticalAutoCutoff = parseInt(opts.unusedAttrsVertical);\n            }\n\n            if (!isNaN(unusedAttrsVerticalAutoCutoff)) {\n                let attrLength = 0;\n                for (a of shownInDragDrop) {\n                    attrLength += a.length;\n                }\n                unusedAttrsVerticalAutoOverride = attrLength > unusedAttrsVerticalAutoCutoff;\n            }\n\n            for (i of Object.keys(shownInDragDrop || {})) {\n                attr = shownInDragDrop[i];\n                const values = [];\n                for (const v in attrValues[attr]) {\n                    values.push(v);\n                }\n                let hasExcludedItem = false;\n                const valueList = $('<div>').addClass('pvtFilterBox').hide();\n\n                valueList.append($('<h4>').append(\n                        $('<span>').text(attr),\n                        $('<span>').addClass('count').text(`(${values.length})`),\n                    ),\n                );\n                if (values.length > opts.menuLimit) {\n                    valueList.append($('<p>').html(opts.localeStrings.tooMany));\n                } else {\n                    if (values.length > 5) {\n                        const controls = $('<p>').appendTo(valueList);\n                        const sorter = getSort(opts.sorters, attr);\n                        const placeholder = opts.localeStrings.filterResults;\n                        $('<input>', { type: 'text' }).appendTo(controls)\n                            .attr({ placeholder, class: 'pvtSearch' })\n                            .bind('keyup', function () {\n                                const filter = $(this).val().toLowerCase().trim();\n                                const accept_gen = (prefix, accepted) => (function (v) {\n                                    const real_filter = filter.substring(prefix.length).trim();\n                                    if (real_filter.length === 0) {\n                                        return true;\n                                    }\n                                    return accepted.includes(Math.sign(sorter(v.toLowerCase(), real_filter)));\n                                });\n                                const accept =\n                                    filter.indexOf('>=') === 0 ? accept_gen('>=', [1, 0])\n                                        : filter.indexOf('<=') === 0 ? accept_gen('<=', [-1, 0])\n                                            : filter.indexOf('>') === 0 ? accept_gen('>', [1])\n                                                : filter.indexOf('<') === 0 ? accept_gen('<', [-1])\n                                                    : filter.indexOf('~') === 0 ? function (v) {\n                                                            if (filter.substring(1).trim().length === 0) {\n                                                                return true;\n                                                            }\n                                                            return v.toLowerCase().match(filter.substring(1));\n                                                        }\n                                                        : v => v.toLowerCase().indexOf(filter) !== -1;\n\n                                return valueList.find('.pvtCheckContainer p label span.value').each(function () {\n                                    if (accept($(this).text())) {\n                                        return $(this).parent().parent().show();\n                                    } else {\n                                        return $(this).parent().parent().hide();\n                                    }\n                                });\n                            });\n                        controls.append($('<br>'));\n                        $('<button>', { type: 'button' }).appendTo(controls)\n                            .html(opts.localeStrings.selectAll)\n                            .bind('click', function () {\n                                valueList.find('input:visible:not(:checked)')\n                                    .prop('checked', true).toggleClass('changed');\n                                return false;\n                            });\n                        $('<button>', { type: 'button' }).appendTo(controls)\n                            .html(opts.localeStrings.selectNone)\n                            .bind('click', function () {\n                                valueList.find('input:visible:checked')\n                                    .prop('checked', false).toggleClass('changed');\n                                return false;\n                            });\n                    }\n\n                    const checkContainer = $('<div>').addClass('pvtCheckContainer').appendTo(valueList);\n\n                    for (let value of values.sort(getSort(opts.sorters, attr))) {\n                        const valueCount = attrValues[attr][value];\n                        const filterItem = $('<label>');\n                        let filterItemExcluded = false;\n                        if (opts.inclusions[attr]) {\n                            filterItemExcluded = (!opts.inclusions[attr].includes(value));\n                        } else if (opts.exclusions[attr]) {\n                            filterItemExcluded = (opts.exclusions[attr].includes(value));\n                        }\n                        if (!hasExcludedItem) {\n                            hasExcludedItem = filterItemExcluded;\n                        }\n                        $('<input>')\n                            .attr('type', 'checkbox').addClass('pvtFilter')\n                            .attr('checked', !filterItemExcluded).data('filter', [attr, value])\n                            .appendTo(filterItem)\n                            .bind('change', function () {\n                                return $(this).toggleClass('changed');\n                            });\n                        filterItem.append($('<span>').addClass('value').text(value));\n                        filterItem.append($('<span>').addClass('count').text('(' + valueCount + ')'));\n                        checkContainer.append($('<p>').append(filterItem));\n                    }\n                }\n\n                const closeFilterBox = function () {\n                    if (valueList.find('[type=\\'checkbox\\']').length >\n                        valueList.find('[type=\\'checkbox\\']:checked').length) {\n                        attrElem.addClass('pvtFilteredAttribute');\n                    } else {\n                        attrElem.removeClass('pvtFilteredAttribute');\n                    }\n\n                    valueList.find('.pvtSearch').val('');\n                    valueList.find('.pvtCheckContainer p').show();\n                    return valueList.hide();\n                };\n\n\n                const finalButtons = $('<p>').appendTo(valueList);\n\n                if (values.length <= opts.menuLimit) {\n                    $('<button>', { type: 'button' }).text(opts.localeStrings.apply)\n                        .appendTo(finalButtons).bind('click', function () {\n                        if (valueList.find('.changed').removeClass('changed').length) {\n                            refresh();\n                        }\n                        return closeFilterBox();\n                    });\n                }\n\n                $('<button>', { type: 'button' }).text(opts.localeStrings.cancel)\n                    .appendTo(finalButtons).bind('click', function () {\n                    valueList.find('.changed:checked')\n                        .removeClass('changed').prop('checked', false);\n                    valueList.find('.changed:not(:checked)')\n                        .removeClass('changed').prop('checked', true);\n                    return closeFilterBox();\n                });\n\n                const triangleLink = $('<span>').addClass('pvtTriangle')\n                    .html(' &#x25BE;').bind('click', function (e) {\n                        const { left, top } = $(e.currentTarget).position();\n                        return valueList.css({ left: left + 10, top: top + 10 }).show();\n                    });\n\n                const attrElem = $('<li>').addClass(`axis_${i}`)\n                    .append($('<span>').addClass('pvtAttr').text(attr).data('attrName', attr).append(triangleLink));\n\n                if (hasExcludedItem) {\n                    attrElem.addClass('pvtFilteredAttribute');\n                }\n                unused.append(attrElem).append(valueList);\n            }\n\n            $('<div>')\n                .addClass('pvtParameterLabel')\n                .appendTo(uiParameters)\n                .text(localeStrings.valuesLabel);\n\n            //aggregator menu and value area\n            const divAggregator = $('<div>')\n                .addClass('pvtAggregatorChoose')\n                .addClass('pvtParameter')\n                .appendTo(uiParameters);\n\n            const aggregator = $('<select>')\n                .addClass('pvtAggregator')\n                .appendTo(divAggregator)\n                .bind('change', () => {\n                    if (!opts.multiple) {\n                        this.find('.pvtVals .pvtAttrDropdown').each(function () {\n                            return this.remove();\n                        });\n                        aggregators = [{ id: 1, value: aggregator.val() }];\n                        return refresh();\n                    }\n                }); //capture reference\n\n            for (x of Object.keys(opts.aggregators || {})) {\n                aggregator.append($('<option>').val(x).html(locales[locale].localeStrings[x] || locales['en'].localeStrings[x] || x));\n            }\n\n            if (opts.multiple) {\n                $('<a>', { role: 'button' })\n                    .addClass('pvtAddAggregator')\n                    .addClass('pvtToolButton')\n                    .appendTo(divAggregator)\n                    .html('+')\n                    .bind('click', function () {\n                        aggregators.push({ id: ++itemsId, value: aggregator.val() });\n                        renameAggregators(aggregators);\n                        return refresh();\n                    });\n            }\n\n            const ordering = {\n                key_a_to_z: { rowSymbol: '&varr;', colSymbol: '&harr;', next: 'value_a_to_z' },\n                value_a_to_z: { rowSymbol: '&darr;', colSymbol: '&rarr;', next: 'value_z_to_a' },\n                value_z_to_a: { rowSymbol: '&uarr;', colSymbol: '&larr;', next: 'key_a_to_z' },\n            };\n\n            const rowOrderArrow = $('<a>', { role: 'button' })\n                .addClass('pvtRowOrder')\n                .addClass('pvtToolButton')\n                .appendTo(divAggregator)\n                .data('order', opts.rowOrder).html(ordering[opts.rowOrder].rowSymbol)\n                .bind('click', function () {\n                    $(this).data('order', ordering[$(this).data('order')].next);\n                    $(this).html(ordering[$(this).data('order')].rowSymbol);\n                    return refresh();\n                });\n\n            const colOrderArrow = $('<a>', { role: 'button' })\n                .addClass('pvtColOrder')\n                .addClass('pvtToolButton')\n                .appendTo(divAggregator)\n                .data('order', opts.colOrder).html(ordering[opts.colOrder].colSymbol)\n                .bind('click', function () {\n                    $(this).data('order', ordering[$(this).data('order')].next);\n                    $(this).html(ordering[$(this).data('order')].colSymbol);\n                    return refresh();\n                });\n\n            const pvVals = $('<div>').addClass('pvtVals')\n                .addClass('pvtParameter')\n                .appendTo(uiParameters);\n\n            uiParameters.append(pvVals);\n\n            // Available fields\n            $('<div>')\n                .addClass('pvtParameterLabel')\n                .appendTo(uiParameters)\n                .text(localeStrings.fieldsLabel);\n\n            uiParameters.append(unused);\n\n            //column axes\n            $('<div>')\n                .addClass('pvtParameterLabel')\n                .appendTo(uiParameters)\n                .text(localeStrings.colsLabel);\n\n            $('<div>').addClass('pvtAxisContainer pvtCols').appendTo(uiParameters);\n\n            //row axes\n            $('<div>')\n                .addClass('pvtParameterLabel')\n                .appendTo(uiParameters)\n                .text(localeStrings.rowsLabel);\n            $('<div>').addClass('pvtAxisContainer pvtRows').appendTo(uiParameters);\n\n            //the actual pivot table container\n            const pivotTable = $('<div>')\n                .addClass('pvtRendererArea')\n                .appendTo(uiPivotContainer);\n\n            //render the UI in its default state\n            this.html(uiContainer);\n\n            if (!opts.parametersActive) {\n                uiButtonColumns.removeClass('active');\n                uiParameters.hide();\n            }\n\n            //set up the UI initial state as requested by moving elements around\n\n            let initialRender = true;\n\n            //set up for refreshing\n            const refreshDelayed = () => {\n                let vals;\n                const subopts = {\n                    derivedAttributes: opts.derivedAttributes,\n                    localeStrings: opts.localeStrings,\n                    rendererOptions: opts.rendererOptions,\n                    sorters: opts.sorters,\n                    cols: [], rows: [],\n                    dataClass: opts.dataClass,\n                    grouping: opts.grouping,\n                };\n\n                this.find('.pvtRows li span.pvtAttr').each(function () {\n                    return subopts.rows.push($(this).data('attrName'));\n                });\n                this.find('.pvtCols li span.pvtAttr').each(function () {\n                    return subopts.cols.push($(this).data('attrName'));\n                });\n\n                let numInputsToProcess = 0;\n\n                const aggVals = [];\n                let j = 0, idx = j;\n                for (; j < aggregators.length; j++, idx = j) {\n                    let aggregatorType;\n                    const agg = aggregators[idx];\n                    if (typeof agg === 'object') {\n                        aggregatorType = agg.value;\n                    }\n                    const aggIdx = agg.id;\n                    const initialVals = agg.vals;\n\n                    numInputsToProcess = opts.aggregators[aggregatorType]([])().numInputs || 0;\n\n                    vals = [];\n                    this.find('.pvtVals select.pvtAttrDropdown' + aggIdx).each(function () {\n                        if (numInputsToProcess !== 0) {\n                            numInputsToProcess--;\n                            if ($(this).val() !== '') {\n                                return vals.push($(this).val());\n                            }\n                        }\n                    });\n\n\n                    const pvtVals = this.find('.pvtVals');\n                    let container = this.find('.pvtVals .pvtAttrDropdownContainer' + aggIdx);\n                    const found = container.length > 0;\n                    if (opts.multiple) {\n                        let labelAggregator;\n                        if (!found) {\n                            container = $('<div>')\n                                .addClass('pvtAttrDropdownContainer')\n                                .addClass('pvtAttrDropdownContainer' + aggIdx)\n                                .appendTo(pvtVals);\n                            labelAggregator = locales[locale].localeStrings[aggregatorType] || locales['en'].localeStrings[aggregatorType] || aggregatorType;\n                            $('<label>')\n                                .addClass('pvtAttrDropdown')\n                                .addClass('pvtAttrDropdown' + aggIdx)\n                                .appendTo(container)\n                                .html('<b>' + agg.displayName + '</b>) ' + labelAggregator);\n                            initialRender = true;\n                        }\n\n                        if (!initialRender) {\n                            this.find('.pvtVals .pvtAttrDropdownContainer' + aggIdx + ' label.pvtAttrDropdown')\n                                .each(function () {\n                                    labelAggregator = locales[locale].localeStrings[aggregatorType] || locales['en'].localeStrings[aggregatorType] || aggregatorType;\n                                    return $(this).html('<b>' + agg.displayName + '</b>) ' + labelAggregator);\n                                });\n                        }\n                    } else {\n                        container = pvtVals;\n                    }\n\n                    if (numInputsToProcess !== 0) {\n                        let asc, end;\n                        for (x = 0, end = numInputsToProcess, asc = 0 <= end; asc ? x < end : x > end; asc ? x++ : x--) {\n                            const newDropdown = $('<select>')\n                                .addClass('pvtAttrDropdown' + aggIdx)\n                                .addClass('pvtAttrDropdown')\n                                .append($('<option>'))\n                                .bind('change', () => refresh());\n                            for (attr of shownInAggregators) {\n                                newDropdown.append($('<option>').val(attr).text(attr));\n                            }\n                            container.append(newDropdown);\n                        }\n                    }\n\n\n                    if (opts.multiple && !found) {\n                        $('<a>')\n                            .html('x')\n                            .addClass('pvtRemoveAggregator')\n                            .addClass('pvtToolButton')\n                            .addClass('pvtAttrDropdown' + aggIdx)\n                            .appendTo(container)\n                            .bind('click', (function () {\n                                    this.instance.find('.pvtVals .pvtAttrDropdownContainer' + this.aggIdx).remove();\n                                    idx = aggregators.findIndex(agg => agg.id === this.aggIdx);\n                                    aggregators.splice(idx, 1);\n                                    renameAggregators(aggregators);\n                                    return refresh();\n                                }).bind({ instance: this, aggIdx }),\n                            );\n                    }\n\n                    if (initialRender) {\n                        vals = initialVals != null ? initialVals : opts.vals;\n                        i = 0;\n                        this.find('.pvtVals select.pvtAttrDropdown' + aggIdx).each(function () {\n                            $(this).val(vals[i]);\n                            return i++;\n                        });\n                        initialRender = false;\n                    }\n\n                    aggVals.push(vals);\n                }\n\n                subopts.aggregatorName = aggregators.map(agg => agg.value);\n                subopts.vals = aggVals;\n                subopts.aggregator = aggregators.map((agg, i) => opts.aggregators[agg.value](aggVals[i], opts));\n                subopts.renderer = opts.renderers[renderer.val()];\n                subopts.rowOrder = rowOrderArrow.data('order');\n                subopts.colOrder = colOrderArrow.data('order');\n                if (opts.multiple) {\n                    subopts.aggregatorsLabel = aggregators.map(agg => agg.displayName);\n                }\n\n                //construct filter here\n                const exclusions = {};\n                this.find('input.pvtFilter').not(':checked').each(function () {\n                    const filter = $(this).data('filter');\n                    if (exclusions[filter[0]] != null) {\n                        return exclusions[filter[0]].push(filter[1]);\n                    } else {\n                        return exclusions[filter[0]] = [filter[1]];\n                    }\n                });\n                //include inclusions when exclusions present\n                const inclusions = {};\n                this.find('input.pvtFilter:checked').each(function () {\n                    const filter = $(this).data('filter');\n                    if (exclusions[filter[0]] != null) {\n                        if (inclusions[filter[0]] != null) {\n                            return inclusions[filter[0]].push(filter[1]);\n                        } else {\n                            return inclusions[filter[0]] = [filter[1]];\n                        }\n                    }\n                });\n\n                subopts.filter = function (record) {\n                    if (!opts.filter(record)) {\n                        return false;\n                    }\n                    for (let k in exclusions) {\n                        const excludedItems = exclusions[k];\n                        if (excludedItems.includes('' + (record[k] != null ? record[k] : 'null'))) {\n                            return false;\n                        }\n                    }\n                    return true;\n                };\n\n                pivotTable.pivot(materializedInput, subopts, locale);\n                const pivotUIOptions = $.extend({}, opts, {\n                        cols: subopts.cols,\n                        rows: subopts.rows,\n                        colOrder: subopts.colOrder,\n                        rowOrder: subopts.rowOrder,\n                        vals: aggVals,\n                        exclusions,\n                        inclusions,\n                        aggregator: subopts.aggregator,\n                        inclusionsInfo: inclusions, //duplicated for backwards-compatibility\n                        aggregatorName: subopts.aggregatorName,\n                        rendererName: renderer.val(),\n                    },\n                );\n\n                const currentPivotData = subopts.pivotData;\n                delete subopts.pivotData;\n                this.data('pivotUIOptions', pivotUIOptions);\n\n                // if requested, make sure unused columns are in alphabetical order\n                if (opts.autoSortUnusedAttrs) {\n                    const unusedAttrsContainer = this.find('td.pvtUnused.pvtAxisContainer');\n                    $(unusedAttrsContainer).children('li')\n                        .sort((a, b) => naturalSort($(a).text(), $(b).text()))\n                        .appendTo(unusedAttrsContainer);\n                }\n\n                pivotTable.css('opacity', 1);\n                if (opts.onRefresh != null) {\n                    return opts.onRefresh(pivotUIOptions, currentPivotData);\n                }\n            };\n\n            const refresh = () => {\n                pivotTable.css('opacity', 0.5);\n                return setTimeout(refreshDelayed, 10);\n            };\n\n            for (x of opts.cols) {\n                this.find('.pvtCols').append(this.find(`.axis_${$.inArray(x, shownInDragDrop)}`));\n            }\n            for (x of opts.rows) {\n                this.find('.pvtRows').append(this.find(`.axis_${$.inArray(x, shownInDragDrop)}`));\n            }\n            if (opts.aggregatorName != null) {\n                if (opts.multiple) {\n                    opts.aggregatorName = Array.isArray(opts.aggregatorName) ? opts.aggregatorName : [opts.aggregatorName];\n                    for (let idx = 0; idx < opts.aggregatorName.length; idx++) {\n                        const agg = opts.aggregatorName[idx];\n                        aggregators.push({\n                            id: ++itemsId,\n                            value: agg,\n                            vals: (opts.vals != null ? opts.vals[idx] : undefined),\n                        });\n                        renameAggregators(aggregators);\n                    }\n                } else {\n                    this.find('.pvtVals').append(this.find('.pvtAttrDropdown'));\n                    this.find('.pvtAggregator').val(opts.aggregatorName).change();\n                }\n            } else {\n                this.find('.pvtAggregator').change();\n            }\n            if (opts.rendererName != null) {\n                this.find('.pvtRenderer').val(opts.rendererName);\n            }\n\n            if (!opts.showUI) {\n                this.find('.pvtUiCell').hide();\n            }\n\n            //the very first refresh will actually display the table\n            refresh();\n\n            this.find('.pvtAxisContainer').sortable({\n                update(e, ui) {\n                    if ((ui.sender == null)) {\n                        return refresh();\n                    }\n                },\n                connectWith: this.find('.pvtAxisContainer'),\n                items: 'li',\n                placeholder: 'pvtPlaceholder',\n            });\n        } catch (error) {\n            console.error(error);\n            this.html(opts.localeStrings.uiRenderError);\n        }\n        return this;\n    };\n\n    /*\n    Heatmap post-processing\n    */\n\n    $.fn.heatmap = function (scope, opts) {\n        if (scope == null) {\n            scope = 'heatmap';\n        }\n        const numRows = this.data('numrows');\n        const numCols = this.data('numcols');\n\n        // given a series of values\n        // must return a function to map a given value to a CSS color\n        let colorScaleGenerator = opts?.heatmap?.colorScaleGenerator;\n        if (colorScaleGenerator == null) {\n            colorScaleGenerator = function (values) {\n                const min = Math.min(...(values || []));\n                const max = Math.max(...(values || []));\n                return function (x) {\n                    const nonRed = 255 - Math.round((255 * (x - min)) / (max - min));\n                    return `rgb(255,${nonRed},${nonRed})`;\n                };\n            };\n        }\n\n        const heatmapper = scope => {\n            const forEachCell = f => {\n                return this.find(scope).each(function () {\n                    const x = $(this).data('value');\n                    if ((x != null) && isFinite(x)) {\n                        return f(x, $(this));\n                    }\n                });\n            };\n\n            const values = [];\n            forEachCell(x => values.push(x));\n            const colorScale = colorScaleGenerator(values);\n            return forEachCell((x, elem) => elem.css('background-color', colorScale(x)));\n        };\n\n        switch (scope) {\n            case 'heatmap':\n                heatmapper('.pvtVal');\n                break;\n            case 'rowheatmap':\n                for (let i = 0, end = numRows, asc = 0 <= end; asc ? i < end : i > end; asc ? i++ : i--) {\n                    heatmapper(`.pvtVal.row${i}`);\n                }\n                break;\n            case 'colheatmap':\n                for (let j = 0, end1 = numCols, asc1 = 0 <= end1; asc1 ? j < end1 : j > end1; asc1 ? j++ : j--) {\n                    heatmapper(`.pvtVal.col${j}`);\n                }\n                break;\n        }\n\n        heatmapper('.pvtTotal.rowTotal');\n        heatmapper('.pvtTotal.colTotal');\n\n        return this;\n    };\n\n    /*\n    Barchart post-processing\n    */\n\n    $.fn.barchart = function (opts) {\n        const numRows = this.data('numrows');\n        const numCols = this.data('numcols');\n\n        const barcharter = scope => {\n            const forEachCell = f => {\n                return this.find(scope).each(function () {\n                    const x = $(this).data('value');\n                    if ((x != null) && isFinite(x)) {\n                        return f(x, $(this));\n                    }\n                });\n            };\n\n            const values = [];\n            forEachCell(x => values.push(x));\n            let max = Math.max(...(values || []));\n            if (max < 0) {\n                max = 0;\n            }\n            let range = max;\n            const min = Math.min(...(values || []));\n            if (min < 0) {\n                range = max - min;\n            }\n            const scaler = x => (100 * x) / (1.4 * range);\n            return forEachCell(function (x, elem) {\n                const text = elem.text();\n                const wrapper = $('<div>').css({\n                    'position': 'relative',\n                    'height': '55px',\n                });\n                let bgColor = 'gray';\n                let bBase = 0;\n                if (min < 0) {\n                    bBase = scaler(-min);\n                }\n                if (x < 0) {\n                    bBase += scaler(x);\n                    bgColor = 'darkred';\n                    x = -x;\n                }\n                wrapper.append($('<div>').css({\n                        'position': 'absolute',\n                        'bottom': bBase + '%',\n                        'left': 0,\n                        'right': 0,\n                        'height': scaler(x) + '%',\n                        'background-color': bgColor,\n                    }),\n                );\n                wrapper.append($('<div>').text(text).css({\n                        'position': 'relative',\n                        'padding-left': '5px',\n                        'padding-right': '5px',\n                    }),\n                );\n\n                return elem.css({ 'padding': 0, 'padding-top': '5px', 'text-align': 'center' }).html(wrapper);\n            });\n        };\n\n        for (let i = 0, end = numRows, asc = 0 <= end; asc ? i < end : i > end; asc ? i++ : i--) {\n            barcharter(`.pvtVal.row${i}`);\n        }\n        barcharter('.pvtTotal.colTotal');\n\n        return this;\n    };\n\n    /*\n    Grouping fold/expand rows and cols\n    */\n\n    const childIndex = el => Array.prototype.indexOf.call(el.parentNode.children, el);\n\n    const childKeysIndices = function (keys, n) {\n        const up = keys[0].length === 1 ? 1 : -1;\n        const len = keys[n].length;\n\n        const result = [];\n        n = n + up;\n        let key = keys[n];\n        while (key && key.length > len) {\n            if (key.length === (len + 1)) {\n                result.push(n);\n            } else {\n                continue;\n            }\n            n = n + up;\n            key = keys[n];\n        }\n        return result;\n    };\n\n    const parentKeysIndices = function (keys, n) {\n        const up = keys[0].length === 1 ? 1 : -1;\n        const result = [];\n        let len = keys[n].length;\n        while (len > 1) {\n            let key;\n            n = n - up;\n            key = keys[n];\n            while (key && key.length >= len) {\n                n = n - up;\n                key = keys[n];\n            }\n            result.push(n);\n\n            len = keys[n].length;\n        }\n        return result;\n    };\n\n    const levelKeysIndices = (keys, level) => (keys.filter(d => d.length === level)).map(keys.indexOf.bind(keys));\n\n    const getAxis = function (table, rows, level) {\n        if (rows) {\n            return table.find(`thead tr:last-child th.pvtAxisLabel:nth-of-type(${level})`);\n        } else {\n            return table.find(`thead tr:nth-child(${level}) th.pvtAxisLabel`);\n        }\n    };\n\n    const getHeader = (table, rows, n) => table.find(rows ? `tbody tr th.row${n}` : `thead th.col${n}`);\n\n    const rowGetter = function (table) {\n        const selecttion = table.find('tbody tr');\n        return n => $(selecttion[n]);\n    };\n\n    const colGetter = function (table) {\n        const selecttion = table.find('tr');\n        return n => selecttion.find(`.col${n}`);\n    };\n\n    const showHide = function (getter, keys, nth, offset, show) {\n        const object = childKeysIndices(keys, nth);\n        for (let i in object) {\n            const n = object[i];\n            const row = getter(n + offset);\n            const fn = show ? $.fn.show : $.fn.hide;\n            fn.call(row);\n            if (!row.hasClass('collapsed')) {\n                showHide(getter, keys, n, offset, show);\n            }\n        }\n        return true;\n    };\n\n    const expandRowsGroupAfter = function (cell, rows, keys, nth) {\n        const table = $(cell).closest('table');\n        const initIndex = childIndex(cell.parentNode);\n        const getter = rowGetter(table);\n        const row = getter(nth);\n\n        const insertPoint = row.hasClass('collapsed') ? getter(cell._old) : row;\n        if (!row.hasClass('collapsed')) {\n            cell._old = childIndex(cell.parentNode);\n        }\n        insertPoint.prepend(cell);\n\n        const object = parentKeysIndices(keys, nth);\n        for (let i in object) {\n            const p = object[i];\n            const parent = (getHeader(table, rows, p))[0];\n            const parentIndex = childIndex(parent.parentNode);\n            parent._old = parent._old != null ? parent._old : parentIndex;\n            if ((parent._old === initIndex) && (parent.rowSpan === 1)) {\n                parent._old -= initIndex - childIndex(cell.parentNode);\n            }\n\n            if (initIndex === parentIndex) {\n                insertPoint.prepend(parent);\n            }\n        }\n\n        return expandWithSpan(cell, rows, keys, nth);\n    };\n\n    const expandRowCol = function (cell, rows, keys, nth, parent) {\n        const table = $(cell).closest('table');\n        const getter = rows ? rowGetter(table) : colGetter(table);\n        const span = rows ? 'rowSpan' : 'colSpan';\n\n        const offset = rows && (this.aggregator.length > 1) ? 1 : 0;\n        if ((parent != null ? parent[span] : undefined) !== 1) {\n            showHide(getter, keys, nth, offset, getter(nth + offset).hasClass('collapsed'));\n        }\n        getter(nth + offset).toggleClass('collapsed');\n        return $(cell).toggleClass('open close');\n    };\n\n    const expandAll = function (pivotData, table, level, rows, expand) {\n        let i;\n        if (expand && (level > 1)) {\n            getAxis(table, rows, level - 1).removeClass('close').addClass('open');\n            expandAll(pivotData, table, level - 1, rows, expand);\n        }\n\n        const levels = (rows ? pivotData.rowAttrs : pivotData.colAttrs).length - 1;\n        if (!expand && (level < levels)) {\n            let asc, end, start;\n            for (start = level + 1, i = start, end = levels, asc = start <= end; asc ? i <= end : i >= end; asc ? i++ : i--) {\n                getAxis(table, rows, i).removeClass('open').addClass('close');\n            }\n        }\n\n        const keys = rows ? pivotData.rowKeys : pivotData.colKeys;\n        const object = levelKeysIndices(keys, level);\n        for (i in object) {\n            const n = object[i];\n            const el = getHeader(table, rows, n);\n            if (expand === el.hasClass('close')) {\n                el.trigger('click');\n            }\n        }\n        return null;\n    };\n\n    const getExpandHandler = (keys, rows, handler) => (function (ev) {\n        const match = ev.target.className.match(rows ? /row(\\d+)/ : /col(\\d+)/);\n        if (match) {\n            return handler(ev.target, rows, keys, +match[1]);\n        }\n    });\n\n    return getExpandAllHandler = (pivotData, level, rows) => (function (ev) {\n        expandAll(pivotData, $(ev.target).closest('table'), level + 1, rows, $(ev.target).hasClass('close'));\n        return $(ev.target).toggleClass('open close');\n    });\n})(jQuery);\n\n"]}