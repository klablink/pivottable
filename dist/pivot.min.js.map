{"version":3,"sources":["pivot.js"],"names":["$","expandWithSpan","cell","rows","keys","nth","i","table","closest","span","dft","Math","max","this","aggregator","length","_ref","_span","change","object","parentKeysIndices","parent","p","getHeader","expandRowCol","numberFormat","opts","extend","digitsAfterDecimal","scaler","thousandsSep","decimalSep","prefix","suffix","x","isNaN","isFinite","result","nStr","split","x1","x2","rgx","test","replace","toFixed","localeGlobal","cellRenderers","text","value","document","createTextNode","byType","def","type","apply","arguments","toDate","date","Date","toLocaleDateString","year","month","day","e","pivotUtilities","usFmt","usFmtInt","usFmtPct","aggregatorTemplates","count","formatter","data","rowKey","colKey","push","format","uniques","fn","attr","_slicedToArray","undefined","uniq","record","includes","numInputs","sum","parseFloat","extremes","mode","val","sorter","getSort","sorters","quantile","q","vals","sort","a","b","floor","ceil","runningStat","ddof","n","m","s","m_new","sqrt","sumOverSum","_ref13","num","denom","sumNum","sumDenom","sumOverSumBound80","upper","_ref15","sign","fractionOf","wrapped","_len","Array","_key","selector","total","row","col","inner","_toConsumableArray","id","agg","getAggregator","concat","makeAggregators","fmt","fmtInt","fmtPct","Count","Count Unique Values","countUnique","List Unique Values","listUnique","Sum","Integer Sum","Average","average","Median","median","Sample Variance","var","Sample Standard Deviation","stdev","Minimum","min","Maximum","First","first","Last","last","Sum over Sum","80% Upper Bound","80% Lower Bound","Sum as Fraction of Total","Sum as Fraction of Rows","Sum as Fraction of Columns","Count as Fraction of Total","Count as Fraction of Rows","Count as Fraction of Columns","f","naturalSort","join","defaultAggregators","renderers","Table","pivotTableRenderer","Table Barchart","barchart","Heatmap","heatmap","Row Heatmap","Col Heatmap","locales","en","formatters","formatInt","formatPct","localeStrings","renderError","computeError","uiRenderError","selectAll","selectNone","tooMany","filterResults","cancel","totals","vs","by","rendererLabel","valuesLabel","fieldsLabel","colsLabel","rowsLabel","groupsLabel","_i","_Object$keys","Object","zeroPad","number","substr","mthNamesEn","dayNamesEn","derivers","bin","binWidth","dateFormat","formatString","utcOutput","mthNames","dayNames","utc","parse","rx","rd","rz","as","bs","nulls_first","nf","nas","nbs","String","match","a1","shift","b1","isFunction","filterByLength","filter","subarrays","array","map","d","slice","renameAggregators","aggregators","displayName","fromCharCode","toUpperCase","PivotData","input","_this","_classCallCheck","arrSort","bind","sortKeys","getColKeys","getRowKeys","isArray","aggregatorName","colAttrs","cols","rowAttrs","valAttrs","rowOrder","colOrder","derivedAttributes","tree","rowKeys","colKeys","rowTotals","colTotals","allTotal","sorted","aggregatorsLabel","grouping","rowGroupBefore","colGroupBefore","forEachRecord","processRecord","entries","forEach","_ref16","_ref17","key","toISOString","_createClass","criteria","callback","_this2","k","attrs","_step","sortersArr","_iterator","_createForOfIteratorHelper","done","err","_i2","_Object$keys2","comparison","_this3","v","r","c","all_keys","_step2","_this4","_iterator2","_step3","_iterator3","_loop","j","flatRowKey","result1","_loop2","flatColKey","tblCols","addRecord","isEmptyObject","left","_i3","_Object$keys3","compactRecord","_i4","_Object$keys4","_step4","_iterator4","each","Error","pivotData","getClickHandler","totalAggregator","defaults","clickCallback","typeCellRenderer","headCellRenderer","dataCellRenderer","compactLayout","rowValues","colValues","filters","_i5","_Object$keys5","_i6","_Object$keys6","rowExpandHandler","expandRowsGroupAfter","rowsExpandHandler","getExpandHandler","colsExpandHandler","createElement","spanSize","className","arr","noDraw","end","asc","len","end1","stop","asc1","thead","_i7","_Object$keys7","tr","parseInt","th","setAttribute","appendChild","onclick","getExpandAllHandler","_i8","_Object$keys8","innerHTML","_i9","_Object$keys9","tbody","lbl","colspan","_i10","_Object$keys10","_step5","_iterator5","textContent","_step6","_iterator6","_i11","_Object$keys11","rowGap","_i12","_Object$keys12","txt","colSpan","style","paddingLeft","_totalAggregator","_i13","_Object$keys13","td","_aggregator","append","_totalAggregator2","_totalAggregator3","_i14","_Object$keys14","sortAs","order","mapping","l_mapping","toLowerCase","pivot","inputOpts","locale","dataClass","renderer","rendererOptions","error","console","stack","html","error1","hasChildNodes","removeChild","lastChild","pivotUI","overwrite","_this5","hiddenAttributes","hiddenFromAggregators","hiddenFromDragDrop","menuLimit","exclusions","inclusions","unusedAttrsVertical","autoSortUnusedAttrs","onRefresh","showUI","multiple","parametersActive","itemsId","localeDefaults","existingOpts","attrValues","materializedInput","recordsProcessed","uiContainer","_i15","_Object$keys15","addClass","uiMenu","uiParameters","uiPivotContainer","uiButtonColumns","on","show","removeClass","hide","appendTo","uiButtonGroups","refresh","pvtRenderType","_i16","_Object$keys16","unused","shownAttributes","shownInAggregators","_i17","_shownAttributes","shownInDragDrop","_i18","_shownAttributes2","unusedAttrsVerticalAutoCutoff","_step7","_iterator7","unusedAttrsVerticalAutoOverride","_loop3","_Object$keys17","_i19","values","hasExcludedItem","valueList","controls","placeholder","class","accept_gen","accepted","real_filter","substring","trim","needle","accept","indexOf","find","prop","toggleClass","_step8","checkContainer","_iterator8","valueCount","filterItem","filterItemExcluded","closeFilterBox","attrElem","finalButtons","triangleLink","_$$position","currentTarget","position","top","css","divAggregator","remove","_i20","_Object$keys18","role","_step9","ordering","key_a_to_z","rowSymbol","colSymbol","next","value_a_to_z","value_z_to_a","rowOrderArrow","colOrderArrow","pvVals","pivotTable","initialRender","refreshDelayed","subopts","numInputsToProcess","aggVals","idx","_loop4","aggregatorType","labelAggregator","aggIdx","_typeof","initialVals","pvtVals","container","found","newDropdown","_i21","_shownInAggregators","_this6","instance","findIndex","splice","unusedAttrsContainer","not","pivotUIOptions","inclusionsInfo","rendererName","currentPivotData","children","setTimeout","_iterator9","inArray","_step10","_iterator10","sortable","update","ui","sender","connectWith","items","scope","heatmapper","forEachCell","_this7","colorScale","colorScaleGenerator","elem","numRows","numCols","_opts$heatmap","nonRed","round","_this8","barcharter","range","wrapper","height","bgColor","bBase","bottom","right","background-color","padding-left","padding-right","padding","padding-top","text-align","childIndex","el","prototype","call","parentNode","rowGetter","selecttion","showHide","getter","offset","childKeysIndices","hasClass","expandAll","level","expand","getAxis","levels","start","levelKeysIndices","trigger","up","initIndex","insertPoint","_old","prepend","parentIndex","rowSpan","handler","ev","target","jQuery"],"mappings":"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","file":"pivot.min.js","sourcesContent":["// TODO: This file was created by bulk-decaffeinate.\n// Sanity-check the conversion and remove this comment.\n// noinspection JSUnresolvedReference\n\n/*\n * decaffeinate suggestions:\n * DS201: Simplify complex destructure assignments\n * DS202: Simplify dynamic range loops\n * DS203: Remove `|| {}` from converted for-own loops\n * DS204: Change includes calls to have a more natural evaluation order\n * DS205: Consider reworking code to avoid use of IIFEs\n * DS207: Consider shorter variations of null checks\n * Full docs: https://github.com/decaffeinate/decaffeinate/blob/main/docs/suggestions.md\n */\n\n(function ($) {\n\n    const expandWithSpan = function (cell, rows, keys, nth) {\n        let parent;\n        const table = $(cell).closest('table');\n        const span = rows ? 'rowSpan' : 'colSpan';\n\n        const dft = !rows ? Math.max(1, this.aggregator.length) : 1;\n        [cell._span, cell[span]] = [cell[span], cell._span != null ? cell._span : dft];\n        const change = cell[span] - cell._span;\n\n        const object = parentKeysIndices(keys, nth);\n        for (let i in object) {\n            const p = object[i];\n            parent = (getHeader(table, rows, p))[0];\n            if (parent[span] === 1) {\n                parent._span += change;\n                break;\n            }\n            parent[span] += change;\n        }\n\n        return expandRowCol(cell, rows, keys, nth, parent);\n    };\n    /*\n        Utilities\n        */\n\n    let getExpandAllHandler;\n    let localeGlobal = 'en';\n\n    const addSeparators = function (nStr, thousandsSep, decimalSep) {\n        nStr += '';\n        const x = nStr.split('.');\n        let x1 = x[0];\n        const x2 = x.length > 1 ? decimalSep + x[1] : '';\n        const rgx = /(\\d+)(\\d{3})/;\n        while (rgx.test(x1)) {\n            x1 = x1.replace(rgx, '$1' + thousandsSep + '$2');\n        }\n        return x1 + x2;\n    };\n\n    const numberFormat = function (opts) {\n        const defaults = {\n            digitsAfterDecimal: 2, scaler: 1,\n            thousandsSep: ',', decimalSep: '.',\n            prefix: '', suffix: '',\n        };\n        opts = $.extend({}, defaults, opts);\n        return function (x) {\n            if (isNaN(x) || !isFinite(x)) {\n                return '';\n            }\n            const result = addSeparators((opts.scaler * x).toFixed(opts.digitsAfterDecimal), opts.thousandsSep, opts.decimalSep);\n            return '' + opts.prefix + result + opts.suffix;\n        };\n    };\n\n    const cellRenderers = {\n        text: function (value) {\n            value = value || '';\n            return document.createTextNode(value);\n        },\n        byType: function (opts, def) {\n            return function (value, type) {\n                return (opts[type] || def || cellRenderers.text).apply(this, arguments);\n            };\n        },\n        toDate(value, opts) {\n            let date = '';\n\n            if (value) {\n                try {\n                    const options = { year: 'numeric', month: '2-digit', day: '2-digit' };\n                    date = (new Date(value)).toLocaleDateString(localeGlobal, options);\n                } catch (e) {\n                    date = value;\n                }\n            }\n\n            return $.pivotUtilities.cellRenderers.text(date);\n        },\n    };\n\n    //aggregator templates default to US number formatting, but this is overrideable\n    const usFmt = numberFormat();\n    const usFmtInt = numberFormat({ digitsAfterDecimal: 0 });\n    const usFmtPct = numberFormat({ digitsAfterDecimal: 1, scaler: 100, suffix: '%' });\n\n    const aggregatorTemplates = {\n        count(formatter) {\n            if (formatter == null) {\n                formatter = usFmtInt;\n            }\n            return () => (function (data, rowKey, colKey) {\n                return {\n                    count: 0,\n                    push() {\n                        return this.count++;\n                    },\n                    value() {\n                        return this.count;\n                    },\n                    format: formatter,\n                };\n            });\n        },\n\n        uniques(fn, formatter) {\n            if (formatter == null) {\n                formatter = usFmtInt;\n            }\n            return function (...args) {\n                const [attr] = args[0];\n                return function (data, rowKey, colKey) {\n                    return {\n                        attr,\n                        uniq: [],\n                        push(record) {\n                            if (!this.uniq.includes(record[attr])) {\n                                return this.uniq.push(record[attr]);\n                            }\n                        },\n                        value() {\n                            return fn(this.uniq);\n                        },\n                        format: formatter,\n                        numInputs: (attr != null) ? 0 : 1,\n                    };\n                };\n            };\n        },\n\n        sum(formatter) {\n            if (formatter == null) {\n                formatter = usFmt;\n            }\n            return function (...args) {\n                const [attr] = args[0];\n                return function (data, rowKey, colKey) {\n                    return {\n                        attr,\n                        sum: 0,\n                        push(record) {\n                            if (!isNaN(parseFloat(record[attr]))) {\n                                return this.sum += parseFloat(record[attr]);\n                            }\n                        },\n                        value() {\n                            return this.sum;\n                        },\n                        format: formatter,\n                        numInputs: (attr != null) ? 0 : 1,\n                    };\n                };\n            };\n        },\n\n        extremes(mode, formatter) {\n            if (formatter == null) {\n                formatter = usFmt;\n            }\n            return function (...args) {\n                const [attr] = args[0];\n                return function (data, rowKey, colKey) {\n                    return {\n                        attr,\n                        val: null,\n                        sorter: getSort(data != null ? data.sorters : undefined, attr),\n                        push(record) {\n                            let x = record[attr];\n                            if (['min', 'max'].includes(mode)) {\n                                x = parseFloat(x);\n                                if (!isNaN(x)) {\n                                    this.val = Math[mode](x, this.val != null ? this.val : x);\n                                }\n                            }\n                            if (mode === 'first') {\n                                if (this.sorter(x, this.val != null ? this.val : x) <= 0) {\n                                    this.val = x;\n                                }\n                            }\n                            if (mode === 'last') {\n                                if (this.sorter(x, this.val != null ? this.val : x) >= 0) {\n                                    return this.val = x;\n                                }\n                            }\n                        },\n                        value() {\n                            return this.val;\n                        },\n                        format(x) {\n                            if (isNaN(x)) {\n                                return x;\n                            } else {\n                                return formatter(x);\n                            }\n                        },\n                        numInputs: (attr != null) ? 0 : 1,\n                    };\n                };\n            };\n        },\n\n        quantile(q, formatter) {\n            if (formatter == null) {\n                formatter = usFmt;\n            }\n            return function (...args) {\n                const [attr] = args[0];\n                return function (data, rowKey, colKey) {\n                    return {\n                        attr,\n                        vals: [],\n                        push(record) {\n                            const x = parseFloat(record[attr]);\n                            if (!isNaN(x)) {\n                                return this.vals.push(x);\n                            }\n                        },\n                        value() {\n                            if (this.vals.length === 0) {\n                                return null;\n                            }\n                            this.vals.sort((a, b) => a - b);\n                            const i = (this.vals.length - 1) * q;\n                            return (this.vals[Math.floor(i)] + this.vals[Math.ceil(i)]) / 2.0;\n                        },\n                        format: formatter,\n                        numInputs: (attr != null) ? 0 : 1,\n                    };\n                };\n            };\n        },\n\n        runningStat(mode, ddof, formatter) {\n            if (mode == null) {\n                mode = 'mean';\n            }\n            if (ddof == null) {\n                ddof = 1;\n            }\n            if (formatter == null) {\n                formatter = usFmt;\n            }\n            return function (...args) {\n                const [attr] = args[0];\n                return function (data, rowKey, colKey) {\n                    return {\n                        attr,\n                        n: 0.0, m: 0.0, s: 0.0,\n                        push(record) {\n                            const x = parseFloat(record[attr]);\n                            if (isNaN(x)) {\n                                return;\n                            }\n                            this.n += 1.0;\n                            if (this.n === 1.0) {\n                                return this.m = x;\n                            } else {\n                                const m_new = this.m + ((x - this.m) / this.n);\n                                this.s = this.s + ((x - this.m) * (x - m_new));\n                                return this.m = m_new;\n                            }\n                        },\n                        value() {\n                            if (mode === 'mean') {\n                                if (this.n === 0) {\n                                    return 0 / 0;\n                                } else {\n                                    return this.m;\n                                }\n                            }\n                            if (this.n <= ddof) {\n                                return 0;\n                            }\n                            switch (mode) {\n                                case 'var':\n                                    return this.s / (this.n - ddof);\n                                case 'stdev':\n                                    return Math.sqrt(this.s / (this.n - ddof));\n                            }\n                        },\n                        format: formatter,\n                        numInputs: (attr != null) ? 0 : 1,\n                    };\n                };\n            };\n        },\n\n        sumOverSum(formatter) {\n            if (formatter == null) {\n                formatter = usFmt;\n            }\n            return function (...args) {\n                const [num, denom] = args[0];\n                return function (data, rowKey, colKey) {\n                    return {\n                        sumNum: 0,\n                        sumDenom: 0,\n                        push(record) {\n                            if (!isNaN(parseFloat(record[num]))) {\n                                this.sumNum += parseFloat(record[num]);\n                            }\n                            if (!isNaN(parseFloat(record[denom]))) {\n                                return this.sumDenom += parseFloat(record[denom]);\n                            }\n                        },\n                        value() {\n                            return this.sumNum / this.sumDenom;\n                        },\n                        format: formatter,\n                        numInputs: (num != null) && (denom != null) ? 0 : 2,\n                    };\n                };\n            };\n        },\n\n        sumOverSumBound80(upper, formatter) {\n            if (upper == null) {\n                upper = true;\n            }\n            if (formatter == null) {\n                formatter = usFmt;\n            }\n            return function (...args) {\n                const [num, denom] = args[0];\n                return function (data, rowKey, colKey) {\n                    return {\n                        sumNum: 0,\n                        sumDenom: 0,\n                        push(record) {\n                            if (!isNaN(parseFloat(record[num]))) {\n                                this.sumNum += parseFloat(record[num]);\n                            }\n                            if (!isNaN(parseFloat(record[denom]))) {\n                                return this.sumDenom += parseFloat(record[denom]);\n                            }\n                        },\n                        value() {\n                            const sign = upper ? 1 : -1;\n                            return ((0.821187207574908 / this.sumDenom) + (this.sumNum / this.sumDenom) + (1.2815515655446004 * sign *\n                                    Math.sqrt((0.410593603787454 / (this.sumDenom * this.sumDenom)) + ((this.sumNum * (1 - (this.sumNum / this.sumDenom))) / (this.sumDenom * this.sumDenom))))) /\n                                (1 + (1.642374415149816 / this.sumDenom));\n                        },\n                        format: formatter,\n                        numInputs: (num != null) && (denom != null) ? 0 : 2,\n                    };\n                };\n            };\n        },\n\n        fractionOf(wrapped, type, formatter) {\n            if (type == null) {\n                type = 'total';\n            }\n            if (formatter == null) {\n                formatter = usFmtPct;\n            }\n            return (...x) => (function (data, rowKey, colKey) {\n                return {\n                    selector: { total: [[], []], row: [rowKey, []], col: [[], colKey] }[type],\n                    inner: wrapped(...(x || []))(data, rowKey, colKey),\n                    push(record) {\n                        return this.inner.push(record);\n                    },\n                    format: formatter,\n                    value(id) {\n                        const agg = data.getAggregator(...([...this.selector, id] || []));\n                        return this.inner.value() / agg.inner.value();\n                    },\n                    numInputs: wrapped(...(x || []))().numInputs,\n                };\n            });\n        },\n    };\n\n    aggregatorTemplates.countUnique = f => aggregatorTemplates.uniques((x => x.length), f);\n    aggregatorTemplates.listUnique = s => aggregatorTemplates.uniques((x => x.sort(naturalSort).join(s)), (x => x));\n    aggregatorTemplates.max = f => aggregatorTemplates.extremes('max', f);\n    aggregatorTemplates.min = f => aggregatorTemplates.extremes('min', f);\n    aggregatorTemplates.first = f => aggregatorTemplates.extremes('first', f);\n    aggregatorTemplates.last = f => aggregatorTemplates.extremes('last', f);\n    aggregatorTemplates.median = f => aggregatorTemplates.quantile(0.5, f);\n    aggregatorTemplates.average = f => aggregatorTemplates.runningStat('mean', 1, f);\n    aggregatorTemplates.var = (ddof, f) => aggregatorTemplates.runningStat('var', ddof, f);\n    aggregatorTemplates.stdev = (ddof, f) => aggregatorTemplates.runningStat('stdev', ddof, f);\n\n    function makeAggregators(fmt, fmtInt, fmtPct) {\n        return {\n            'Count': aggregatorTemplates.count(fmtInt),\n            'Count Unique Values': aggregatorTemplates.countUnique(fmtInt),\n            'List Unique Values': aggregatorTemplates.listUnique(', '),\n            'Sum': aggregatorTemplates.sum(fmt),\n            'Integer Sum': aggregatorTemplates.sum(fmtInt),\n            'Average': aggregatorTemplates.average(fmt),\n            'Median': aggregatorTemplates.median(fmt),\n            'Sample Variance': aggregatorTemplates.var(1, fmt),\n            'Sample Standard Deviation': aggregatorTemplates.stdev(1, fmt),\n            'Minimum': aggregatorTemplates.min(fmt),\n            'Maximum': aggregatorTemplates.max(fmt),\n            'First': aggregatorTemplates.first(fmt),\n            'Last': aggregatorTemplates.last(fmt),\n            'Sum over Sum': aggregatorTemplates.sumOverSum(fmt),\n            '80% Upper Bound': aggregatorTemplates.sumOverSumBound80(true, fmt),\n            '80% Lower Bound': aggregatorTemplates.sumOverSumBound80(false, fmt),\n            'Sum as Fraction of Total': aggregatorTemplates.fractionOf(aggregatorTemplates.sum(), 'total', fmtPct),\n            'Sum as Fraction of Rows': aggregatorTemplates.fractionOf(aggregatorTemplates.sum(), 'row', fmtPct),\n            'Sum as Fraction of Columns': aggregatorTemplates.fractionOf(aggregatorTemplates.sum(), 'col', fmtPct),\n            'Count as Fraction of Total': aggregatorTemplates.fractionOf(aggregatorTemplates.count(), 'total', fmtPct),\n            'Count as Fraction of Rows': aggregatorTemplates.fractionOf(aggregatorTemplates.count(), 'row', fmtPct),\n            'Count as Fraction of Columns': aggregatorTemplates.fractionOf(aggregatorTemplates.count(), 'col', fmtPct),\n        };\n    }\n\n    //default aggregators & renderers use US naming and number formatting\n    const defaultAggregators = makeAggregators(usFmt, usFmtInt, usFmtPct);\n\n    const renderers = {\n        'Table'(data, opts) {\n            return pivotTableRenderer(data, opts);\n        },\n        'Table Barchart'(data, opts) {\n            return $(pivotTableRenderer(data, opts)).barchart();\n        },\n        'Heatmap'(data, opts) {\n            return $(pivotTableRenderer(data, opts)).heatmap('heatmap', opts);\n        },\n        'Row Heatmap'(data, opts) {\n            return $(pivotTableRenderer(data, opts)).heatmap('rowheatmap', opts);\n        },\n        'Col Heatmap'(data, opts) {\n            return $(pivotTableRenderer(data, opts)).heatmap('colheatmap', opts);\n        },\n    };\n\n    const locales = {\n        en: {\n            formatters: {\n                format: usFmt,\n                formatInt: usFmtInt,\n                formatPct: usFmtPct,\n            },\n            renderers,\n            localeStrings: {\n                renderError: 'An error occurred rendering the PivotTable results.',\n                computeError: 'An error occurred computing the PivotTable results.',\n                uiRenderError: 'An error occurred rendering the PivotTable UI.',\n                selectAll: 'Select All',\n                selectNone: 'Select None',\n                tooMany: '(too many to list)',\n                filterResults: 'Filter values',\n                apply: 'Apply',\n                cancel: 'Cancel',\n                totals: 'Totals', //for table renderer\n                vs: 'vs', //for gchart renderer\n                by: 'by', //for gchart renderer\n                rendererLabel: 'Renderer',\n                valuesLabel: 'Values',\n                fieldsLabel: 'Fields',\n                colsLabel: 'Columns',\n                rowsLabel: 'Rows',\n                groupsLabel: 'Groups',\n            },\n        },\n    };\n\n    for (const agg of Object.keys(defaultAggregators)) {\n        locales.en.localeStrings[agg] = agg;\n    }\n\n    //dateFormat deriver l10n requires month and day names to be passed in directly\n    const mthNamesEn = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n    const dayNamesEn = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n    const zeroPad = number => ('0' + number).substr(-2, 2);\n\n    const derivers = {\n        bin(col, binWidth) {\n            return record => record[col] - (record[col] % binWidth);\n        },\n        dateFormat(col, formatString, utcOutput, mthNames, dayNames) {\n            if (utcOutput == null) {\n                utcOutput = false;\n            }\n            if (mthNames == null) {\n                mthNames = mthNamesEn;\n            }\n            if (dayNames == null) {\n                dayNames = dayNamesEn;\n            }\n            const utc = utcOutput ? 'UTC' : '';\n            return function (record) { //thanks http://stackoverflow.com/a/12213072/112871\n                const date = new Date(Date.parse(record[col]));\n                if (isNaN(date)) {\n                    return '';\n                }\n                return formatString.replace(/%(.)/g, function (m, p) {\n                    switch (p) {\n                        case 'y':\n                            return date[`get${utc}FullYear`]();\n                        case 'm':\n                            return zeroPad(date[`get${utc}Month`]() + 1);\n                        case 'n':\n                            return mthNames[date[`get${utc}Month`]()];\n                        case 'd':\n                            return zeroPad(date[`get${utc}Date`]());\n                        case 'w':\n                            return dayNames[date[`get${utc}Day`]()];\n                        case 'x':\n                            return date[`get${utc}Day`]();\n                        case 'H':\n                            return zeroPad(date[`get${utc}Hours`]());\n                        case 'M':\n                            return zeroPad(date[`get${utc}Minutes`]());\n                        case 'S':\n                            return zeroPad(date[`get${utc}Seconds`]());\n                        default:\n                            return '%' + p;\n                    }\n                });\n            };\n        },\n    };\n\n    const rx = /(\\d+)|(\\D+)/g;\n    const rd = /\\d/;\n    const rz = /^0/;\n    const naturalSort = (as, bs, nulls_first) => {\n        //nulls first\n        if (nulls_first == null) {\n            nulls_first = true;\n        }\n        const nf = nulls_first ? 1 : -1;\n        if ((bs != null) && (as == null)) {\n            return -1 * nf;\n        }\n        if ((as != null) && (bs == null)) {\n            return 1 * nf;\n        }\n\n        //then raw NaNs\n        if ((typeof as === 'number') && isNaN(as)) {\n            return -1;\n        }\n        if ((typeof bs === 'number') && isNaN(bs)) {\n            return 1;\n        }\n\n        //numbers and numbery strings group together\n        const nas = +as;\n        const nbs = +bs;\n        if (nas < nbs) {\n            return -1;\n        }\n        if (nas > nbs) {\n            return 1;\n        }\n\n        //within that, true numbers before numbery strings\n        if ((typeof as === 'number') && (typeof bs !== 'number')) {\n            return -1;\n        }\n        if ((typeof bs === 'number') && (typeof as !== 'number')) {\n            return 1;\n        }\n        if ((typeof as === 'number') && (typeof bs === 'number')) {\n            return 0;\n        }\n\n        // 'Infinity' is a textual number, so less than 'A'\n        if (isNaN(nbs) && !isNaN(nas)) {\n            return -1;\n        }\n        if (isNaN(nas) && !isNaN(nbs)) {\n            return 1;\n        }\n\n        //finally, \"smart\" string sorting per http://stackoverflow.com/a/4373421/112871\n        let a = String(as);\n        let b = String(bs);\n        if (a === b) {\n            return 0;\n        }\n        if (!rd.test(a) || !rd.test(b)) {\n            return (a > b ? 1 : -1);\n        }\n\n        //special treatment for strings containing digits\n        a = a.match(rx); //create digits vs. non-digit chunks and iterate through\n        b = b.match(rx);\n        while (a.length && b.length) {\n            const a1 = a.shift();\n            const b1 = b.shift();\n            if (a1 !== b1) {\n                if (rd.test(a1) && rd.test(b1)) { //both are digit chunks\n                    return a1.replace(rz, '.0') - b1.replace(rz, '.0');\n                } else {\n                    return (a1 > b1 ? 1 : -1);\n                }\n            }\n        }\n        return a.length - b.length;\n    };\n\n    const sortAs = function (order) {\n        const mapping = {};\n        const l_mapping = {}; // sort lowercased keys similarly\n        for (let i in order) {\n            const x = order[i];\n            mapping[x] = i;\n            if (typeof x === 'string') {\n                l_mapping[x.toLowerCase()] = i;\n            }\n        }\n        return function (a, b) {\n            if ((mapping[a] != null) && (mapping[b] != null)) {\n                return mapping[a] - mapping[b];\n            } else if (mapping[a] != null) {\n                return -1;\n            } else if (mapping[b] != null) {\n                return 1;\n            } else if ((l_mapping[a] != null) && (l_mapping[b] != null)) {\n                return l_mapping[a] - l_mapping[b];\n            } else if (l_mapping[a] != null) {\n                return -1;\n            } else if (l_mapping[b] != null) {\n                return 1;\n            } else {\n                return naturalSort(a, b);\n            }\n        };\n    };\n\n    function getSort(sorters, attr) {\n        if (sorters != null) {\n            if ($.isFunction(sorters)) {\n                const sort = sorters(attr);\n                if ($.isFunction(sort)) {\n                    return sort;\n                }\n            } else if (sorters[attr] != null) {\n                return sorters[attr];\n            }\n        }\n        return naturalSort;\n    }\n\n    const filterByLength = (keys, length) => keys.filter(x => x.length === length);\n\n    const subarrays = array => array.map((d, i) => array.slice(0, i + 1));  // [1,2,3] => [[1], [1,2], [1,2,3]]\n\n    function normalizeData(data) {\n        Object.entries(data).forEach(([key, value]) => {\n            if (value instanceof Date) {\n                data[key] = value.toISOString();\n            }\n        })\n\n        return data;\n    }\n\n    /*\n    Data Model class\n    */\n\n    class PivotData {\n        constructor(input, opts) {\n            this.arrSort = this.arrSort.bind(this);\n            this.sortKeys = this.sortKeys.bind(this);\n            this.getColKeys = this.getColKeys.bind(this);\n            this.getRowKeys = this.getRowKeys.bind(this);\n            this.getAggregator = this.getAggregator.bind(this);\n            if (opts == null) {\n                opts = {};\n            }\n            this.input = input;\n            if (!Array.isArray(opts.aggregator)) {\n                opts.aggregator = opts.aggregator != null ? opts.aggregator : aggregatorTemplates.count()();\n                opts.aggregator = [opts.aggregator];\n            }\n            this.aggregator = opts.aggregator != null ? opts.aggregator : [aggregatorTemplates.count()()];\n            this.aggregatorName = opts.aggregatorName != null ? opts.aggregatorName : 'Count';\n            this.colAttrs = opts.cols != null ? opts.cols : [];\n            this.rowAttrs = opts.rows != null ? opts.rows : [];\n            this.valAttrs = opts.vals != null ? opts.vals : [];\n            this.sorters = opts.sorters != null ? opts.sorters : {};\n            this.rowOrder = opts.rowOrder != null ? opts.rowOrder : 'key_a_to_z';\n            this.colOrder = opts.colOrder != null ? opts.colOrder : 'key_a_to_z';\n            this.derivedAttributes = opts.derivedAttributes != null ? opts.derivedAttributes : {};\n            this.filter = opts.filter != null ? opts.filter : (() => true);\n            this.tree = {};\n            this.rowKeys = [];\n            this.colKeys = [];\n            this.rowTotals = {};\n            this.colTotals = {};\n            this.allTotal = this.aggregator.map(agg => agg(this, [], []));\n            this.sorted = false;\n            this.aggregatorsLabel = opts.aggregatorsLabel != null ? opts.aggregatorsLabel : [];\n            this.grouping = opts.grouping != null ? opts.grouping : false;\n            this.rowGroupBefore = (opts.grouping != null ? opts.grouping.rowGroupBefore : undefined) != null ? (opts.grouping != null ? opts.grouping.rowGroupBefore : undefined) : true;\n            this.colGroupBefore = (opts.grouping != null ? opts.grouping.colGroupBefore : undefined) != null ? (opts.grouping != null ? opts.grouping.colGroupBefore : undefined) : false;\n\n            // iterate through input, accumulating data for cells\n            PivotData.forEachRecord(this.input, this.derivedAttributes, record => {\n                if (this.filter(record)) {\n                    return this.processRecord(normalizeData(record));\n                }\n            });\n        }\n\n        //can handle arrays or jQuery selections of tables\n        static forEachRecord(input, derivedAttributes, f) {\n            let addRecord;\n            if ($.isEmptyObject(derivedAttributes)) {\n                addRecord = f;\n            } else {\n                addRecord = function (record) {\n                    for (let k in derivedAttributes) {\n                        const v = derivedAttributes[k];\n                        const left = v(record);\n                        if (left != null) {\n                            record[k] = left;\n                        }\n                    }\n                    return f(record);\n                };\n            }\n\n            //if it's a function, have its calls us back\n            if ($.isFunction(input)) {\n                return input(addRecord);\n            } else if ($.isArray(input)) {\n                if ($.isArray(input[0])) { //array of arrays\n                    return (() => {\n                        const result = [];\n                        for (let i of Object.keys(input || {})) {\n                            const compactRecord = input[i];\n                            if (i > 0) {\n                                const record = {};\n                                for (let j of Object.keys(input[0] || {})) {\n                                    const k = input[0][j];\n                                    record[k] = compactRecord[j];\n                                }\n                                result.push(addRecord(record));\n                            }\n                        }\n                        return result;\n                    })();\n                } else { //array of objects\n                    return (() => {\n                        const result1 = [];\n                        for (let record of input) {\n                            result1.push(addRecord(record));\n                        }\n                        return result1;\n                    })();\n                }\n            } else if (input instanceof $) {\n                const tblCols = [];\n                $('thead > tr > th', input).each(function (i) {\n                    return tblCols.push($(this).text());\n                });\n                return $('tbody > tr', input).each(function (i) {\n                    const record = {};\n                    $('td', this).each(function (j) {\n                        return record[tblCols[j]] = $(this).text();\n                    });\n                    return addRecord(record);\n                });\n            } else {\n                throw new Error('unknown input format');\n            }\n        }\n\n        forEachMatchingRecord(criteria, callback) {\n            return PivotData.forEachRecord(this.input, this.derivedAttributes, record => {\n                if (!this.filter(record)) {\n                    return;\n                }\n                for (let k in criteria) {\n                    const v = criteria[k];\n                    if (v !== (record[k] != null ? record[k] : 'null')) {\n                        return;\n                    }\n                }\n                return callback(record);\n            });\n        }\n\n        arrSort(attrs, nulls_first) {\n\n            const sortersArr = [];\n            for (const a of attrs) {\n                sortersArr.push(getSort(this.sorters, a));\n            }\n\n            return function (a, b) {\n                for (let i of Object.keys(sortersArr || {})) {\n                    const sorter = sortersArr[i];\n                    const comparison = sorter(a[i], b[i], nulls_first);\n                    if (comparison !== 0) {\n                        return comparison;\n                    }\n                }\n                return 0;\n            };\n        }\n\n        sortKeys() {\n            if (!this.sorted) {\n                this.sorted = true;\n                const v = (r, c) => this.getAggregator(r, c).value();\n                switch (this.rowOrder) {\n                    case 'value_a_to_z':\n                        this.rowKeys.sort((a, b) => naturalSort(v(a, []), v(b, [])));\n                        break;\n                    case 'value_z_to_a':\n                        this.rowKeys.sort((a, b) => -naturalSort(v(a, []), v(b, [])));\n                        break;\n                    default:\n                        this.rowKeys.sort(this.arrSort(this.rowAttrs, this.rowGroupBefore));\n                }\n                switch (this.colOrder) {\n                    case 'value_a_to_z':\n                        return this.colKeys.sort((a, b) => naturalSort(v([], a), v([], b)));\n                    case 'value_z_to_a':\n                        return this.colKeys.sort((a, b) => -naturalSort(v([], a), v([], b)));\n                    default:\n                        return this.colKeys.sort(this.arrSort(this.colAttrs, this.colGroupBefore));\n                }\n            }\n        }\n\n        getColKeys(all_keys) {\n            if (all_keys == null) {\n                all_keys = false;\n            }\n            this.sortKeys();\n            if (all_keys) {\n                return this.colKeys;\n            } else {\n                return filterByLength(this.colKeys, this.colAttrs.length);\n            }\n        }\n\n        getRowKeys(all_keys) {\n            if (all_keys == null) {\n                all_keys = false;\n            }\n            this.sortKeys();\n            if (all_keys) {\n                return this.rowKeys;\n            } else {\n                return filterByLength(this.rowKeys, this.rowAttrs.length);\n            }\n        }\n\n        processRecord(record) { //this code is called in a tight loop\n            let x;\n            let colKeys = [];\n            let rowKeys = [];\n            for (x of this.colAttrs) {\n                colKeys.push(record[x] != null ? record[x] : 'null');\n            }\n            for (x of this.rowAttrs) {\n                rowKeys.push(record[x] != null ? record[x] : 'null');\n            }\n            colKeys = this.grouping && colKeys.length ? subarrays(colKeys) : [colKeys];\n            rowKeys = this.grouping && rowKeys.length ? subarrays(rowKeys) : [rowKeys];\n\n            this.aggregator.forEach((agg, id) => {\n                return this.allTotal[id].push(record);\n            });\n\n            const result = [];\n            for (let j in rowKeys) {\n                const rowKey = rowKeys[j];\n                const flatRowKey = rowKey.join(String.fromCharCode(0));\n\n                const result1 = [];\n                for (let i in colKeys) {\n                    const colKey = colKeys[i];\n                    const flatColKey = colKey.join(String.fromCharCode(0));\n\n                    if (rowKey.length !== 0) {\n                        if (!this.rowTotals[flatRowKey]) {\n                            this.rowKeys.push(rowKey);\n                            this.rowTotals[flatRowKey] = this.aggregator.map(agg => agg(this, rowKey, []));\n                        }\n                        this.rowTotals[flatRowKey].forEach((agg, id) => {\n                            if (!this.grouping || (colKey.length === 1)) {\n                                return agg.push(record);\n                            }\n                        });\n                    }\n\n                    if (colKey.length !== 0) {\n                        if (!this.colTotals[flatColKey]) {\n                            this.colKeys.push(colKey);\n                            this.colTotals[flatColKey] = this.aggregator.map(agg => agg(this, [], colKey));\n                        }\n                        this.colTotals[flatColKey].forEach((agg, id) => {\n                            if (!this.grouping || (rowKey.length === 1)) {\n                                return agg.push(record);\n                            }\n                        });\n                    }\n\n                    if ((colKey.length !== 0) && (rowKey.length !== 0)) {\n                        if (!this.tree[flatRowKey]) {\n                            this.tree[flatRowKey] = {};\n                        }\n                        if (!this.tree[flatRowKey][flatColKey]) {\n                            this.tree[flatRowKey][flatColKey] = this.aggregator.map(agg => agg(this, rowKey, colKey));\n                        }\n                        result1.push(this.tree[flatRowKey][flatColKey].forEach((agg, id) => agg.push(record)));\n                    } else {\n                        result1.push(undefined);\n                    }\n                }\n                result.push(result1);\n            }\n            return result;\n        }\n\n        getAggregator(rowKey, colKey, id) {\n            let agg;\n            if (id == null) {\n                id = 0;\n            }\n            const flatRowKey = rowKey.join(String.fromCharCode(0));\n            const flatColKey = colKey.join(String.fromCharCode(0));\n            if ((rowKey.length === 0) && (colKey.length === 0)) {\n                agg = this.allTotal[id];\n            } else if (rowKey.length === 0) {\n                agg = this.colTotals[flatColKey] && this.colTotals[flatColKey][id];\n            } else if (colKey.length === 0) {\n                agg = this.rowTotals[flatRowKey] && this.rowTotals[flatRowKey][id];\n            } else {\n                agg = this.tree[flatRowKey][flatColKey] && this.tree[flatRowKey][flatColKey][id];\n            }\n            return agg != null ? agg : {\n                value() {\n                    return null;\n                }, format() {\n                    return '';\n                },\n            };\n        }\n    }\n\n    const renameAggregators = (aggregators) => aggregators.map((agg, id) =>\n        (agg.displayName = String.fromCharCode(97 + id).toUpperCase()));\n\n    //expose these to the outside world\n    $.pivotUtilities = {\n        aggregatorTemplates, aggregators: defaultAggregators, renderers, cellRenderers, derivers, locales,\n        naturalSort, numberFormat, sortAs, PivotData,\n    };\n\n    /*\n    Default Renderer for hierarchical table layout\n    */\n\n    function pivotTableRenderer(pivotData, opts) {\n\n        let agg, aggregator, colKey, getClickHandler, i, id, j, td, th, totalAggregator, tr, val, x;\n        const defaults = {\n            table: {\n                clickCallback: null,\n                rowTotals: true,\n                colTotals: true,\n            },\n            localeStrings: {\n                totals: 'Totals',\n            },\n\n            typeCellRenderer: cellRenderers.text,\n            headCellRenderer: cellRenderers.text,\n            dataCellRenderer: cellRenderers.text,\n        };\n\n        opts = $.extend(true, {}, defaults, opts);\n\n        const {\n            colAttrs,\n        } = pivotData;\n        const {\n            rowAttrs,\n        } = pivotData;\n        const rowKeys = pivotData.getRowKeys(true);\n        const colKeys = pivotData.getColKeys(true);\n\n        if (opts.table.clickCallback) {\n            getClickHandler = function (value, rowValues, colValues) {\n                let attr, i;\n                const filters = {};\n                for (i of Object.keys(colAttrs || {})) {\n                    attr = colAttrs[i];\n                    if (colValues[i] != null) {\n                        filters[attr] = colValues[i];\n                    }\n                }\n                for (i of Object.keys(rowAttrs || {})) {\n                    attr = rowAttrs[i];\n                    if (rowValues[i] != null) {\n                        filters[attr] = rowValues[i];\n                    }\n                }\n                return e => opts.table.clickCallback(e, value, filters, pivotData);\n            };\n        }\n\n        const compactLayout = (opts.table.compactLayout != null ? opts.table.compactLayout : true) && pivotData.grouping;\n        const rowExpandHandler = compactLayout ? expandRowCol : pivotData.rowGroupBefore ? expandWithSpan : expandRowsGroupAfter;\n\n        const rowsExpandHandler = getExpandHandler(rowKeys, true, rowExpandHandler.bind(pivotData));\n        const colsExpandHandler = getExpandHandler(colKeys, false, expandWithSpan.bind(pivotData));\n\n        //now actually build the outpu\n        const result = document.createElement('table');\n        result.className = 'pvtTable';\n\n        //helper function for setting row/col-span in pivotTableRenderer\n        const spanSize = function (arr, i, j) {\n            let x;\n            if (i !== 0) {\n                let asc, end;\n                let noDraw = true;\n                for (x = 0, end = j, asc = 0 <= end; asc ? x <= end : x >= end; asc ? x++ : x--) {\n                    if (arr[i - 1][x] !== arr[i][x]) {\n                        noDraw = false;\n                    }\n                }\n                if (noDraw) {\n                    return -1; //do not draw cell\n                }\n            }\n            let len = 0;\n            while ((i + len) < arr.length) {\n                let asc1, end1;\n                let stop = false;\n                for (x = 0, end1 = j, asc1 = 0 <= end1; asc1 ? x <= end1 : x >= end1; asc1 ? x++ : x--) {\n                    if (arr[i][x] !== arr[i + len][x]) {\n                        stop = true;\n                    }\n                }\n                if (stop) {\n                    break;\n                }\n                len++;\n            }\n            return len;\n        };\n\n        //the first few rows are for col headers\n        const thead = document.createElement('thead');\n        for (j of Object.keys(colAttrs || {})) {\n            const c = colAttrs[j];\n            tr = document.createElement('tr');\n            if ((parseInt(j) === 0) && (rowAttrs.length !== 0)) {\n                th = document.createElement('th');\n                th.setAttribute('colspan', rowAttrs.length);\n                th.setAttribute('rowspan', colAttrs.length);\n                tr.appendChild(th);\n            }\n            th = document.createElement('th');\n            th.className = 'pvtAxisLabel';\n            th.appendChild(opts.typeCellRenderer(c))\n            if (pivotData.grouping && (j < (colAttrs.length - 1))) {\n                th.onclick = getExpandAllHandler(pivotData, +j, false);\n                th.className += ` open level${j}`;\n            }\n            tr.appendChild(th);\n            for (i of Object.keys(colKeys || {})) {\n                colKey = colKeys[i];\n                x = spanSize(colKeys, parseInt(i), parseInt(j));\n                if (x !== -1) {\n                    th = document.createElement('th');\n                    th.className = 'pvtColLabel';\n                    th.className += ` col${pivotData.colGroupBefore ? +i : (+i + x) - 1}`;\n                    th.appendChild(opts.headCellRenderer(colKey[j], c))\n                    th.setAttribute('colspan', x * Math.max(1, pivotData.aggregator.length));\n                    if ((parseInt(j) === (colAttrs.length - 1)) && (rowAttrs.length !== 0)) {\n                        th.setAttribute('rowspan', 2);\n                    }\n                    if (pivotData.grouping && (j < (colAttrs.length - 1)) && colKey[j]) {\n                        th.className += ' pvtSubtotal open';\n                        th.setAttribute('colspan', x * Math.max(1, pivotData.aggregator.length));\n                        th.onclick = colsExpandHandler;\n                    }\n                    tr.appendChild(th);\n                }\n            }\n            if ((parseInt(j) === 0) && opts.table.rowTotals) {\n                th = document.createElement('th');\n                th.className = 'pvtTotalLabel pvtRowTotalLabel';\n                th.innerHTML = opts.localeStrings.totals;\n                th.setAttribute('colspan', Math.max(1, pivotData.aggregator.length));\n                th.setAttribute('rowspan', colAttrs.length + (rowAttrs.length === 0 ? 0 : 1));\n                tr.appendChild(th);\n            }\n            thead.appendChild(tr);\n        }\n\n        //then a row for row header headers\n        if (rowAttrs.length !== 0) {\n            tr = document.createElement('tr');\n            for (i of Object.keys(rowAttrs || {})) {\n                const r = rowAttrs[i];\n                th = document.createElement('th');\n                th.className = 'pvtAxisLabel';\n                th.appendChild(opts.typeCellRenderer(r))\n                if (pivotData.grouping && (i < (rowAttrs.length - 1))) {\n                    th.className += ` open level${i}`;\n                    th.onclick = getExpandAllHandler(pivotData, +i, true);\n                }\n                tr.appendChild(th);\n            }\n            th = document.createElement('th');\n            if (colAttrs.length === 0) {\n                th.className = 'pvtTotalLabel pvtRowTotalLabel';\n                th.innerHTML = opts.localeStrings.totals;\n                th.setAttribute('colspan', pivotData.aggregator.length);\n            }\n            tr.appendChild(th);\n            thead.appendChild(tr);\n        }\n        result.appendChild(thead);\n\n        //now the actual data rows, with their row headers and totals\n        const tbody = document.createElement('tbody');\n\n        if (pivotData.aggregatorsLabel && (pivotData.aggregatorsLabel.length > 1)) {\n            let lbl;\n            tr = document.createElement('tr');\n            th = document.createElement('th');\n            const colspan = rowAttrs.length + (colAttrs.length === 0 ? 0 : 1);\n            th.setAttribute('colspan', colspan);\n            tr.appendChild(th);\n\n            for (j of Object.keys(colKeys || {})) { //this is a tight loop\n                colKey = colKeys[j];\n                for (lbl of pivotData.aggregatorsLabel) {\n                    th = document.createElement('th');\n                    th.className = `pvtAggregatorLabel col${j}`;\n                    th.textContent = lbl;\n                    tr.appendChild(th);\n                }\n            }\n\n            for (lbl of pivotData.aggregatorsLabel) {\n                th = document.createElement('th');\n                th.className = 'pvtAggregatorLabel';\n                th.textContent = lbl;\n                tr.appendChild(th);\n            }\n\n            tbody.appendChild(tr);\n        }\n\n\n        for (i of Object.keys(rowKeys || {})) {\n            const rowKey = rowKeys[i];\n            tr = document.createElement('tr');\n            const rowGap = rowAttrs.length - rowKey.length;\n            tr.className = rowGap ? `pvtSubtotal level${rowKey.length}` : 'pvtData';\n            for (j of Object.keys(rowKey || {})) {\n                const txt = rowKey[j];\n                if (compactLayout && (j < (rowKey.length - 1))) {\n                    continue;\n                }\n                x = compactLayout ? 1 : spanSize(rowKeys, parseInt(i), parseInt(j));\n                if (x !== -1) {\n                    th = document.createElement('th');\n                    th.className = 'pvtRowLabel';\n                    th.className += ` row${pivotData.rowGroupBefore ? +i : (+i + x) - 1}`;\n                    th.appendChild(opts.headCellRenderer(txt, rowAttrs[j]))\n                    th.setAttribute('rowspan', x);\n                    if (compactLayout) {\n                        th.colSpan = rowAttrs.length;\n                        th.style.paddingLeft = 5 + (parseInt(j) * 20) + 'px';\n                    }\n                    if (pivotData.grouping && (j < (rowAttrs.length - 1))) {\n                        th.className += ' open';\n                        th.onclick = rowsExpandHandler;\n                    }\n                    tr.appendChild(th);\n                }\n            }\n\n            if (!compactLayout && rowGap) {\n                th = document.createElement('th');\n                th.colSpan = rowGap;\n                th.textContent = `Total (${rowKey[j]})`;\n                tr.appendChild(th);\n            }\n\n            if (colAttrs.length) {\n                th.colSpan++;\n            }\n\n            for (j of Object.keys(colKeys || {})) { //this is a tight loop\n                colKey = colKeys[j];\n                for (id = 0; id < pivotData.aggregator.length; id++) {\n                    agg = pivotData.aggregator[id];\n                    aggregator = pivotData.getAggregator(rowKey, colKey, id);\n                    val = aggregator.value(id);\n                    td = document.createElement('td');\n                    if (!rowGap) {\n                        td.className = 'pvtVal ';\n                    }\n                    td.className += `row${i} col${j}`;\n                    if (colAttrs.length - colKey.length) {\n                        td.className = `pvtSubtotal level${colKey.length} row${i} col${j}`;\n                    }\n                    td.appendChild(opts.dataCellRenderer(aggregator.format(val), aggregator?.attr, rowKey, colKey))\n                    td.setAttribute('data-value', val);\n                    if (getClickHandler != null) {\n                        td.onclick = getClickHandler(val, rowKey, colKey);\n                    }\n                    tr.appendChild(td);\n                }\n            }\n\n            if (opts.table.rowTotals || (colAttrs.length === 0)) {\n                for (id = 0; id < pivotData.aggregator.length; id++) {\n                    agg = pivotData.aggregator[id];\n                    totalAggregator = pivotData.getAggregator(rowKey, [], id);\n                    val = totalAggregator.value(id);\n                    td = document.createElement('td');\n                    td.className = 'pvtTotal rowTotal';\n                    td.append(opts.dataCellRenderer(totalAggregator.format(val), totalAggregator?.attr, rowKey, []))\n                    td.setAttribute('data-value', val);\n                    if (getClickHandler != null) {\n                        td.onclick = getClickHandler(val, rowKey, []);\n                    }\n                    td.setAttribute('data-for', 'row' + i);\n                    tr.appendChild(td);\n                }\n            }\n            tbody.appendChild(tr);\n        }\n\n        //finally, the row for col totals, and a grand total\n        if (opts.table.colTotals || (rowAttrs.length === 0)) {\n            tr = document.createElement('tr');\n            if (opts.table.colTotals || (rowAttrs.length === 0)) {\n                th = document.createElement('th');\n                th.className = 'pvtTotalLabel pvtColTotalLabel';\n                th.innerHTML = opts.localeStrings.totals;\n                th.setAttribute('colspan', rowAttrs.length + (colAttrs.length === 0 ? 0 : 1));\n                tr.appendChild(th);\n            }\n            for (j of Object.keys(colKeys || {})) {\n                colKey = colKeys[j];\n                for (id = 0; id < pivotData.aggregator.length; id++) {\n                    agg = pivotData.aggregator[id];\n                    totalAggregator = pivotData.getAggregator([], colKey, id);\n                    val = totalAggregator.value(id);\n                    td = document.createElement('td');\n                    td.className = `pvtTotal colTotal col${j}`;\n                    if (colKey.length !== colAttrs.length) {\n                        td.className += ` pvtSubtotal level${colKey.length}`;\n                    }\n                    td.append(opts.dataCellRenderer(totalAggregator.format(val), totalAggregator?.attr, [], colKey))\n                    td.setAttribute('data-value', val);\n                    if (getClickHandler != null) {\n                        td.onclick = getClickHandler(val, [], colKey);\n                    }\n                    td.setAttribute('data-for', 'col' + j);\n                    tr.appendChild(td);\n                }\n            }\n            if (opts.table.rowTotals || (colAttrs.length === 0)) {\n                for (id = 0; id < pivotData.aggregator.length; id++) {\n                    agg = pivotData.aggregator[id];\n                    totalAggregator = pivotData.getAggregator([], [], id);\n                    val = totalAggregator.value(id);\n                    td = document.createElement('td');\n                    td.className = 'pvtGrandTotal';\n                    td.append(opts.dataCellRenderer(totalAggregator.format(val), totalAggregator?.attr, [], []))\n                    td.setAttribute('data-value', val);\n                    if (getClickHandler != null) {\n                        td.onclick = getClickHandler(val, [], []);\n                    }\n                    tr.appendChild(td);\n                }\n            }\n            tbody.appendChild(tr);\n        }\n        result.appendChild(tbody);\n\n        //squirrel this away for later\n        result.setAttribute('data-numrows', rowKeys.length);\n        result.setAttribute('data-numcols', colKeys.length);\n\n        return result;\n    }\n\n    /*\n    Pivot Table core: create PivotData object and call Renderer on it\n    */\n\n    $.fn.pivot = function (input, inputOpts, locale) {\n        let e;\n        if (locale == null) {\n            locale = 'en';\n        }\n        if ((locales[locale] == null)) {\n            locale = 'en';\n        }\n        localeGlobal = locale;\n        inputOpts = inputOpts || {};\n        const defaults = {\n            cols: [], rows: [], vals: [],\n            rowOrder: 'key_a_to_z', colOrder: 'key_a_to_z',\n            dataClass: PivotData,\n            filter() {\n                return true;\n            },\n            aggregator: aggregatorTemplates.count()(),\n            aggregatorName: 'Count',\n            sorters: {},\n            derivedAttributes: {},\n            renderer: pivotTableRenderer,\n        };\n\n        const localeStrings = $.extend(true, {}, locales.en.localeStrings, locales[locale].localeStrings);\n        const localeDefaults = {\n            rendererOptions: { localeStrings },\n            localeStrings,\n        };\n\n        const opts = $.extend(true, {}, localeDefaults, $.extend({}, defaults, inputOpts));\n\n        let result;\n        inputOpts.pivotData = null;\n        try {\n            const pivotData = new opts.dataClass(input, opts);\n            try {\n                result = opts.renderer(pivotData, opts.rendererOptions);\n                inputOpts.pivotData = pivotData;\n            } catch (error) {\n                e = error;\n                if (typeof console !== 'undefined' && console !== null) {\n                    console.error(e.stack);\n                }\n                result = $('<span>').html(opts.localeStrings.renderError);\n            }\n        } catch (error1) {\n            e = error1;\n            if (typeof console !== 'undefined' && console !== null) {\n                console.error(e.stack);\n            }\n            result = $('<span>').html(opts.localeStrings.computeError);\n        }\n\n        const x = this[0];\n        while (x.hasChildNodes()) {\n            x.removeChild(x.lastChild);\n        }\n        return this.append(result);\n    };\n\n    /*\n    Pivot Table UI: calls the Pivot Table core above with options set by user\n    */\n\n    $.fn.pivotUI = function (input, inputOpts, overwrite, locale) {\n        let opts;\n        let a, c;\n        if (overwrite == null) {\n            overwrite = false;\n        }\n        if (locale == null) {\n            locale = 'fr';\n        }\n        if ((locales[locale] == null)) {\n            locale = 'en';\n        }\n\n        const defaults = {\n            derivedAttributes: {},\n            aggregators: defaultAggregators,\n            renderers: locales[locale].renderers,\n            hiddenAttributes: [],\n            hiddenFromAggregators: [],\n            hiddenFromDragDrop: [],\n            menuLimit: 500,\n            cols: [], rows: [], vals: [],\n            rowOrder: 'key_a_to_z', colOrder: 'key_a_to_z',\n            dataClass: PivotData,\n            exclusions: {},\n            inclusions: {},\n            unusedAttrsVertical: 85,\n            autoSortUnusedAttrs: false,\n            onRefresh: null,\n            showUI: true,\n            filter() {\n                return true;\n            },\n            sorters: {},\n            multiple: true,\n            parametersActive: false,\n        };\n\n        let itemsId = 0;\n        let aggregators = [];\n        const localeStrings = $.extend(true, {}, locales.en.localeStrings, locales[locale].localeStrings);\n        const localeDefaults = {\n            rendererOptions: { localeStrings },\n            localeStrings,\n        };\n\n        const existingOpts = this.data('pivotUIOptions');\n        if ((existingOpts == null) || overwrite) {\n            opts = $.extend(true, {}, localeDefaults, $.extend({}, defaults, inputOpts));\n        } else {\n            opts = existingOpts;\n        }\n\n        if (!inputOpts?.aggregators && locales[locale].formatters) {\n            opts.aggregators = makeAggregators(\n                locales[locale].formatters.format,\n                locales[locale].formatters.formatInt,\n                locales[locale].formatters.formatPct);\n        }\n\n        try {\n            // do a first pass on the data to cache a materialized copy of any\n            // function-valued inputs and to compute dimension cardinalities\n            let attr, i, unusedAttrsVerticalAutoCutoff, x;\n            const attrValues = {};\n            const materializedInput = [];\n            let recordsProcessed = 0;\n            PivotData.forEachRecord(input, opts.derivedAttributes, function (record) {\n                let attr;\n                if (!opts.filter(record)) {\n                    return;\n                }\n                materializedInput.push(record);\n                for (attr of Object.keys(record || {})) {\n                    if ((attrValues[attr] == null)) {\n                        attrValues[attr] = {};\n                        if (recordsProcessed > 0) {\n                            attrValues[attr]['null'] = recordsProcessed;\n                        }\n                    }\n                }\n                for (attr in attrValues) {\n                    const value = record[attr] != null ? record[attr] : 'null';\n                    if (attrValues[attr][value] == null) {\n                        attrValues[attr][value] = 0;\n                    }\n                    attrValues[attr][value]++;\n                }\n                return recordsProcessed++;\n            });\n\n            const uiContainer = $('<div>').addClass('pvtUi');\n\n            const uiMenu = $('<div>').addClass('pvtUiMenu');\n            const uiParameters = $('<div>').addClass('pvtUiParameters');\n            const uiPivotContainer = $('<div>').addClass('pvtUiContainer');\n\n            const uiButtonColumns = $('<div>')\n                .addClass('pvtUiVerticalButton')\n                .addClass('pvtUiButtonColumns')\n                .addClass('active')\n                .text(localeStrings.colsLabel)\n                .on('click', function () {\n                    opts.parametersActive = !opts.parametersActive;\n                    if (opts.parametersActive) {\n                        uiButtonColumns.addClass('active');\n                        return uiParameters.show();\n                    } else {\n                        uiButtonColumns.removeClass('active');\n                        return uiParameters.hide();\n                    }\n                })\n                .appendTo(uiMenu);\n\n            const uiButtonGroups = $('<div>')\n                .addClass('pvtUiVerticalButton')\n                .addClass('pvtUiButtonGroups')\n                .text(localeStrings.groupsLabel)\n                .on('click', function () {\n                    if (opts.grouping) {\n                        uiButtonGroups.removeClass('active');\n                        opts.grouping = false;\n                    } else {\n                        uiButtonGroups.addClass('active');\n                        opts.grouping = {\n                            colGroupBefore: false,\n                        };\n                    }\n                    return refresh();\n                })\n                .appendTo(uiMenu);\n\n            uiContainer\n                .append(uiMenu)\n                .append(uiParameters)\n                .append(uiPivotContainer);\n\n            //# Render type\n            $('<div>')\n                .addClass('pvtParameterLabel')\n                .appendTo(uiParameters)\n                .text(localeStrings.rendererLabel);\n            let pvtRenderType = $('<div>')\n                .addClass('pvtRendererType')\n                .addClass('pvtParameter')\n                .appendTo(uiParameters);\n            const renderer = $('<select>')\n                .addClass('pvtRenderer')\n                .appendTo(pvtRenderType)\n                .bind('change', () => refresh()); //capture reference\n            for (x of Object.keys(opts.renderers || {})) {\n                $('<option>').val(x).html(x).appendTo(renderer);\n            }\n\n\n            //axis list, including the double click menu\n            const unused = $('<div>').addClass('pvtAxisContainer pvtUnused');\n            const shownAttributes = [];\n            for (a in attrValues) {\n                if (!opts.hiddenAttributes.includes(a)) {\n                    shownAttributes.push(a);\n                }\n            }\n            const shownInAggregators = [];\n            for (c of shownAttributes) {\n                if (!opts.hiddenFromAggregators.includes(c)) {\n                    shownInAggregators.push(c);\n                }\n            }\n            const shownInDragDrop = [];\n            for (c of shownAttributes) {\n                if (!opts.hiddenFromDragDrop.includes(c)) {\n                    shownInDragDrop.push(c);\n                }\n            }\n\n            let unusedAttrsVerticalAutoOverride = false;\n            if (opts.unusedAttrsVertical === 'auto') {\n                unusedAttrsVerticalAutoCutoff = 120; // legacy support\n            } else {\n                unusedAttrsVerticalAutoCutoff = parseInt(opts.unusedAttrsVertical);\n            }\n\n            if (!isNaN(unusedAttrsVerticalAutoCutoff)) {\n                let attrLength = 0;\n                for (a of shownInDragDrop) {\n                    attrLength += a.length;\n                }\n                unusedAttrsVerticalAutoOverride = attrLength > unusedAttrsVerticalAutoCutoff;\n            }\n\n            for (i of Object.keys(shownInDragDrop || {})) {\n                attr = shownInDragDrop[i];\n                const values = [];\n                for (const v in attrValues[attr]) {\n                    values.push(v);\n                }\n                let hasExcludedItem = false;\n                const valueList = $('<div>').addClass('pvtFilterBox').hide();\n\n                valueList.append($('<h4>').append(\n                        $('<span>').text(attr),\n                        $('<span>').addClass('count').text(`(${values.length})`),\n                    ),\n                );\n                if (values.length > opts.menuLimit) {\n                    valueList.append($('<p>').html(opts.localeStrings.tooMany));\n                } else {\n                    if (values.length > 5) {\n                        const controls = $('<p>').appendTo(valueList);\n                        const sorter = getSort(opts.sorters, attr);\n                        const placeholder = opts.localeStrings.filterResults;\n                        $('<input>', { type: 'text' }).appendTo(controls)\n                            .attr({ placeholder, class: 'pvtSearch' })\n                            .bind('keyup', function () {\n                                const filter = $(this).val().toLowerCase().trim();\n                                const accept_gen = (prefix, accepted) => (function (v) {\n                                    const real_filter = filter.substring(prefix.length).trim();\n                                    if (real_filter.length === 0) {\n                                        return true;\n                                    }\n                                    let needle = Math.sign(sorter(v.toLowerCase(), real_filter));\n                                    return accepted.includes(needle);\n                                });\n                                const accept =\n                                    filter.indexOf('>=') === 0 ? accept_gen('>=', [1, 0])\n                                        : filter.indexOf('<=') === 0 ? accept_gen('<=', [-1, 0])\n                                            : filter.indexOf('>') === 0 ? accept_gen('>', [1])\n                                                : filter.indexOf('<') === 0 ? accept_gen('<', [-1])\n                                                    : filter.indexOf('~') === 0 ? function (v) {\n                                                            if (filter.substring(1).trim().length === 0) {\n                                                                return true;\n                                                            }\n                                                            return v.toLowerCase().match(filter.substring(1));\n                                                        }\n                                                        : v => v.toLowerCase().indexOf(filter) !== -1;\n\n                                return valueList.find('.pvtCheckContainer p label span.value').each(function () {\n                                    if (accept($(this).text())) {\n                                        return $(this).parent().parent().show();\n                                    } else {\n                                        return $(this).parent().parent().hide();\n                                    }\n                                });\n                            });\n                        controls.append($('<br>'));\n                        $('<button>', { type: 'button' }).appendTo(controls)\n                            .html(opts.localeStrings.selectAll)\n                            .bind('click', function () {\n                                valueList.find('input:visible:not(:checked)')\n                                    .prop('checked', true).toggleClass('changed');\n                                return false;\n                            });\n                        $('<button>', { type: 'button' }).appendTo(controls)\n                            .html(opts.localeStrings.selectNone)\n                            .bind('click', function () {\n                                valueList.find('input:visible:checked')\n                                    .prop('checked', false).toggleClass('changed');\n                                return false;\n                            });\n                    }\n\n                    const checkContainer = $('<div>').addClass('pvtCheckContainer').appendTo(valueList);\n\n                    for (let value of values.sort(getSort(opts.sorters, attr))) {\n                        const valueCount = attrValues[attr][value];\n                        const filterItem = $('<label>');\n                        let filterItemExcluded = false;\n                        if (opts.inclusions[attr]) {\n                            filterItemExcluded = (!opts.inclusions[attr].includes(value));\n                        } else if (opts.exclusions[attr]) {\n                            filterItemExcluded = (opts.exclusions[attr].includes(value));\n                        }\n                        if (!hasExcludedItem) {\n                            hasExcludedItem = filterItemExcluded;\n                        }\n                        $('<input>')\n                            .attr('type', 'checkbox').addClass('pvtFilter')\n                            .attr('checked', !filterItemExcluded).data('filter', [attr, value])\n                            .appendTo(filterItem)\n                            .bind('change', function () {\n                                return $(this).toggleClass('changed');\n                            });\n                        filterItem.append($('<span>').addClass('value').text(value));\n                        filterItem.append($('<span>').addClass('count').text('(' + valueCount + ')'));\n                        checkContainer.append($('<p>').append(filterItem));\n                    }\n                }\n\n                const closeFilterBox = function () {\n                    if (valueList.find('[type=\\'checkbox\\']').length >\n                        valueList.find('[type=\\'checkbox\\']:checked').length) {\n                        attrElem.addClass('pvtFilteredAttribute');\n                    } else {\n                        attrElem.removeClass('pvtFilteredAttribute');\n                    }\n\n                    valueList.find('.pvtSearch').val('');\n                    valueList.find('.pvtCheckContainer p').show();\n                    return valueList.hide();\n                };\n\n\n                const finalButtons = $('<p>').appendTo(valueList);\n\n                if (values.length <= opts.menuLimit) {\n                    $('<button>', { type: 'button' }).text(opts.localeStrings.apply)\n                        .appendTo(finalButtons).bind('click', function () {\n                        if (valueList.find('.changed').removeClass('changed').length) {\n                            refresh();\n                        }\n                        return closeFilterBox();\n                    });\n                }\n\n                $('<button>', { type: 'button' }).text(opts.localeStrings.cancel)\n                    .appendTo(finalButtons).bind('click', function () {\n                    valueList.find('.changed:checked')\n                        .removeClass('changed').prop('checked', false);\n                    valueList.find('.changed:not(:checked)')\n                        .removeClass('changed').prop('checked', true);\n                    return closeFilterBox();\n                });\n\n                const triangleLink = $('<span>').addClass('pvtTriangle')\n                    .html(' &#x25BE;').bind('click', function (e) {\n                        const { left, top } = $(e.currentTarget).position();\n                        return valueList.css({ left: left + 10, top: top + 10 }).show();\n                    });\n\n                const attrElem = $('<li>').addClass(`axis_${i}`)\n                    .append($('<span>').addClass('pvtAttr').text(attr).data('attrName', attr).append(triangleLink));\n\n                if (hasExcludedItem) {\n                    attrElem.addClass('pvtFilteredAttribute');\n                }\n                unused.append(attrElem).append(valueList);\n            }\n\n            $('<div>')\n                .addClass('pvtParameterLabel')\n                .appendTo(uiParameters)\n                .text(localeStrings.valuesLabel);\n\n            //aggregator menu and value area\n            const divAggregator = $('<div>')\n                .addClass('pvtAggregatorChoose')\n                .addClass('pvtParameter')\n                .appendTo(uiParameters);\n\n            const aggregator = $('<select>')\n                .addClass('pvtAggregator')\n                .appendTo(divAggregator)\n                .bind('change', () => {\n                    if (!opts.multiple) {\n                        this.find('.pvtVals .pvtAttrDropdown').each(function () {\n                            return this.remove();\n                        });\n                        aggregators = [{ id: 1, value: aggregator.val() }];\n                        return refresh();\n                    }\n                }); //capture reference\n\n            for (x of Object.keys(opts.aggregators || {})) {\n                aggregator.append($('<option>').val(x).html(locales[locale].localeStrings[x] || locales['en'].localeStrings[x] || x));\n            }\n\n            if (opts.multiple) {\n                $('<a>', { role: 'button' })\n                    .addClass('pvtAddAggregator')\n                    .addClass('pvtToolButton')\n                    .appendTo(divAggregator)\n                    .html('+')\n                    .bind('click', function () {\n                        aggregators.push({ id: ++itemsId, value: aggregator.val() });\n                        renameAggregators(aggregators);\n                        return refresh();\n                    });\n            }\n\n            const ordering = {\n                key_a_to_z: { rowSymbol: '&varr;', colSymbol: '&harr;', next: 'value_a_to_z' },\n                value_a_to_z: { rowSymbol: '&darr;', colSymbol: '&rarr;', next: 'value_z_to_a' },\n                value_z_to_a: { rowSymbol: '&uarr;', colSymbol: '&larr;', next: 'key_a_to_z' },\n            };\n\n            const rowOrderArrow = $('<a>', { role: 'button' })\n                .addClass('pvtRowOrder')\n                .addClass('pvtToolButton')\n                .appendTo(divAggregator)\n                .data('order', opts.rowOrder).html(ordering[opts.rowOrder].rowSymbol)\n                .bind('click', function () {\n                    $(this).data('order', ordering[$(this).data('order')].next);\n                    $(this).html(ordering[$(this).data('order')].rowSymbol);\n                    return refresh();\n                });\n\n            const colOrderArrow = $('<a>', { role: 'button' })\n                .addClass('pvtColOrder')\n                .addClass('pvtToolButton')\n                .appendTo(divAggregator)\n                .data('order', opts.colOrder).html(ordering[opts.colOrder].colSymbol)\n                .bind('click', function () {\n                    $(this).data('order', ordering[$(this).data('order')].next);\n                    $(this).html(ordering[$(this).data('order')].colSymbol);\n                    return refresh();\n                });\n\n            const pvVals = $('<div>').addClass('pvtVals')\n                .addClass('pvtParameter')\n                .appendTo(uiParameters);\n\n            uiParameters.append(pvVals);\n\n            // Available fields\n            $('<div>')\n                .addClass('pvtParameterLabel')\n                .appendTo(uiParameters)\n                .text(localeStrings.fieldsLabel);\n\n            uiParameters.append(unused);\n\n            //column axes\n            $('<div>')\n                .addClass('pvtParameterLabel')\n                .appendTo(uiParameters)\n                .text(localeStrings.colsLabel);\n\n            $('<div>').addClass('pvtAxisContainer pvtCols').appendTo(uiParameters);\n\n            //row axes\n            $('<div>')\n                .addClass('pvtParameterLabel')\n                .appendTo(uiParameters)\n                .text(localeStrings.rowsLabel);\n            $('<div>').addClass('pvtAxisContainer pvtRows').appendTo(uiParameters);\n\n            //the actual pivot table container\n            const pivotTable = $('<div>')\n                .addClass('pvtRendererArea')\n                .appendTo(uiPivotContainer);\n\n            //render the UI in its default state\n            this.html(uiContainer);\n\n            if (!opts.parametersActive) {\n                uiButtonColumns.removeClass('active');\n                uiParameters.hide();\n            }\n\n            //set up the UI initial state as requested by moving elements around\n\n            let initialRender = true;\n\n            //set up for refreshing\n            const refreshDelayed = () => {\n                let vals;\n                const subopts = {\n                    derivedAttributes: opts.derivedAttributes,\n                    localeStrings: opts.localeStrings,\n                    rendererOptions: opts.rendererOptions,\n                    sorters: opts.sorters,\n                    cols: [], rows: [],\n                    dataClass: opts.dataClass,\n                    grouping: opts.grouping,\n                };\n\n                this.find('.pvtRows li span.pvtAttr').each(function () {\n                    return subopts.rows.push($(this).data('attrName'));\n                });\n                this.find('.pvtCols li span.pvtAttr').each(function () {\n                    return subopts.cols.push($(this).data('attrName'));\n                });\n\n                let numInputsToProcess = 0;\n\n                const aggVals = [];\n                let j = 0, idx = j;\n                for (; j < aggregators.length; j++, idx = j) {\n                    let aggregatorType;\n                    const agg = aggregators[idx];\n                    if (typeof agg === 'object') {\n                        aggregatorType = agg.value;\n                    }\n                    const aggIdx = agg.id;\n                    const initialVals = agg.vals;\n\n                    const left = opts.aggregators[aggregatorType]([])().numInputs;\n                    if (left != null) {\n                        numInputsToProcess = left;\n                    } else {\n                        numInputsToProcess = 0;\n                    }\n                    vals = [];\n                    this.find('.pvtVals select.pvtAttrDropdown' + aggIdx).each(function () {\n                        if (numInputsToProcess !== 0) {\n                            numInputsToProcess--;\n                            if ($(this).val() !== '') {\n                                return vals.push($(this).val());\n                            }\n                        }\n                    });\n\n\n                    const pvtVals = this.find('.pvtVals');\n                    let container = this.find('.pvtVals .pvtAttrDropdownContainer' + aggIdx);\n                    const found = container.length > 0;\n                    if (opts.multiple) {\n                        let labelAggregator;\n                        if (!found) {\n                            container = $('<div>')\n                                .addClass('pvtAttrDropdownContainer')\n                                .addClass('pvtAttrDropdownContainer' + aggIdx)\n                                .appendTo(pvtVals);\n                            labelAggregator = locales[locale].localeStrings[aggregatorType] || locales['en'].localeStrings[aggregatorType] || aggregatorType;\n                            $('<label>')\n                                .addClass('pvtAttrDropdown')\n                                .addClass('pvtAttrDropdown' + aggIdx)\n                                .appendTo(container)\n                                .html('<b>' + agg.displayName + '</b>) ' + labelAggregator);\n                            initialRender = true;\n                        }\n\n                        if (!initialRender) {\n                            this.find('.pvtVals .pvtAttrDropdownContainer' + aggIdx + ' label.pvtAttrDropdown')\n                                .each(function () {\n                                    labelAggregator = locales[locale].localeStrings[aggregatorType] || locales['en'].localeStrings[aggregatorType] || aggregatorType;\n                                    return $(this).html('<b>' + agg.displayName + '</b>) ' + labelAggregator);\n                                });\n                        }\n                    } else {\n                        container = pvtVals;\n                    }\n\n                    if (numInputsToProcess !== 0) {\n                        let asc, end;\n                        for (x = 0, end = numInputsToProcess, asc = 0 <= end; asc ? x < end : x > end; asc ? x++ : x--) {\n                            const newDropdown = $('<select>')\n                                .addClass('pvtAttrDropdown' + aggIdx)\n                                .addClass('pvtAttrDropdown')\n                                .append($('<option>'))\n                                .bind('change', () => refresh());\n                            for (attr of shownInAggregators) {\n                                newDropdown.append($('<option>').val(attr).text(attr));\n                            }\n                            container.append(newDropdown);\n                        }\n                    }\n\n\n                    if (opts.multiple && !found) {\n                        $('<a>')\n                            .html('x')\n                            .addClass('pvtRemoveAggregator')\n                            .addClass('pvtToolButton')\n                            .addClass('pvtAttrDropdown' + aggIdx)\n                            .appendTo(container)\n                            .bind('click', (function () {\n                                    this.instance.find('.pvtVals .pvtAttrDropdownContainer' + this.aggIdx).remove();\n                                    idx = aggregators.findIndex(agg => agg.id === this.aggIdx);\n                                    aggregators.splice(idx, 1);\n                                    renameAggregators(aggregators);\n                                    return refresh();\n                                }).bind({ instance: this, aggIdx }),\n                            );\n                    }\n\n                    if (initialRender) {\n                        vals = initialVals != null ? initialVals : opts.vals;\n                        i = 0;\n                        this.find('.pvtVals select.pvtAttrDropdown' + aggIdx).each(function () {\n                            $(this).val(vals[i]);\n                            return i++;\n                        });\n                        initialRender = false;\n                    }\n\n                    aggVals.push(vals);\n                }\n\n                subopts.aggregatorName = aggregators.map(agg => agg.value);\n                subopts.vals = aggVals;\n                subopts.aggregator = aggregators.map((agg, i) => opts.aggregators[agg.value](aggVals[i]));\n                subopts.renderer = opts.renderers[renderer.val()];\n                subopts.rowOrder = rowOrderArrow.data('order');\n                subopts.colOrder = colOrderArrow.data('order');\n                if (opts.multiple) {\n                    subopts.aggregatorsLabel = aggregators.map(agg => agg.displayName);\n                }\n\n                //construct filter here\n                const exclusions = {};\n                this.find('input.pvtFilter').not(':checked').each(function () {\n                    const filter = $(this).data('filter');\n                    if (exclusions[filter[0]] != null) {\n                        return exclusions[filter[0]].push(filter[1]);\n                    } else {\n                        return exclusions[filter[0]] = [filter[1]];\n                    }\n                });\n                //include inclusions when exclusions present\n                const inclusions = {};\n                this.find('input.pvtFilter:checked').each(function () {\n                    const filter = $(this).data('filter');\n                    if (exclusions[filter[0]] != null) {\n                        if (inclusions[filter[0]] != null) {\n                            return inclusions[filter[0]].push(filter[1]);\n                        } else {\n                            return inclusions[filter[0]] = [filter[1]];\n                        }\n                    }\n                });\n\n                subopts.filter = function (record) {\n                    if (!opts.filter(record)) {\n                        return false;\n                    }\n                    for (let k in exclusions) {\n                        const excludedItems = exclusions[k];\n                        if (excludedItems.includes('' + (record[k] != null ? record[k] : 'null'))) {\n                            return false;\n                        }\n                    }\n                    return true;\n                };\n\n                pivotTable.pivot(materializedInput, subopts, locale);\n                const pivotUIOptions = $.extend({}, opts, {\n                        cols: subopts.cols,\n                        rows: subopts.rows,\n                        colOrder: subopts.colOrder,\n                        rowOrder: subopts.rowOrder,\n                        vals: aggVals,\n                        exclusions,\n                        inclusions,\n                        aggregator: subopts.aggregator,\n                        inclusionsInfo: inclusions, //duplicated for backwards-compatibility\n                        aggregatorName: subopts.aggregatorName,\n                        rendererName: renderer.val(),\n                    },\n                );\n\n                const currentPivotData = subopts.pivotData;\n                delete subopts.pivotData;\n                this.data('pivotUIOptions', pivotUIOptions);\n\n                // if requested, make sure unused columns are in alphabetical order\n                if (opts.autoSortUnusedAttrs) {\n                    const unusedAttrsContainer = this.find('td.pvtUnused.pvtAxisContainer');\n                    $(unusedAttrsContainer).children('li')\n                        .sort((a, b) => naturalSort($(a).text(), $(b).text()))\n                        .appendTo(unusedAttrsContainer);\n                }\n\n                pivotTable.css('opacity', 1);\n                if (opts.onRefresh != null) {\n                    return opts.onRefresh(pivotUIOptions, currentPivotData);\n                }\n            };\n\n            const refresh = () => {\n                pivotTable.css('opacity', 0.5);\n                return setTimeout(refreshDelayed, 10);\n            };\n\n            for (x of opts.cols) {\n                this.find('.pvtCols').append(this.find(`.axis_${$.inArray(x, shownInDragDrop)}`));\n            }\n            for (x of opts.rows) {\n                this.find('.pvtRows').append(this.find(`.axis_${$.inArray(x, shownInDragDrop)}`));\n            }\n            if (opts.aggregatorName != null) {\n                if (opts.multiple) {\n                    opts.aggregatorName = Array.isArray(opts.aggregatorName) ? opts.aggregatorName : [opts.aggregatorName];\n                    for (let idx = 0; idx < opts.aggregatorName.length; idx++) {\n                        const agg = opts.aggregatorName[idx];\n                        aggregators.push({\n                            id: ++itemsId,\n                            value: agg,\n                            vals: (opts.vals != null ? opts.vals[idx] : undefined),\n                        });\n                        renameAggregators(aggregators);\n                    }\n                } else {\n                    this.find('.pvtVals').append(this.find('.pvtAttrDropdown'));\n                    this.find('.pvtAggregator').val(opts.aggregatorName).change();\n                }\n            } else {\n                this.find('.pvtAggregator').change();\n            }\n            if (opts.rendererName != null) {\n                this.find('.pvtRenderer').val(opts.rendererName);\n            }\n\n            if (!opts.showUI) {\n                this.find('.pvtUiCell').hide();\n            }\n\n            //the very first refresh will actually display the table\n            refresh();\n\n            this.find('.pvtAxisContainer').sortable({\n                update(e, ui) {\n                    if ((ui.sender == null)) {\n                        return refresh();\n                    }\n                },\n                connectWith: this.find('.pvtAxisContainer'),\n                items: 'li',\n                placeholder: 'pvtPlaceholder',\n            });\n        } catch (error) {\n            console.error(error);\n            this.html(opts.localeStrings.uiRenderError);\n        }\n        return this;\n    };\n\n    /*\n    Heatmap post-processing\n    */\n\n    $.fn.heatmap = function (scope, opts) {\n        if (scope == null) {\n            scope = 'heatmap';\n        }\n        const numRows = this.data('numrows');\n        const numCols = this.data('numcols');\n\n        // given a series of values\n        // must return a function to map a given value to a CSS color\n        let colorScaleGenerator = opts?.heatmap?.colorScaleGenerator;\n        if (colorScaleGenerator == null) {\n            colorScaleGenerator = function (values) {\n                const min = Math.min(...(values || []));\n                const max = Math.max(...(values || []));\n                return function (x) {\n                    const nonRed = 255 - Math.round((255 * (x - min)) / (max - min));\n                    return `rgb(255,${nonRed},${nonRed})`;\n                };\n            };\n        }\n\n        const heatmapper = scope => {\n            const forEachCell = f => {\n                return this.find(scope).each(function () {\n                    const x = $(this).data('value');\n                    if ((x != null) && isFinite(x)) {\n                        return f(x, $(this));\n                    }\n                });\n            };\n\n            const values = [];\n            forEachCell(x => values.push(x));\n            const colorScale = colorScaleGenerator(values);\n            return forEachCell((x, elem) => elem.css('background-color', colorScale(x)));\n        };\n\n        switch (scope) {\n            case 'heatmap':\n                heatmapper('.pvtVal');\n                break;\n            case 'rowheatmap':\n                for (let i = 0, end = numRows, asc = 0 <= end; asc ? i < end : i > end; asc ? i++ : i--) {\n                    heatmapper(`.pvtVal.row${i}`);\n                }\n                break;\n            case 'colheatmap':\n                for (let j = 0, end1 = numCols, asc1 = 0 <= end1; asc1 ? j < end1 : j > end1; asc1 ? j++ : j--) {\n                    heatmapper(`.pvtVal.col${j}`);\n                }\n                break;\n        }\n\n        heatmapper('.pvtTotal.rowTotal');\n        heatmapper('.pvtTotal.colTotal');\n\n        return this;\n    };\n\n    /*\n    Barchart post-processing\n    */\n\n    $.fn.barchart = function (opts) {\n        const numRows = this.data('numrows');\n        const numCols = this.data('numcols');\n\n        const barcharter = scope => {\n            const forEachCell = f => {\n                return this.find(scope).each(function () {\n                    const x = $(this).data('value');\n                    if ((x != null) && isFinite(x)) {\n                        return f(x, $(this));\n                    }\n                });\n            };\n\n            const values = [];\n            forEachCell(x => values.push(x));\n            let max = Math.max(...(values || []));\n            if (max < 0) {\n                max = 0;\n            }\n            let range = max;\n            const min = Math.min(...(values || []));\n            if (min < 0) {\n                range = max - min;\n            }\n            const scaler = x => (100 * x) / (1.4 * range);\n            return forEachCell(function (x, elem) {\n                const text = elem.text();\n                const wrapper = $('<div>').css({\n                    'position': 'relative',\n                    'height': '55px',\n                });\n                let bgColor = 'gray';\n                let bBase = 0;\n                if (min < 0) {\n                    bBase = scaler(-min);\n                }\n                if (x < 0) {\n                    bBase += scaler(x);\n                    bgColor = 'darkred';\n                    x = -x;\n                }\n                wrapper.append($('<div>').css({\n                        'position': 'absolute',\n                        'bottom': bBase + '%',\n                        'left': 0,\n                        'right': 0,\n                        'height': scaler(x) + '%',\n                        'background-color': bgColor,\n                    }),\n                );\n                wrapper.append($('<div>').text(text).css({\n                        'position': 'relative',\n                        'padding-left': '5px',\n                        'padding-right': '5px',\n                    }),\n                );\n\n                return elem.css({ 'padding': 0, 'padding-top': '5px', 'text-align': 'center' }).html(wrapper);\n            });\n        };\n\n        for (let i = 0, end = numRows, asc = 0 <= end; asc ? i < end : i > end; asc ? i++ : i--) {\n            barcharter(`.pvtVal.row${i}`);\n        }\n        barcharter('.pvtTotal.colTotal');\n\n        return this;\n    };\n\n    /*\n    Grouping fold/expand rows and cols\n    */\n\n    const childIndex = el => Array.prototype.indexOf.call(el.parentNode.children, el);\n\n    const childKeysIndices = function (keys, n) {\n        const up = keys[0].length === 1 ? 1 : -1;\n        const len = keys[n].length;\n\n        const result = [];\n        n = n + up;\n        let key = keys[n];\n        while (key && key.length > len) {\n            if (key.length === (len + 1)) {\n                result.push(n);\n            } else {\n                continue;\n            }\n            n = n + up;\n            key = keys[n];\n        }\n        return result;\n    };\n\n    const parentKeysIndices = function (keys, n) {\n        const up = keys[0].length === 1 ? 1 : -1;\n        const result = [];\n        let len = keys[n].length;\n        while (len > 1) {\n            let key;\n            n = n - up;\n            key = keys[n];\n            while (key && key.length >= len) {\n                n = n - up;\n                key = keys[n];\n            }\n            result.push(n);\n\n            len = keys[n].length;\n        }\n        return result;\n    };\n\n    const levelKeysIndices = (keys, level) => (keys.filter(d => d.length === level)).map(keys.indexOf.bind(keys));\n\n    const getAxis = function (table, rows, level) {\n        if (rows) {\n            return table.find(`thead tr:last-child th.pvtAxisLabel:nth-of-type(${level})`);\n        } else {\n            return table.find(`thead tr:nth-child(${level}) th.pvtAxisLabel`);\n        }\n    };\n\n    const getHeader = (table, rows, n) => table.find(rows ? `tbody tr th.row${n}` : `thead th.col${n}`);\n\n    const rowGetter = function (table) {\n        const selecttion = table.find('tbody tr');\n        return n => $(selecttion[n]);\n    };\n\n    const colGetter = function (table) {\n        const selecttion = table.find('tr');\n        return n => selecttion.find(`.col${n}`);\n    };\n\n    const showHide = function (getter, keys, nth, offset, show) {\n        const object = childKeysIndices(keys, nth);\n        for (let i in object) {\n            const n = object[i];\n            const row = getter(n + offset);\n            const fn = show ? $.fn.show : $.fn.hide;\n            fn.call(row);\n            if (!row.hasClass('collapsed')) {\n                showHide(getter, keys, n, offset, show);\n            }\n        }\n        return true;\n    };\n\n    const expandRowsGroupAfter = function (cell, rows, keys, nth) {\n        const table = $(cell).closest('table');\n        const initIndex = childIndex(cell.parentNode);\n        const getter = rowGetter(table);\n        const row = getter(nth);\n\n        const insertPoint = row.hasClass('collapsed') ? getter(cell._old) : row;\n        if (!row.hasClass('collapsed')) {\n            cell._old = childIndex(cell.parentNode);\n        }\n        insertPoint.prepend(cell);\n\n        const object = parentKeysIndices(keys, nth);\n        for (let i in object) {\n            const p = object[i];\n            const parent = (getHeader(table, rows, p))[0];\n            const parentIndex = childIndex(parent.parentNode);\n            parent._old = parent._old != null ? parent._old : parentIndex;\n            if ((parent._old === initIndex) && (parent.rowSpan === 1)) {\n                parent._old -= initIndex - childIndex(cell.parentNode);\n            }\n\n            if (initIndex === parentIndex) {\n                insertPoint.prepend(parent);\n            }\n        }\n\n        return expandWithSpan(cell, rows, keys, nth);\n    };\n\n    const expandRowCol = function (cell, rows, keys, nth, parent) {\n        const table = $(cell).closest('table');\n        const getter = rows ? rowGetter(table) : colGetter(table);\n        const span = rows ? 'rowSpan' : 'colSpan';\n\n        const offset = rows && (this.aggregator.length > 1) ? 1 : 0;\n        if ((parent != null ? parent[span] : undefined) !== 1) {\n            showHide(getter, keys, nth, offset, getter(nth + offset).hasClass('collapsed'));\n        }\n        getter(nth + offset).toggleClass('collapsed');\n        return $(cell).toggleClass('open close');\n    };\n\n    const expandAll = function (pivotData, table, level, rows, expand) {\n        let i;\n        if (expand && (level > 1)) {\n            getAxis(table, rows, level - 1).removeClass('close').addClass('open');\n            expandAll(pivotData, table, level - 1, rows, expand);\n        }\n\n        const levels = (rows ? pivotData.rowAttrs : pivotData.colAttrs).length - 1;\n        if (!expand && (level < levels)) {\n            let asc, end, start;\n            for (start = level + 1, i = start, end = levels, asc = start <= end; asc ? i <= end : i >= end; asc ? i++ : i--) {\n                getAxis(table, rows, i).removeClass('open').addClass('close');\n            }\n        }\n\n        const keys = rows ? pivotData.rowKeys : pivotData.colKeys;\n        const object = levelKeysIndices(keys, level);\n        for (i in object) {\n            const n = object[i];\n            const el = getHeader(table, rows, n);\n            if (expand === el.hasClass('close')) {\n                el.trigger('click');\n            }\n        }\n        return null;\n    };\n\n    const getExpandHandler = (keys, rows, handler) => (function (ev) {\n        const match = ev.target.className.match(rows ? /row(\\d+)/ : /col(\\d+)/);\n        if (match) {\n            return handler(ev.target, rows, keys, +match[1]);\n        }\n    });\n\n    return getExpandAllHandler = (pivotData, level, rows) => (function (ev) {\n        expandAll(pivotData, $(ev.target).closest('table'), level + 1, rows, $(ev.target).hasClass('close'));\n        return $(ev.target).toggleClass('open close');\n    });\n})(jQuery);\n\n"]}