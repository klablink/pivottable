{"version":3,"sources":["c3_renderers.js"],"names":["$","let","c3","exports","module","require","define","amd","_c3","window","makeC3Chart","chartOpts","pivotData","opts","colKey","columns","groupByTitle","hAxisTitle","rowKey","scatterData","series","titleText","vAxisTitle","y","c","x","extend","localeStrings","vs","by","size","width","innerWidth","height","innerHeight","type","horizontal","stacked","rowKeys","getRowKeys","colKeys","length","push","getColKeys","headers","map","h","join","rotationAngle","fullAggName","aggregatorName","valAttrs","t","attrs","rowAttrs","concat","colAttrs","slice","vals","agg","getAggregator","value","numCharsInHAxis","Array","from","rowHeader","row","val","parseFloat","isFinite","title","style","text","formatter","format","params","axis","rotated","label","tick","rotate","multiline","data","order","tooltip","grouped","color","pattern","xs","numSeries","s","dataColumns","fit","legend","show","name","a","b","d","e","categories","v","shift","unshift","rows","result","groups","renderArea","appendTo","bindto","generate","detach","remove","append","pivotUtilities","c3_renderers","Horizontal Bar Chart","Horizontal Stacked Bar Chart","Bar Chart","Stacked Bar Chart","Line Chart","Area Chart","Scatter Chart","jQuery"],"mappings":"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","file":"c3_renderers.min.js","sourcesContent":["\n(function ($) {\n\n    let c3;\n    if ((typeof exports === 'object') && (typeof module === 'object')) { // CommonJS\n        c3 = require('c3');\n    } else if ((typeof define === 'function') && define.amd) { // AMD\n        define(['c3'], (_c3) => (c3 = _c3));\n    } else {\n        c3 = window.c3;\n    }\n\n    const makeC3Chart = function (chartOpts) {\n        if (chartOpts == null) {\n            chartOpts = {};\n        }\n        return function (pivotData, opts) {\n            let colKey, columns, groupByTitle, hAxisTitle, rowKey, scatterData, series, titleText, vAxisTitle, y;\n            let c, x;\n            const defaults = {\n                localeStrings: { vs: 'vs', by: 'by' },\n                c3: {},\n            };\n\n            opts = $.extend(true, {}, defaults, opts);\n            if (opts.c3.size == null) {\n                opts.c3.size = {};\n            }\n            if (opts.c3.size.width == null) {\n                opts.c3.size.width = window.innerWidth / 1.4;\n            }\n            if (opts.c3.size.height == null) {\n                opts.c3.size.height = (window.innerHeight / 1.4) - 50;\n            }\n            if (chartOpts.type == null) {\n                chartOpts.type = 'line';\n            }\n            if (chartOpts.horizontal == null) {\n                chartOpts.horizontal = false;\n            }\n            if (chartOpts.stacked == null) {\n                chartOpts.stacked = false;\n            }\n\n            const rowKeys = pivotData.getRowKeys();\n            if (rowKeys.length === 0) {\n                rowKeys.push([]);\n            }\n            const colKeys = pivotData.getColKeys();\n            if (colKeys.length === 0) {\n                colKeys.push([]);\n            }\n\n            let headers = colKeys.map((h) => h.join('-'));\n            let rotationAngle = 0;\n\n            let fullAggName = pivotData.aggregatorName;\n            if (pivotData.valAttrs.length) {\n                fullAggName += `(${pivotData.valAttrs.join(', ')})`;\n            }\n\n            if (chartOpts.type === 'scatter') {\n                scatterData = { x: {}, y: {}, t: {} };\n                const attrs = pivotData.rowAttrs.concat(pivotData.colAttrs);\n                vAxisTitle = attrs[0] != null ? attrs[0] : '';\n                hAxisTitle = attrs[1] != null ? attrs[1] : '';\n                groupByTitle = attrs.slice(2).join('-');\n                titleText = vAxisTitle;\n                if (hAxisTitle !== '') {\n                    titleText += ` ${opts.localeStrings.vs} ${hAxisTitle}`;\n                }\n                if (groupByTitle !== '') {\n                    titleText += ` ${opts.localeStrings.by} ${groupByTitle}`;\n                }\n                for (rowKey of rowKeys) {\n                    for (colKey of colKeys) {\n                        var agg = pivotData.getAggregator(rowKey, colKey);\n                        if (agg.value() != null) {\n                            var vals = rowKey.concat(colKey);\n                            series = vals.slice(2).join('-');\n                            if (series === '') {\n                                series = 'series';\n                            }\n                            if (scatterData.x[series] == null) {\n                                scatterData.x[series] = [];\n                            }\n                            if (scatterData.y[series] == null) {\n                                scatterData.y[series] = [];\n                            }\n                            y = vals[0] != null ? vals[0] : 0;\n                            x = vals[1] != null ? vals[1] : 0;\n                            scatterData.y[series].push(y);\n                            scatterData.x[series].push(x);\n                            if (scatterData.t[series] == null) {\n                                scatterData.t[series] = {};\n                            }\n                            if (scatterData.t[series][x] == null) {\n                                scatterData.t[series][x] = {};\n                            }\n                            scatterData.t[series][x][y] = agg.value();\n                        }\n                    }\n                }\n            } else {\n                let numCharsInHAxis = 0;\n                for (x of Array.from(headers)) {\n                    numCharsInHAxis += x.length;\n                }\n                if (numCharsInHAxis > 50) {\n                    rotationAngle = 45;\n                }\n\n                columns = [];\n                for (rowKey of rowKeys) {\n                    var rowHeader = rowKey.join('-');\n                    var row = [rowHeader === '' ? fullAggName : rowHeader];\n                    for (colKey of Array.from(colKeys)) {\n                        var val = parseFloat(pivotData.getAggregator(rowKey, colKey).value());\n                        if (isFinite(val)) {\n                            row.push(val);\n                        } else {\n                            row.push(null);\n                        }\n                    }\n                    columns.push(row);\n                }\n\n                vAxisTitle = fullAggName;\n\n                if (chartOpts.horizontal) {\n                    hAxisTitle = pivotData.rowAttrs.join('-');\n                    groupByTitle = pivotData.colAttrs.join('-');\n                } else {\n                    hAxisTitle = pivotData.colAttrs.join('-');\n                    groupByTitle = pivotData.rowAttrs.join('-');\n                }\n                titleText = fullAggName;\n                if (hAxisTitle !== '') {\n                    titleText += ` ${opts.localeStrings.vs} ${hAxisTitle}`;\n                }\n                if (groupByTitle !== '') {\n                    titleText += ` ${opts.localeStrings.by} ${groupByTitle}`;\n                }\n            }\n\n            const title = $('<p>', { style: 'text-align: center; font-weight: bold' });\n            title.text(titleText);\n\n            const formatter = pivotData.getAggregator([], []).format;\n\n            let params = {\n                axis: {\n                    rotated: chartOpts.horizontal,\n                    y: {\n                        label: vAxisTitle,\n                        tick: {},\n                    },\n                    x: {\n                        label: hAxisTitle,\n                        tick: {\n                            rotate: rotationAngle,\n                            multiline: false,\n                        },\n                    },\n                },\n                data: {\n                    type: chartOpts.type,\n                    order: null,\n                },\n                tooltip: {\n                    grouped: false,\n                },\n                color: {\n                    pattern: ['#3366cc', '#dc3912', '#ff9900', '#109618',\n                        '#990099', '#0099c6', '#dd4477', '#66aa00',\n                        '#b82e2e', '#316395', '#994499', '#22aa99',\n                        '#aaaa11', '#6633cc', '#e67300', '#8b0707',\n                        '#651067', '#329262', '#5574a6', '#3b3eac'],\n                },\n            };\n\n\n            params = $.extend(true, {}, params, opts.c3);\n            if (chartOpts.type === 'scatter') {\n                const xs = {};\n                let numSeries = 0;\n                const dataColumns = [];\n                for (var s in scatterData.x) {\n                    numSeries += 1;\n                    xs[s] = s + '_x';\n                    dataColumns.push([s + '_x'].concat(scatterData.x[s]));\n                    dataColumns.push([s].concat(scatterData.y[s]));\n                }\n                params.data.xs = xs;\n                params.data.columns = dataColumns;\n                params.axis.x.tick = { fit: false };\n                if (numSeries === 1) {\n                    params.legend = { show: false };\n                }\n                params.tooltip.format = {\n                    title() {\n                        return fullAggName;\n                    },\n                    name() {\n                        return '';\n                    },\n                    value(a, b, c, d, e) {\n                        ({ name: series, value: y, x } = e[0]);\n                        return formatter(scatterData.t[series][x][y]);\n                    },\n                };\n            } else {\n                let categories;\n                params.axis.x.type = 'category';\n                if (params.axis.y.tick.format == null) {\n                    params.axis.y.tick.format = v => formatter(v);\n                }\n                params.tooltip.format = {\n                    value(v) {\n                        return formatter(v);\n                    },\n                };\n\n                if (chartOpts.horizontal) {\n                    categories = [];\n                    for (c of Array.from(columns)) {\n                        categories.push(c.shift());\n                    }\n\n                    if ((categories.length === 1) && (categories[0] === fullAggName)) {\n                        categories = [''];\n                    }\n\n                    params.axis.x.categories = categories;\n                    if ((headers.length === 1) && (headers[0] === '')) {\n                        headers = [fullAggName];\n                    }\n\n                    columns.unshift(headers);\n                    params.data.rows = columns;\n                } else {\n                    params.axis.x.categories = headers;\n                    params.data.columns = columns;\n                }\n            }\n\n\n            if (chartOpts.stacked) {\n                if (chartOpts.horizontal) {\n                    const result = [];\n                    for (x of Array.from(colKeys)) {\n                        result.push(x.join('-'));\n                    }\n\n                    params.data.groups = [result];\n                } else {\n                    const result = [];\n                    for (x of rowKeys) {\n                        result.push(x.join('-'));\n                    }\n\n                    params.data.groups = [result];\n                }\n            }\n\n            const renderArea = $('<div>', { style: 'display:none;' }).appendTo($('body'));\n            const result = $('<div>').appendTo(renderArea);\n            params.bindto = result[0];\n            c3.generate(params);\n            result.detach();\n            renderArea.remove();\n            return $('<div>').append(title, result);\n        };\n    };\n\n    return $.pivotUtilities.c3_renderers = {\n        'Horizontal Bar Chart': makeC3Chart({ type: 'bar', horizontal: true }),\n        'Horizontal Stacked Bar Chart': makeC3Chart({ type: 'bar', stacked: true, horizontal: true }),\n        'Bar Chart': makeC3Chart({ type: 'bar' }),\n        'Stacked Bar Chart': makeC3Chart({ type: 'bar', stacked: true }),\n        'Line Chart': makeC3Chart(),\n        'Area Chart': makeC3Chart({ type: 'area', stacked: true }),\n        'Scatter Chart': makeC3Chart({ type: 'scatter' }),\n    };\n})(jQuery);\n"]}