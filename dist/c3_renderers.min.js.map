{"version":3,"sources":["c3_renderers.js"],"names":["$","makeC3Chart","chartOpts","pivotData","opts","extend","localeStrings","vs","by","c3","size","width","window","innerWidth","height","innerHeight","type","horizontal","stacked","y","c","x","rowKeys","getRowKeys","colKeys","length","push","getColKeys","headers","Array","from","map","h","join","rotationAngle","fullAggName","aggregatorName","valAttrs","concat","scatterData","t","attrs","rowAttrs","colAttrs","vAxisTitle","hAxisTitle","groupByTitle","slice","titleText","_i","_Array$from","rowKey","_i2","_Array$from2","vals","series","colKey","agg","getAggregator","value","numCharsInHAxis","_i3","_Array$from3","columns","_i4","_Array$from4","rowHeader","row","_i5","_Array$from5","val","parseFloat","isFinite","title","style","formatter","text","format","params","axis","rotated","label","tick","rotate","multiline","data","order","tooltip","grouped","color","pattern","s","xs","numSeries","dataColumns","fit","legend","show","name","a","b","d","e","_e$","v","categories","result1","_i6","_Array$from6","shift","unshift","rows","groups","result2","_i7","_Array$from7","result3","_i8","_Array$from8","renderArea","appendTo","result","bindto","generate","detach","remove","append","exports","_typeof","module","require","define","amd","_c3","pivotUtilities","c3_renderers","Horizontal Bar Chart","Horizontal Stacked Bar Chart","Bar Chart","Stacked Bar Chart","Line Chart","Area Chart","Scatter Chart","jQuery"],"mappings":"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","file":"c3_renderers.min.js","sourcesContent":["/*\n * decaffeinate suggestions:\n * DS101: Remove unnecessary use of Array.from\n * DS102: Remove unnecessary code created because of implicit returns\n * DS205: Consider reworking code to avoid use of IIFEs\n * DS207: Consider shorter variations of null checks\n * Full docs: https://github.com/decaffeinate/decaffeinate/blob/main/docs/suggestions.md\n */\n\n(function ($) {\n\n    let c3;\n    if ((typeof exports === 'object') && (typeof module === 'object')) { // CommonJS\n        c3 = require('c3');\n    } else if ((typeof define === 'function') && define.amd) { // AMD\n        define([ 'c3'], (_c3) => (c3 = _c3));\n    } else {\n        c3 = window.c3;\n    }\n\n    const makeC3Chart = function (chartOpts) {\n        if (chartOpts == null) {\n            chartOpts = {};\n        }\n        return function (pivotData, opts) {\n            let colKey, columns, groupByTitle, hAxisTitle, rowKey, scatterData, series, titleText, vAxisTitle, y;\n            let c, x;\n            const defaults = {\n                localeStrings: { vs: 'vs', by: 'by' },\n                c3: {},\n            };\n\n            opts = $.extend(true, {}, defaults, opts);\n            if (opts.c3.size == null) {\n                opts.c3.size = {};\n            }\n            if (opts.c3.size.width == null) {\n                opts.c3.size.width = window.innerWidth / 1.4;\n            }\n            if (opts.c3.size.height == null) {\n                opts.c3.size.height = (window.innerHeight / 1.4) - 50;\n            }\n            if (chartOpts.type == null) {\n                chartOpts.type = 'line';\n            }\n            if (chartOpts.horizontal == null) {\n                chartOpts.horizontal = false;\n            }\n            if (chartOpts.stacked == null) {\n                chartOpts.stacked = false;\n            }\n\n            const rowKeys = pivotData.getRowKeys();\n            if (rowKeys.length === 0) {\n                rowKeys.push([]);\n            }\n            const colKeys = pivotData.getColKeys();\n            if (colKeys.length === 0) {\n                colKeys.push([]);\n            }\n\n            let headers = (Array.from(colKeys).map((h) => h.join('-')));\n            let rotationAngle = 0;\n\n            let fullAggName = pivotData.aggregatorName;\n            if (pivotData.valAttrs.length) {\n                fullAggName += `(${pivotData.valAttrs.join(', ')})`;\n            }\n\n            if (chartOpts.type === 'scatter') {\n                scatterData = { x: {}, y: {}, t: {} };\n                const attrs = pivotData.rowAttrs.concat(pivotData.colAttrs);\n                vAxisTitle = attrs[0] != null ? attrs[0] : '';\n                hAxisTitle = attrs[1] != null ? attrs[1] : '';\n                groupByTitle = attrs.slice(2).join('-');\n                titleText = vAxisTitle;\n                if (hAxisTitle !== '') {\n                    titleText += ` ${opts.localeStrings.vs} ${hAxisTitle}`;\n                }\n                if (groupByTitle !== '') {\n                    titleText += ` ${opts.localeStrings.by} ${groupByTitle}`;\n                }\n                for (rowKey of Array.from(rowKeys)) {\n                    for (colKey of Array.from(colKeys)) {\n                        var agg = pivotData.getAggregator(rowKey, colKey);\n                        if (agg.value() != null) {\n                            var vals = rowKey.concat(colKey);\n                            series = vals.slice(2).join('-');\n                            if (series === '') {\n                                series = 'series';\n                            }\n                            if (scatterData.x[series] == null) {\n                                scatterData.x[series] = [];\n                            }\n                            if (scatterData.y[series] == null) {\n                                scatterData.y[series] = [];\n                            }\n                            y = vals[0] != null ? vals[0] : 0;\n                            x = vals[1] != null ? vals[1] : 0;\n                            scatterData.y[series].push(y);\n                            scatterData.x[series].push(x);\n                            if (scatterData.t[series] == null) {\n                                scatterData.t[series] = {};\n                            }\n                            if (scatterData.t[series][x] == null) {\n                                scatterData.t[series][x] = {};\n                            }\n                            scatterData.t[series][x][y] = agg.value();\n                        }\n                    }\n                }\n            } else {\n                let numCharsInHAxis = 0;\n                for (x of Array.from(headers)) {\n                    numCharsInHAxis += x.length;\n                }\n                if (numCharsInHAxis > 50) {\n                    rotationAngle = 45;\n                }\n\n                columns = [];\n                for (rowKey of Array.from(rowKeys)) {\n                    var rowHeader = rowKey.join('-');\n                    var row = [rowHeader === '' ? fullAggName : rowHeader];\n                    for (colKey of Array.from(colKeys)) {\n                        var val = parseFloat(pivotData.getAggregator(rowKey, colKey).value());\n                        if (isFinite(val)) {\n                            row.push(val);\n                        } else {\n                            row.push(null);\n                        }\n                    }\n                    columns.push(row);\n                }\n\n                vAxisTitle = fullAggName;\n\n                if (chartOpts.horizontal) {\n                    hAxisTitle = pivotData.rowAttrs.join('-');\n                    groupByTitle = pivotData.colAttrs.join('-');\n                } else {\n                    hAxisTitle = pivotData.colAttrs.join('-');\n                    groupByTitle = pivotData.rowAttrs.join('-');\n                }\n                titleText = fullAggName;\n                if (hAxisTitle !== '') {\n                    titleText += ` ${opts.localeStrings.vs} ${hAxisTitle}`;\n                }\n                if (groupByTitle !== '') {\n                    titleText += ` ${opts.localeStrings.by} ${groupByTitle}`;\n                }\n            }\n\n            const title = $('<p>', { style: 'text-align: center; font-weight: bold' });\n            title.text(titleText);\n\n            const formatter = pivotData.getAggregator([], []).format;\n\n            let params = {\n                axis: {\n                    rotated: chartOpts.horizontal,\n                    y: {\n                        label: vAxisTitle,\n                        tick: {},\n                    },\n                    x: {\n                        label: hAxisTitle,\n                        tick: {\n                            rotate: rotationAngle,\n                            multiline: false,\n                        },\n                    },\n                },\n                data: {\n                    type: chartOpts.type,\n                    order: null,\n                },\n                tooltip: {\n                    grouped: false,\n                },\n                color: {\n                    pattern: ['#3366cc', '#dc3912', '#ff9900', '#109618',\n                        '#990099', '#0099c6', '#dd4477', '#66aa00',\n                        '#b82e2e', '#316395', '#994499', '#22aa99',\n                        '#aaaa11', '#6633cc', '#e67300', '#8b0707',\n                        '#651067', '#329262', '#5574a6', '#3b3eac'],\n                },\n            };\n\n\n            params = $.extend(true, {}, params, opts.c3);\n            if (chartOpts.type === 'scatter') {\n                const xs = {};\n                let numSeries = 0;\n                const dataColumns = [];\n                for (var s in scatterData.x) {\n                    numSeries += 1;\n                    xs[s] = s + '_x';\n                    dataColumns.push([s + '_x'].concat(scatterData.x[s]));\n                    dataColumns.push([s].concat(scatterData.y[s]));\n                }\n                params.data.xs = xs;\n                params.data.columns = dataColumns;\n                params.axis.x.tick = { fit: false };\n                if (numSeries === 1) {\n                    params.legend = { show: false };\n                }\n                params.tooltip.format = {\n                    title() {\n                        return fullAggName;\n                    },\n                    name() {\n                        return '';\n                    },\n                    value(a, b, c, d, e) {\n                        ({ name: series, value: y, x } = e[0]);\n                        return formatter(scatterData.t[series][x][y]);\n                    },\n                };\n            } else {\n                let categories;\n                params.axis.x.type = 'category';\n                if (params.axis.y.tick.format == null) {\n                    params.axis.y.tick.format = v => formatter(v);\n                }\n                params.tooltip.format = {\n                    value(v) {\n                        return formatter(v);\n                    },\n                };\n\n                if (chartOpts.horizontal) {\n                    categories = ((() => {\n                        const result1 = [];\n                        for (c of Array.from(columns)) {\n                            result1.push(c.shift());\n                        }\n                        return result1;\n                    })());\n                    if ((categories.length === 1) && (categories[0] === fullAggName)) {\n                        categories = [''];\n                    }\n                    params.axis.x.categories = categories;\n                    if ((headers.length === 1) && (headers[0] === '')) {\n                        headers = [fullAggName];\n                    }\n                    columns.unshift(headers);\n                    params.data.rows = columns;\n                } else {\n                    params.axis.x.categories = headers;\n                    params.data.columns = columns;\n                }\n            }\n\n\n            if (chartOpts.stacked) {\n                if (chartOpts.horizontal) {\n                    params.data.groups = [(() => {\n                        const result2 = [];\n                        for (x of Array.from(colKeys)) {\n                            result2.push(x.join('-'));\n                        }\n                        return result2;\n                    })()];\n                } else {\n                    params.data.groups = [(() => {\n                        const result3 = [];\n                        for (x of Array.from(rowKeys)) {\n                            result3.push(x.join('-'));\n                        }\n                        return result3;\n                    })()];\n                }\n            }\n\n            const renderArea = $('<div>', { style: 'display:none;' }).appendTo($('body'));\n            const result = $('<div>').appendTo(renderArea);\n            params.bindto = result[0];\n            c3.generate(params);\n            result.detach();\n            renderArea.remove();\n            return $('<div>').append(title, result);\n        };\n    };\n\n    return $.pivotUtilities.c3_renderers = {\n        'Horizontal Bar Chart': makeC3Chart({ type: 'bar', horizontal: true }),\n        'Horizontal Stacked Bar Chart': makeC3Chart({ type: 'bar', stacked: true, horizontal: true }),\n        'Bar Chart': makeC3Chart({ type: 'bar' }),\n        'Stacked Bar Chart': makeC3Chart({ type: 'bar', stacked: true }),\n        'Line Chart': makeC3Chart(),\n        'Area Chart': makeC3Chart({ type: 'area', stacked: true }),\n        'Scatter Chart': makeC3Chart({ type: 'scatter' }),\n    };\n})(jQuery);\n"]}