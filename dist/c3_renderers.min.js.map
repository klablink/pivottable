{"version":3,"sources":["c3_renderers.js"],"names":["callWithJQuery","$","c3","makeC3Chart","chartOpts","pivotData","opts","extend","localeStrings","vs","by","size","width","window","innerWidth","height","innerHeight","type","horizontal","stacked","y","c","x","rowKeys","getRowKeys","colKeys","length","push","getColKeys","headers","Array","from","map","h","join","rotationAngle","fullAggName","aggregatorName","valAttrs","concat","scatterData","t","attrs","rowAttrs","colAttrs","vAxisTitle","hAxisTitle","groupByTitle","slice","titleText","_i","_Array$from","rowKey","_i2","_Array$from2","vals","series","colKey","agg","getAggregator","value","numCharsInHAxis","_i3","_Array$from3","columns","_i4","_Array$from4","rowHeader","row","_i5","_Array$from5","val","parseFloat","isFinite","title","style","formatter","text","format","params","axis","rotated","label","tick","rotate","multiline","data","order","tooltip","grouped","color","pattern","s","xs","numSeries","dataColumns","fit","legend","show","name","a","b","d","e","_e$","v","categories","result1","_i6","_Array$from6","shift","unshift","rows","groups","result2","_i7","_Array$from7","result3","_i8","_Array$from8","renderArea","appendTo","result","bindto","generate","detach","remove","append","pivotUtilities","c3_renderers","Horizontal Bar Chart","Horizontal Stacked Bar Chart","Bar Chart","Stacked Bar Chart","Line Chart","Area Chart","Scatter Chart"],"mappings":"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","file":"c3_renderers.min.js","sourcesContent":["// TODO: This file was created by bulk-decaffeinate.\n// Sanity-check the conversion and remove this comment.\n/*\n * decaffeinate suggestions:\n * DS101: Remove unnecessary use of Array.from\n * DS102: Remove unnecessary code created because of implicit returns\n * DS205: Consider reworking code to avoid use of IIFEs\n * DS207: Consider shorter variations of null checks\n * Full docs: https://github.com/decaffeinate/decaffeinate/blob/main/docs/suggestions.md\n */\n\ncallWithJQuery(function($, c3) {\n\n    const makeC3Chart = function(chartOpts) { if (chartOpts == null) { chartOpts = {}; } return function(pivotData, opts) {\n        let colKey, columns, groupByTitle, hAxisTitle, rowKey, scatterData, series, titleText, vAxisTitle, y;\n        let c, x;\n        const defaults = {\n            localeStrings: {vs: \"vs\", by: \"by\"},\n            c3: {}\n        };\n\n        opts = $.extend(true, {}, defaults, opts);\n        if (opts.c3.size == null) { opts.c3.size = {}; }\n        if (opts.c3.size.width == null) { opts.c3.size.width = window.innerWidth / 1.4; }\n        if (opts.c3.size.height == null) { opts.c3.size.height = (window.innerHeight / 1.4) - 50; }\n        if (chartOpts.type == null) { chartOpts.type = \"line\"; }\n        if (chartOpts.horizontal == null) { chartOpts.horizontal = false; }\n        if (chartOpts.stacked == null) { chartOpts.stacked = false; }\n\n        const rowKeys = pivotData.getRowKeys();\n        if (rowKeys.length === 0) { rowKeys.push([]); }\n        const colKeys = pivotData.getColKeys();\n        if (colKeys.length === 0) { colKeys.push([]); }\n\n        let headers = (Array.from(colKeys).map((h) => h.join(\"-\")));\n        let rotationAngle = 0;\n\n        let fullAggName = pivotData.aggregatorName;\n        if (pivotData.valAttrs.length) {\n            fullAggName += `(${pivotData.valAttrs.join(\", \")})`;\n        }\n\n        if (chartOpts.type === \"scatter\") {\n            scatterData = {x:{}, y:{}, t:{}};\n            const attrs = pivotData.rowAttrs.concat(pivotData.colAttrs);\n            vAxisTitle = attrs[0] != null ? attrs[0] : \"\";\n            hAxisTitle = attrs[1] != null ? attrs[1] : \"\";\n            groupByTitle = attrs.slice(2).join(\"-\");\n            titleText = vAxisTitle;\n            if (hAxisTitle !== \"\") { titleText += ` ${opts.localeStrings.vs} ${hAxisTitle}`; }\n            if (groupByTitle !== \"\") { titleText += ` ${opts.localeStrings.by} ${groupByTitle}`; }\n            for (rowKey of Array.from(rowKeys)) {\n                for (colKey of Array.from(colKeys)) {\n                    var agg = pivotData.getAggregator(rowKey, colKey);\n                    if (agg.value() != null) {\n                        var vals = rowKey.concat(colKey);\n                        series = vals.slice(2).join(\"-\");\n                        if (series === \"\") { series = \"series\"; }\n                        if (scatterData.x[series] == null) { scatterData.x[series] = []; }\n                        if (scatterData.y[series] == null) { scatterData.y[series] = []; }\n                        y = vals[0] != null ? vals[0] : 0;\n                        x = vals[1] != null ? vals[1] : 0;\n                        scatterData.y[series].push(y);\n                        scatterData.x[series].push(x);\n                        if (scatterData.t[series] == null) { scatterData.t[series] = {}; }\n                        if (scatterData.t[series][x] == null) { scatterData.t[series][x] = {}; }\n                        scatterData.t[series][x][y] = agg.value();\n                    }\n                }\n            }\n        } else {\n            let numCharsInHAxis = 0;\n            for (x of Array.from(headers)) {\n                numCharsInHAxis += x.length;\n            }\n            if (numCharsInHAxis > 50) {\n                rotationAngle = 45;\n            }\n\n            columns = [];\n            for (rowKey of Array.from(rowKeys)) {\n                var rowHeader = rowKey.join(\"-\");\n                var row = [rowHeader === \"\" ? fullAggName : rowHeader];\n                for (colKey of Array.from(colKeys)) {\n                    var val = parseFloat(pivotData.getAggregator(rowKey, colKey).value());\n                    if (isFinite(val)) {\n                        row.push(val);\n                    } else {\n                        row.push(null);\n                    }\n                }\n                columns.push(row);\n            }\n\n            vAxisTitle = fullAggName;\n\n            if (chartOpts.horizontal) {\n                hAxisTitle = pivotData.rowAttrs.join(\"-\");\n                groupByTitle = pivotData.colAttrs.join(\"-\");\n            } else {\n                hAxisTitle = pivotData.colAttrs.join(\"-\");\n                groupByTitle = pivotData.rowAttrs.join(\"-\");\n            }\n            titleText = fullAggName;\n            if (hAxisTitle !== \"\") { titleText += ` ${opts.localeStrings.vs} ${hAxisTitle}`; }\n            if (groupByTitle !== \"\") { titleText += ` ${opts.localeStrings.by} ${groupByTitle}`; }\n        }\n\n        const title = $(\"<p>\", {style: \"text-align: center; font-weight: bold\"});\n        title.text(titleText);\n\n        const formatter = pivotData.getAggregator([], []).format;\n\n        let params = {\n            axis: {\n                rotated: chartOpts.horizontal,\n                y: {\n                    label: vAxisTitle,\n                    tick: {}\n                },\n                x: {\n                    label: hAxisTitle,\n                    tick: {\n                        rotate: rotationAngle,\n                        multiline: false\n                    }\n                }\n            },\n            data: {\n                type: chartOpts.type,\n                order: null\n            },\n            tooltip: {\n                grouped: false\n            },\n            color: {\n                pattern: [ \"#3366cc\", \"#dc3912\", \"#ff9900\", \"#109618\",\n                           \"#990099\", \"#0099c6\", \"#dd4477\", \"#66aa00\",\n                           \"#b82e2e\", \"#316395\", \"#994499\", \"#22aa99\",\n                           \"#aaaa11\", \"#6633cc\", \"#e67300\", \"#8b0707\",\n                           \"#651067\", \"#329262\", \"#5574a6\", \"#3b3eac\" ]\n            }\n        };\n\n\n        params = $.extend(true, {}, params, opts.c3);\n        if (chartOpts.type === \"scatter\") {\n            const xs = {};\n            let numSeries = 0;\n            const dataColumns = [];\n            for (var s in scatterData.x) {\n                numSeries += 1;\n                xs[s] = s+\"_x\";\n                dataColumns.push([s+\"_x\"].concat(scatterData.x[s]));\n                dataColumns.push([s].concat(scatterData.y[s]));\n            }\n            params.data.xs = xs;\n            params.data.columns = dataColumns;\n            params.axis.x.tick = {fit: false};\n            if (numSeries === 1) {\n                params.legend = {show: false};\n            }\n            params.tooltip.format = {\n                title() { return fullAggName; },\n                name() { return \"\"; },\n                value(a,b,c,d,e) {\n                    ({name: series, value: y, x} = e[0]);\n                    return formatter(scatterData.t[series][x][y]);\n                }\n            };\n        } else {\n            let categories;\n            params.axis.x.type= 'category';\n            if (params.axis.y.tick.format == null) { params.axis.y.tick.format = v => formatter(v); }\n            params.tooltip.format = {value(v) { return formatter(v); }};\n\n            if (chartOpts.horizontal) {\n                categories = ((() => {\n                    const result1 = [];\n                    for (c of Array.from(columns)) {                         result1.push(c.shift());\n                    }\n                    return result1;\n                })());\n                if ((categories.length === 1) && (categories[0] === fullAggName)) {\n                    categories = [\"\"];\n                }\n                params.axis.x.categories = categories;\n                if ((headers.length === 1) && (headers[0] === \"\")) {\n                    headers = [fullAggName];\n                }\n                columns.unshift(headers);\n                params.data.rows = columns;\n            } else {\n                params.axis.x.categories = headers;\n                params.data.columns = columns;\n            }\n        }\n\n\n        if (chartOpts.stacked) {\n            if (chartOpts.horizontal) {\n                params.data.groups = [(() => {\n                    const result2 = [];\n                    for (x of Array.from(colKeys)) {                         result2.push(x.join(\"-\"));\n                    }\n                    return result2;\n                })()];\n            } else {\n                params.data.groups = [(() => {\n                    const result3 = [];\n                    for (x of Array.from(rowKeys)) {                         result3.push(x.join(\"-\"));\n                    }\n                    return result3;\n                })()];\n            }\n        }\n\n        const renderArea = $(\"<div>\", {style: \"display:none;\"}).appendTo($(\"body\"));\n        const result = $(\"<div>\").appendTo(renderArea);\n        params.bindto = result[0];\n        c3.generate(params);\n        result.detach();\n        renderArea.remove();\n        return $(\"<div>\").append(title, result);\n    }; };\n\n    return $.pivotUtilities.c3_renderers = {\n        \"Horizontal Bar Chart\": makeC3Chart({type: \"bar\", horizontal: true}),\n        \"Horizontal Stacked Bar Chart\": makeC3Chart({type: \"bar\", stacked: true, horizontal: true}),\n        \"Bar Chart\": makeC3Chart({type: \"bar\"}),\n        \"Stacked Bar Chart\": makeC3Chart({type: \"bar\", stacked: true}),\n        \"Line Chart\": makeC3Chart(),\n        \"Area Chart\": makeC3Chart({type: \"area\", stacked: true}),\n        \"Scatter Chart\": makeC3Chart({type: \"scatter\"})\n    };\n});\n"]}