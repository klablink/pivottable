{"version":3,"sources":["c3_renderers.js"],"names":["$","makeC3Chart","chartOpts","pivotData","opts","extend","localeStrings","vs","by","c3","size","width","window","innerWidth","height","innerHeight","type","horizontal","stacked","y","c","x","rowKeys","getRowKeys","colKeys","length","push","getColKeys","headers","map","h","join","rotationAngle","fullAggName","aggregatorName","valAttrs","concat","_step","scatterData","t","attrs","rowAttrs","colAttrs","vAxisTitle","hAxisTitle","groupByTitle","slice","titleText","_iterator","_createForOfIteratorHelper","s","n","done","_step2","rowKey","value","_iterator2","vals","series","colKey","agg","getAggregator","err","e","f","numCharsInHAxis","_i","_Array$from","Array","from","_step3","columns","_iterator3","rowHeader","row","_i2","_Array$from2","val","parseFloat","isFinite","title","style","formatter","text","format","params","axis","rotated","label","tick","rotate","multiline","data","order","tooltip","grouped","color","pattern","xs","numSeries","dataColumns","fit","legend","show","name","a","b","d","_e$","v","categories","_i3","_Array$from3","shift","unshift","rows","result","_i4","_Array$from4","groups","_step4","_iterator4","renderArea","appendTo","bindto","generate","detach","remove","append","exports","_typeof","module","require","define","amd","_c3","pivotUtilities","c3_renderers","Horizontal Bar Chart","Horizontal Stacked Bar Chart","Bar Chart","Stacked Bar Chart","Line Chart","Area Chart","Scatter Chart","jQuery"],"mappings":"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","file":"c3_renderers.min.js","sourcesContent":["\n(function ($) {\n\n    let c3;\n    if ((typeof exports === 'object') && (typeof module === 'object')) { // CommonJS\n        c3 = require('c3');\n    } else if ((typeof define === 'function') && define.amd) { // AMD\n        define(['c3'], (_c3) => (c3 = _c3));\n    } else {\n        c3 = window.c3;\n    }\n\n    const makeC3Chart = function (chartOpts) {\n        if (chartOpts == null) {\n            chartOpts = {};\n        }\n        return function (pivotData, opts) {\n            let colKey, columns, groupByTitle, hAxisTitle, rowKey, scatterData, series, titleText, vAxisTitle, y;\n            let c, x;\n            const defaults = {\n                localeStrings: { vs: 'vs', by: 'by' },\n                c3: {},\n            };\n\n            opts = $.extend(true, {}, defaults, opts);\n            if (opts.c3.size == null) {\n                opts.c3.size = {};\n            }\n            if (opts.c3.size.width == null) {\n                opts.c3.size.width = window.innerWidth / 1.4;\n            }\n            if (opts.c3.size.height == null) {\n                opts.c3.size.height = (window.innerHeight / 1.4) - 50;\n            }\n            if (chartOpts.type == null) {\n                chartOpts.type = 'line';\n            }\n            if (chartOpts.horizontal == null) {\n                chartOpts.horizontal = false;\n            }\n            if (chartOpts.stacked == null) {\n                chartOpts.stacked = false;\n            }\n\n            const rowKeys = pivotData.getRowKeys();\n            if (rowKeys.length === 0) {\n                rowKeys.push([]);\n            }\n            const colKeys = pivotData.getColKeys();\n            if (colKeys.length === 0) {\n                colKeys.push([]);\n            }\n\n            let headers = colKeys.map((h) => h.join('-'));\n            let rotationAngle = 0;\n\n            let fullAggName = pivotData.aggregatorName;\n            if (pivotData.valAttrs.length) {\n                fullAggName += `(${pivotData.valAttrs.join(', ')})`;\n            }\n\n            if (chartOpts.type === 'scatter') {\n                scatterData = { x: {}, y: {}, t: {} };\n                const attrs = pivotData.rowAttrs.concat(pivotData.colAttrs);\n                vAxisTitle = attrs[0] != null ? attrs[0] : '';\n                hAxisTitle = attrs[1] != null ? attrs[1] : '';\n                groupByTitle = attrs.slice(2).join('-');\n                titleText = vAxisTitle;\n                if (hAxisTitle !== '') {\n                    titleText += ` ${opts.localeStrings.vs} ${hAxisTitle}`;\n                }\n                if (groupByTitle !== '') {\n                    titleText += ` ${opts.localeStrings.by} ${groupByTitle}`;\n                }\n                for (rowKey of rowKeys) {\n                    for (colKey of colKeys) {\n                        var agg = pivotData.getAggregator(rowKey, colKey);\n                        if (agg.value() != null) {\n                            var vals = rowKey.concat(colKey);\n                            series = vals.slice(2).join('-');\n                            if (series === '') {\n                                series = 'series';\n                            }\n                            if (scatterData.x[series] == null) {\n                                scatterData.x[series] = [];\n                            }\n                            if (scatterData.y[series] == null) {\n                                scatterData.y[series] = [];\n                            }\n                            y = vals[0] != null ? vals[0] : 0;\n                            x = vals[1] != null ? vals[1] : 0;\n                            scatterData.y[series].push(y);\n                            scatterData.x[series].push(x);\n                            if (scatterData.t[series] == null) {\n                                scatterData.t[series] = {};\n                            }\n                            if (scatterData.t[series][x] == null) {\n                                scatterData.t[series][x] = {};\n                            }\n                            scatterData.t[series][x][y] = agg.value();\n                        }\n                    }\n                }\n            } else {\n                let numCharsInHAxis = 0;\n                for (x of Array.from(headers)) {\n                    numCharsInHAxis += x.length;\n                }\n                if (numCharsInHAxis > 50) {\n                    rotationAngle = 45;\n                }\n\n                columns = [];\n                for (rowKey of rowKeys) {\n                    var rowHeader = rowKey.join('-');\n                    var row = [rowHeader === '' ? fullAggName : rowHeader];\n                    for (colKey of Array.from(colKeys)) {\n                        var val = parseFloat(pivotData.getAggregator(rowKey, colKey).value());\n                        if (isFinite(val)) {\n                            row.push(val);\n                        } else {\n                            row.push(null);\n                        }\n                    }\n                    columns.push(row);\n                }\n\n                vAxisTitle = fullAggName;\n\n                if (chartOpts.horizontal) {\n                    hAxisTitle = pivotData.rowAttrs.join('-');\n                    groupByTitle = pivotData.colAttrs.join('-');\n                } else {\n                    hAxisTitle = pivotData.colAttrs.join('-');\n                    groupByTitle = pivotData.rowAttrs.join('-');\n                }\n                titleText = fullAggName;\n                if (hAxisTitle !== '') {\n                    titleText += ` ${opts.localeStrings.vs} ${hAxisTitle}`;\n                }\n                if (groupByTitle !== '') {\n                    titleText += ` ${opts.localeStrings.by} ${groupByTitle}`;\n                }\n            }\n\n            const title = $('<p>', { style: 'text-align: center; font-weight: bold' });\n            title.text(titleText);\n\n            const formatter = pivotData.getAggregator([], []).format;\n\n            let params = {\n                axis: {\n                    rotated: chartOpts.horizontal,\n                    y: {\n                        label: vAxisTitle,\n                        tick: {},\n                    },\n                    x: {\n                        label: hAxisTitle,\n                        tick: {\n                            rotate: rotationAngle,\n                            multiline: false,\n                        },\n                    },\n                },\n                data: {\n                    type: chartOpts.type,\n                    order: null,\n                },\n                tooltip: {\n                    grouped: false,\n                },\n                color: {\n                    pattern: ['#3366cc', '#dc3912', '#ff9900', '#109618',\n                        '#990099', '#0099c6', '#dd4477', '#66aa00',\n                        '#b82e2e', '#316395', '#994499', '#22aa99',\n                        '#aaaa11', '#6633cc', '#e67300', '#8b0707',\n                        '#651067', '#329262', '#5574a6', '#3b3eac'],\n                },\n            };\n\n\n            params = $.extend(true, {}, params, opts.c3);\n            if (chartOpts.type === 'scatter') {\n                const xs = {};\n                let numSeries = 0;\n                const dataColumns = [];\n                for (var s in scatterData.x) {\n                    numSeries += 1;\n                    xs[s] = s + '_x';\n                    dataColumns.push([s + '_x'].concat(scatterData.x[s]));\n                    dataColumns.push([s].concat(scatterData.y[s]));\n                }\n                params.data.xs = xs;\n                params.data.columns = dataColumns;\n                params.axis.x.tick = { fit: false };\n                if (numSeries === 1) {\n                    params.legend = { show: false };\n                }\n                params.tooltip.format = {\n                    title() {\n                        return fullAggName;\n                    },\n                    name() {\n                        return '';\n                    },\n                    value(a, b, c, d, e) {\n                        ({ name: series, value: y, x } = e[0]);\n                        return formatter(scatterData.t[series][x][y]);\n                    },\n                };\n            } else {\n                let categories;\n                params.axis.x.type = 'category';\n                if (params.axis.y.tick.format == null) {\n                    params.axis.y.tick.format = v => formatter(v);\n                }\n                params.tooltip.format = {\n                    value(v) {\n                        return formatter(v);\n                    },\n                };\n\n                if (chartOpts.horizontal) {\n                    categories = [];\n                    for (c of Array.from(columns)) {\n                        categories.push(c.shift());\n                    }\n\n                    if ((categories.length === 1) && (categories[0] === fullAggName)) {\n                        categories = [''];\n                    }\n\n                    params.axis.x.categories = categories;\n                    if ((headers.length === 1) && (headers[0] === '')) {\n                        headers = [fullAggName];\n                    }\n\n                    columns.unshift(headers);\n                    params.data.rows = columns;\n                } else {\n                    params.axis.x.categories = headers;\n                    params.data.columns = columns;\n                }\n            }\n\n\n            if (chartOpts.stacked) {\n                if (chartOpts.horizontal) {\n                    const result = [];\n                    for (x of Array.from(colKeys)) {\n                        result.push(x.join('-'));\n                    }\n\n                    params.data.groups = [result];\n                } else {\n                    const result = [];\n                    for (x of rowKeys) {\n                        result.push(x.join('-'));\n                    }\n\n                    params.data.groups = [result];\n                }\n            }\n\n            const renderArea = $('<div>', { style: 'display:none;' }).appendTo($('body'));\n            const result = $('<div>').appendTo(renderArea);\n            params.bindto = result[0];\n            c3.generate(params);\n            result.detach();\n            renderArea.remove();\n            return $('<div>').append(title, result);\n        };\n    };\n\n    return $.pivotUtilities.c3_renderers = {\n        'Horizontal Bar Chart': makeC3Chart({ type: 'bar', horizontal: true }),\n        'Horizontal Stacked Bar Chart': makeC3Chart({ type: 'bar', stacked: true, horizontal: true }),\n        'Bar Chart': makeC3Chart({ type: 'bar' }),\n        'Stacked Bar Chart': makeC3Chart({ type: 'bar', stacked: true }),\n        'Line Chart': makeC3Chart(),\n        'Area Chart': makeC3Chart({ type: 'area', stacked: true }),\n        'Scatter Chart': makeC3Chart({ type: 'scatter' }),\n    };\n})(jQuery);\n"]}