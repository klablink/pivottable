{"version":3,"sources":["gchart_renderers.js"],"names":["$","makeGoogleChart","chartType","extraOptions","pivotData","opts","extend","localeStrings","vs","by","gchart","width","window","innerWidth","height","innerHeight","dataTable","hAxisTitle","title","vAxisTitle","rowKeys","getRowKeys","colKeys","length","push","getColKeys","fullAggName","aggregatorName","headers","valAttrs","concat","join","map","h","numCharsInHAxis","unshift","y","dataArray","tree","x","tree2","agg","parseFloat","format","value","google","visualization","DataTable","addColumn","colAttrs","rowAttrs","type","role","addRows","_step","_iterator","_createForOfIteratorHelper","s","n","done","_step2","colKey","row","_iterator2","val","rowKey","getAggregator","isNumeric","toPrecision","toFixed","err","e","f","arrayToDataTable","groupByTitle","options","hAxis","slantedText","vAxis","tooltip","textStyle","fontName","fontSize","result","minValue","legend","position","chartArea","css","wrapper","ChartWrapper","draw","bind","editor","ChartEditor","events","addListener","getChartWrapper","openDialog","pivotUtilities","gchart_renderers","Line Chart","Bar Chart","Stacked Bar Chart","isStacked","Area Chart","Scatter Chart","jQuery"],"mappings":"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","file":"gchart_renderers.min.js","sourcesContent":["(function($) {\n\n    const makeGoogleChart = (chartType, extraOptions) => (function(pivotData, opts) {\n        let agg, dataArray, dataTable, hAxisTitle, title, vAxisTitle;\n        const defaults = {\n            localeStrings: {\n                vs: 'vs',\n                by: 'by'\n            },\n            gchart: {}\n        };\n\n        opts = $.extend(true, {}, defaults, opts);\n        if (opts.gchart.width == null) { opts.gchart.width = window.innerWidth / 1.4; }\n        if (opts.gchart.height == null) { opts.gchart.height = window.innerHeight / 1.4; }\n\n        const rowKeys = pivotData.getRowKeys();\n        if (rowKeys.length === 0) { rowKeys.push([]); }\n        const colKeys = pivotData.getColKeys();\n        if (colKeys.length === 0) { colKeys.push([]); }\n        let fullAggName = pivotData.aggregatorName;\n        if (pivotData.valAttrs.length) {\n            fullAggName += `(${pivotData.valAttrs.join(', ')})`;\n        }\n        const headers = rowKeys.map((h) => h.join('-'));\n        headers.unshift('');\n\n        let numCharsInHAxis = 0;\n        if (chartType === 'ScatterChart') {\n            dataArray = [];\n            for (var y in pivotData.tree) {\n                var tree2 = pivotData.tree[y];\n                for (var x in tree2) {\n                    agg = tree2[x];\n                     dataArray.push([\n                        parseFloat(x),\n                        parseFloat(y),\n                        fullAggName+': \\n'+agg.format(agg.value())\n                        ]);\n                }\n            }\n            dataTable = new google.visualization.DataTable();\n            dataTable.addColumn('number', pivotData.colAttrs.join('-'));\n            dataTable.addColumn('number', pivotData.rowAttrs.join('-'));\n            dataTable.addColumn({type: 'string', role: 'tooltip'});\n            dataTable.addRows(dataArray);\n            hAxisTitle = pivotData.colAttrs.join('-');\n            vAxisTitle = pivotData.rowAttrs.join('-');\n            title = '';\n        } else {\n            dataArray = [headers];\n            for (var colKey of colKeys) {\n                var row = [colKey.join('-')];\n                numCharsInHAxis += row[0].length;\n                for (var rowKey of rowKeys) {\n                    agg = pivotData.getAggregator(rowKey, colKey);\n                    if (agg.value() != null) {\n                        var val = agg.value();\n                        if ($.isNumeric(val)) {\n                            if (val < 1) {\n                                row.push(parseFloat(val.toPrecision(3)));\n                            } else {\n                                row.push(parseFloat(val.toFixed(3)));\n                            }\n                        } else {\n                            row.push(val);\n                        }\n                    } else { row.push(null); }\n                }\n                dataArray.push(row);\n            }\n\n            dataTable = google.visualization.arrayToDataTable(dataArray);\n\n            title = (vAxisTitle = fullAggName);\n            hAxisTitle = pivotData.colAttrs.join('-');\n            if (hAxisTitle !== '') { title += ` ${opts.localeStrings.vs} ${hAxisTitle}`; }\n            const groupByTitle = pivotData.rowAttrs.join('-');\n            if (groupByTitle !== '') { title += ` ${opts.localeStrings.by} ${groupByTitle}`; }\n        }\n\n        let options = {\n            title,\n            hAxis: {title: hAxisTitle, slantedText: numCharsInHAxis > 50},\n            vAxis: {title: vAxisTitle},\n            tooltip: { textStyle: { fontName: 'Arial', fontSize: 12 } }\n        };\n\n        if (chartType === 'ColumnChart') {\n            options.vAxis.minValue = 0;\n        }\n\n        if (chartType === 'ScatterChart') {\n            options.legend = {position: 'none'};\n            options.chartArea = {'width': '80%', 'height': '80%'};\n\n        } else if ((dataArray[0].length === 2) && (dataArray[0][1] ===  '')) {\n            options.legend = {position: 'none'};\n        }\n\n        options = $.extend(true, {}, options, opts.gchart, extraOptions);\n\n        const result = $('<div>').css({width: '100%', height: '100%'});\n        const wrapper = new google.visualization.ChartWrapper({dataTable, chartType, options});\n        wrapper.draw(result[0]);\n        result.bind('dblclick', function() {\n            const editor = new google.visualization.ChartEditor();\n            google.visualization.events.addListener(editor, 'ok', () => editor.getChartWrapper().draw(result[0]));\n            return editor.openDialog(wrapper);\n        });\n        return result;\n    });\n\n    return $.pivotUtilities.gchart_renderers = {\n        'Line Chart': makeGoogleChart('LineChart'),\n        'Bar Chart': makeGoogleChart('ColumnChart'),\n        'Stacked Bar Chart': makeGoogleChart('ColumnChart', {isStacked: true}),\n        'Area Chart': makeGoogleChart('AreaChart', {isStacked: true}),\n        'Scatter Chart': makeGoogleChart('ScatterChart')\n    };\n})(jQuery);\n"]}