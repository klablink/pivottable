{"version":3,"sources":["gchart_renderers.js"],"names":["callWithJQuery","$","makeGoogleChart","chartType","extraOptions","pivotData","opts","extend","localeStrings","vs","by","gchart","width","window","innerWidth","height","innerHeight","dataTable","hAxisTitle","title","vAxisTitle","rowKeys","getRowKeys","colKeys","length","push","getColKeys","fullAggName","aggregatorName","headers","valAttrs","concat","join","Array","from","map","h","numCharsInHAxis","unshift","y","dataArray","tree","x","tree2","agg","parseFloat","format","value","google","visualization","DataTable","addColumn","colAttrs","rowAttrs","type","role","addRows","_i","_Array$from","colKey","row","_i2","_Array$from2","rowKey","getAggregator","val","isNumeric","toPrecision","toFixed","arrayToDataTable","groupByTitle","options","hAxis","slantedText","vAxis","tooltip","textStyle","fontName","fontSize","result","minValue","legend","position","chartArea","css","wrapper","ChartWrapper","draw","bind","editor","ChartEditor","events","addListener","getChartWrapper","openDialog","pivotUtilities","gchart_renderers","Line Chart","Bar Chart","Stacked Bar Chart","isStacked","Area Chart","Scatter Chart"],"mappings":"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","file":"gchart_renderers.min.js","sourcesContent":["// TODO: This file was created by bulk-decaffeinate.\n// Sanity-check the conversion and remove this comment.\n/*\n * decaffeinate suggestions:\n * DS101: Remove unnecessary use of Array.from\n * DS102: Remove unnecessary code created because of implicit returns\n * DS207: Consider shorter variations of null checks\n * Full docs: https://github.com/decaffeinate/decaffeinate/blob/main/docs/suggestions.md\n */\n\ncallWithJQuery(function($) {\n\n    const makeGoogleChart = (chartType, extraOptions) => (function(pivotData, opts) {\n        let agg, dataArray, dataTable, hAxisTitle, title, vAxisTitle;\n        const defaults = {\n            localeStrings: {\n                vs: \"vs\",\n                by: \"by\"\n            },\n            gchart: {}\n        };\n\n        opts = $.extend(true, {}, defaults, opts);\n        if (opts.gchart.width == null) { opts.gchart.width = window.innerWidth / 1.4; }\n        if (opts.gchart.height == null) { opts.gchart.height = window.innerHeight / 1.4; }\n\n        const rowKeys = pivotData.getRowKeys();\n        if (rowKeys.length === 0) { rowKeys.push([]); }\n        const colKeys = pivotData.getColKeys();\n        if (colKeys.length === 0) { colKeys.push([]); }\n        let fullAggName = pivotData.aggregatorName;\n        if (pivotData.valAttrs.length) {\n            fullAggName += `(${pivotData.valAttrs.join(\", \")})`;\n        }\n        const headers = (Array.from(rowKeys).map((h) => h.join(\"-\")));\n        headers.unshift(\"\");\n\n        let numCharsInHAxis = 0;\n        if (chartType === \"ScatterChart\") {\n            dataArray = [];\n            for (var y in pivotData.tree) {\n                var tree2 = pivotData.tree[y];\n                for (var x in tree2) {\n                    agg = tree2[x];\n                     dataArray.push([\n                        parseFloat(x),\n                        parseFloat(y),\n                        fullAggName+\": \\n\"+agg.format(agg.value())\n                        ]);\n                }\n            }\n            dataTable = new google.visualization.DataTable();\n            dataTable.addColumn('number', pivotData.colAttrs.join(\"-\"));\n            dataTable.addColumn('number', pivotData.rowAttrs.join(\"-\"));\n            dataTable.addColumn({type: \"string\", role: \"tooltip\"});\n            dataTable.addRows(dataArray);\n            hAxisTitle = pivotData.colAttrs.join(\"-\");\n            vAxisTitle = pivotData.rowAttrs.join(\"-\");\n            title = \"\";\n        } else {\n            dataArray = [headers];\n            for (var colKey of Array.from(colKeys)) {\n                var row = [colKey.join(\"-\")];\n                numCharsInHAxis += row[0].length;\n                for (var rowKey of Array.from(rowKeys)) {\n                    agg = pivotData.getAggregator(rowKey, colKey);\n                    if (agg.value() != null) {\n                        var val = agg.value();\n                        if ($.isNumeric(val)) {\n                            if (val < 1) {\n                                row.push(parseFloat(val.toPrecision(3)));\n                            } else {\n                                row.push(parseFloat(val.toFixed(3)));\n                            }\n                        } else {\n                            row.push(val);\n                        }\n                    } else { row.push(null); }\n                }\n                dataArray.push(row);\n            }\n\n            dataTable = google.visualization.arrayToDataTable(dataArray);\n\n            title = (vAxisTitle = fullAggName);\n            hAxisTitle = pivotData.colAttrs.join(\"-\");\n            if (hAxisTitle !== \"\") { title += ` ${opts.localeStrings.vs} ${hAxisTitle}`; }\n            const groupByTitle = pivotData.rowAttrs.join(\"-\");\n            if (groupByTitle !== \"\") { title += ` ${opts.localeStrings.by} ${groupByTitle}`; }\n        }\n\n        let options = {\n            title,\n            hAxis: {title: hAxisTitle, slantedText: numCharsInHAxis > 50},\n            vAxis: {title: vAxisTitle},\n            tooltip: { textStyle: { fontName: 'Arial', fontSize: 12 } }\n        };\n\n        if (chartType === \"ColumnChart\") {\n            options.vAxis.minValue = 0;\n        }\n\n        if (chartType === \"ScatterChart\") {\n            options.legend = {position: \"none\"};\n            options.chartArea = {'width': '80%', 'height': '80%'};\n\n        } else if ((dataArray[0].length === 2) && (dataArray[0][1] ===  \"\")) {\n            options.legend = {position: \"none\"};\n        }\n\n        options = $.extend(true, {}, options, opts.gchart, extraOptions);\n\n        const result = $(\"<div>\").css({width: \"100%\", height: \"100%\"});\n        const wrapper = new google.visualization.ChartWrapper({dataTable, chartType, options});\n        wrapper.draw(result[0]);\n        result.bind(\"dblclick\", function() {\n            const editor = new google.visualization.ChartEditor();\n            google.visualization.events.addListener(editor, 'ok', () => editor.getChartWrapper().draw(result[0]));\n            return editor.openDialog(wrapper);\n        });\n        return result;\n    });\n\n    return $.pivotUtilities.gchart_renderers = {\n        \"Line Chart\": makeGoogleChart(\"LineChart\"),\n        \"Bar Chart\": makeGoogleChart(\"ColumnChart\"),\n        \"Stacked Bar Chart\": makeGoogleChart(\"ColumnChart\", {isStacked: true}),\n        \"Area Chart\": makeGoogleChart(\"AreaChart\", {isStacked: true}),\n        \"Scatter Chart\": makeGoogleChart(\"ScatterChart\")\n    };\n});\n"]}