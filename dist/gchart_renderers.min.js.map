{"version":3,"sources":["gchart_renderers.js"],"names":["$","makeGoogleChart","chartType","extraOptions","pivotData","opts","let","agg","dataArray","dataTable","hAxisTitle","title","vAxisTitle","extend","localeStrings","vs","by","gchart","width","window","innerWidth","height","innerHeight","rowKeys","getRowKeys","colKeys","length","push","getColKeys","fullAggName","aggregatorName","valAttrs","join","headers","map","h","unshift","numCharsInHAxis","y","tree","x","tree2","parseFloat","format","value","google","visualization","DataTable","addColumn","colAttrs","rowAttrs","type","role","addRows","colKey","rowKey","val","row","getAggregator","isNumeric","toPrecision","toFixed","arrayToDataTable","groupByTitle","options","hAxis","slantedText","vAxis","tooltip","textStyle","fontName","fontSize","minValue","legend","position","chartArea","result","css","wrapper","ChartWrapper","draw","bind","editor","ChartEditor","events","addListener","getChartWrapper","openDialog","pivotUtilities","gchart_renderers","Line Chart","Bar Chart","Stacked Bar Chart","isStacked","Area Chart","Scatter Chart","jQuery"],"mappings":"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","file":"gchart_renderers.min.js","sourcesContent":["(function($) {\n\n    const makeGoogleChart = (chartType, extraOptions) => (function(pivotData, opts) {\n        let agg, dataArray, dataTable, hAxisTitle, title, vAxisTitle;\n        const defaults = {\n            localeStrings: {\n                vs: 'vs',\n                by: 'by'\n            },\n            gchart: {}\n        };\n\n        opts = $.extend(true, {}, defaults, opts);\n        if (opts.gchart.width == null) { opts.gchart.width = window.innerWidth / 1.4; }\n        if (opts.gchart.height == null) { opts.gchart.height = window.innerHeight / 1.4; }\n\n        const rowKeys = pivotData.getRowKeys();\n        if (rowKeys.length === 0) { rowKeys.push([]); }\n        const colKeys = pivotData.getColKeys();\n        if (colKeys.length === 0) { colKeys.push([]); }\n        let fullAggName = pivotData.aggregatorName;\n        if (pivotData.valAttrs.length) {\n            fullAggName += `(${pivotData.valAttrs.join(', ')})`;\n        }\n        const headers = rowKeys.map((h) => h.join('-'));\n        headers.unshift('');\n\n        let numCharsInHAxis = 0;\n        if (chartType === 'ScatterChart') {\n            dataArray = [];\n            for (var y in pivotData.tree) {\n                var tree2 = pivotData.tree[y];\n                for (var x in tree2) {\n                    agg = tree2[x];\n                     dataArray.push([\n                        parseFloat(x),\n                        parseFloat(y),\n                        fullAggName+': \\n'+agg.format(agg.value())\n                        ]);\n                }\n            }\n            dataTable = new google.visualization.DataTable();\n            dataTable.addColumn('number', pivotData.colAttrs.join('-'));\n            dataTable.addColumn('number', pivotData.rowAttrs.join('-'));\n            dataTable.addColumn({type: 'string', role: 'tooltip'});\n            dataTable.addRows(dataArray);\n            hAxisTitle = pivotData.colAttrs.join('-');\n            vAxisTitle = pivotData.rowAttrs.join('-');\n            title = '';\n        } else {\n            dataArray = [headers];\n            for (var colKey of colKeys) {\n                var row = [colKey.join('-')];\n                numCharsInHAxis += row[0].length;\n                for (var rowKey of rowKeys) {\n                    agg = pivotData.getAggregator(rowKey, colKey);\n                    if (agg.value() != null) {\n                        var val = agg.value();\n                        if ($.isNumeric(val)) {\n                            if (val < 1) {\n                                row.push(parseFloat(val.toPrecision(3)));\n                            } else {\n                                row.push(parseFloat(val.toFixed(3)));\n                            }\n                        } else {\n                            row.push(val);\n                        }\n                    } else { row.push(null); }\n                }\n                dataArray.push(row);\n            }\n\n            dataTable = google.visualization.arrayToDataTable(dataArray);\n\n            title = (vAxisTitle = fullAggName);\n            hAxisTitle = pivotData.colAttrs.join('-');\n            if (hAxisTitle !== '') { title += ` ${opts.localeStrings.vs} ${hAxisTitle}`; }\n            const groupByTitle = pivotData.rowAttrs.join('-');\n            if (groupByTitle !== '') { title += ` ${opts.localeStrings.by} ${groupByTitle}`; }\n        }\n\n        let options = {\n            title,\n            hAxis: {title: hAxisTitle, slantedText: numCharsInHAxis > 50},\n            vAxis: {title: vAxisTitle},\n            tooltip: { textStyle: { fontName: 'Arial', fontSize: 12 } }\n        };\n\n        if (chartType === 'ColumnChart') {\n            options.vAxis.minValue = 0;\n        }\n\n        if (chartType === 'ScatterChart') {\n            options.legend = {position: 'none'};\n            options.chartArea = {'width': '80%', 'height': '80%'};\n\n        } else if ((dataArray[0].length === 2) && (dataArray[0][1] ===  '')) {\n            options.legend = {position: 'none'};\n        }\n\n        options = $.extend(true, {}, options, opts.gchart, extraOptions);\n\n        const result = $('<div>').css({width: '100%', height: '100%'});\n        const wrapper = new google.visualization.ChartWrapper({dataTable, chartType, options});\n        wrapper.draw(result[0]);\n        result.bind('dblclick', function() {\n            const editor = new google.visualization.ChartEditor();\n            google.visualization.events.addListener(editor, 'ok', () => editor.getChartWrapper().draw(result[0]));\n            return editor.openDialog(wrapper);\n        });\n        return result;\n    });\n\n    return $.pivotUtilities.gchart_renderers = {\n        'Line Chart': makeGoogleChart('LineChart'),\n        'Bar Chart': makeGoogleChart('ColumnChart'),\n        'Stacked Bar Chart': makeGoogleChart('ColumnChart', {isStacked: true}),\n        'Area Chart': makeGoogleChart('AreaChart', {isStacked: true}),\n        'Scatter Chart': makeGoogleChart('ScatterChart')\n    };\n})(jQuery);\n"]}