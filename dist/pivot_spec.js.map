{"version":3,"file":"pivot_spec.js","names":["fixtureData","raggedFixtureData","name","describe","table","beforeEach","done","$","pivotUI","onRefresh","multiple","parametersActive","it","expect","find","length","toBe","val","text","join","data","rows","cols","aggregatorName","vals","rendererName","pivot","_$$pivotUtilities","pivotUtilities","sortAs","derivers","aggregators","aggregator","filter","record","derivedAttributes","birthyear","dateFormat","trialbins","bin","sorters","attr","received_PivotData","received_rendererOptions","count2x","push","value","format","x","renderer","a","b","addClass","greeting","rendererOptions","agg","getAggregator","headCellRenderer","type","document","createTextNode","dataCellRenderer","sumOverSumOpts","aoaInput","pd","PivotData","aosInput","raggedAosInput","functionInput","tableInput","getRowKeys","toEqual","getColKeys","numNotNull","numNull","_i","_Array$from","Array","from","r","_i2","_Array$from2","c","records","forEachMatchingRecord","gender","getVal","tpl","aggregatorTemplates","count","countUnique","listUnique","average","sum","min","max","first","last","median","quantile","var","stdev","sumOverSum","naturalSort","sortedArr","NaN","Infinity","slice","sort","numberFormat","nf","scaler","suffix","thousandsSep","decimalSep","prefix","digitsAfterDecimal","Date","fieldsType","date","toISOString","integer","concat","df","binner","toBeNaN","cellRenderers","call","fname"],"sources":["pivot_spec.js"],"sourcesContent":["\nconst fixtureData = [\n    ['name', 'gender', 'colour', 'birthday', 'trials', 'successes'],\n    ['Nick', 'male', 'blue', '1982-11-07', 103, 12],\n    ['Jane', 'female', 'red', '1982-11-08', 95, 25],\n    ['John', 'male', 'blue', '1982-12-08', 112, 30],\n    ['Carol', 'female', 'yellow', '1983-12-08', 102, 14],\n];\n\nconst raggedFixtureData = [\n    { name: 'Nick', 'colour': 'red', 'age': 34 },\n    { name: 'Jane', 'gender': 'female' },\n    { name: 'John', 'gender': 'male', 'age': 12 },\n    { name: 'Jim', 'gender': null, 'age': 12 },\n];\n\ndescribe('$.pivotUI()', function () {\n    describe('with no rows/cols, default count aggregator, default TableRenderer', function () {\n        let table = null;\n\n        beforeEach(done => {\n            table = $('<div>').pivotUI(fixtureData, { onRefresh: done, multiple: false, parametersActive: true });\n        });\n        it('has all the basic UI elements', function (done) {\n            expect(table.find('.pvtUiParameters .pvtAxisContainer').length)\n                .toBe(3);\n            // noinspection DuplicatedCode\n            expect(table.find('.pvtRendererArea').length)\n                .toBe(1);\n            expect(table.find('.pvtVals').length)\n                .toBe(1);\n            expect(table.find('select.pvtRenderer').length)\n                .toBe(1);\n            expect(table.find('select.pvtAggregator').length)\n                .toBe(1);\n            expect(table.find('span.pvtAttr').length)\n                .toBe(6);\n            return done();\n        });\n\n        it('reflects its inputs', function (done) {\n            expect(table.find('.pvtUiParameters .pvtUnused span.pvtAttr').length)\n                .toBe(6);\n            expect(table.find('select.pvtRenderer').val())\n                .toBe('Table');\n            expect(table.find('select.pvtAggregator').val())\n                .toBe('Count');\n            return done();\n        });\n\n        it('renders a table', function (done) {\n            expect(table.find('table.pvtTable').length)\n                .toBe(1);\n            return done();\n        });\n\n\n        describe('its renderer output', function () {\n            it('has the correct type and number of cells', function (done) {\n                expect(table.find('th.pvtTotalLabel').length)\n                    .toBe(1);\n                expect(table.find('td.pvtGrandTotal').length)\n                    .toBe(1);\n                return done();\n            });\n\n            it('has the correct textual representation', function (done) {\n                expect(table.find('table.pvtTable').text())\n                    .toBe(['Totals', '4'].join(''));\n                return done();\n            });\n\n            it('has a correct grand total with data value', function (done) {\n                expect(table.find('td.pvtGrandTotal').text())\n                    .toBe('4');\n                expect(table.find('td.pvtGrandTotal').data('value'))\n                    .toBe(4);\n                return done();\n            });\n        });\n    });\n\n    describe('with rows/cols, sum-over-sum aggregator, Heatmap renderer', function () {\n        let table = null;\n\n        beforeEach(done => table = $('<div>').pivotUI(fixtureData, {\n                rows: ['gender'], cols: ['colour'],\n                aggregatorName: 'Sum over Sum',\n                vals: ['successes', 'trials'],\n                rendererName: 'Heatmap',\n                onRefresh: done,\n                multiple: false,\n                parametersActive: true,\n            },\n        ));\n\n        it('has all the basic UI elements', function (done) {\n            expect(table.find('.pvtAxisContainer').length)\n                .toBe(3);\n            // noinspection DuplicatedCode\n            expect(table.find('.pvtRendererArea').length)\n                .toBe(1);\n            expect(table.find('.pvtVals').length)\n                .toBe(1);\n            expect(table.find('select.pvtRenderer').length)\n                .toBe(1);\n            expect(table.find('select.pvtAggregator').length)\n                .toBe(1);\n            expect(table.find('span.pvtAttr').length)\n                .toBe(6);\n            return done();\n        });\n\n        it('reflects its inputs', function (done) {\n            expect(table.find('.pvtUnused span.pvtAttr').length)\n                .toBe(4);\n            expect(table.find('.pvtRows span.pvtAttr').length)\n                .toBe(1);\n            expect(table.find('.pvtCols span.pvtAttr').length)\n                .toBe(1);\n            expect(table.find('select.pvtRenderer').val())\n                .toBe('Heatmap');\n            expect(table.find('select.pvtAggregator').val())\n                .toBe('Sum over Sum');\n            return done();\n        });\n\n        it('renders a table', function (done) {\n            expect(table.find('table.pvtTable').length)\n                .toBe(1);\n            return done();\n        });\n\n        describe('its renderer output', function () {\n            it('has the correct type and number of cells', function (done) {\n                expect(table.find('th.pvtAxisLabel').length)\n                    .toBe(2);\n                expect(table.find('th.pvtRowLabel').length)\n                    .toBe(2);\n                expect(table.find('th.pvtColLabel').length)\n                    .toBe(3);\n                expect(table.find('th.pvtTotalLabel').length)\n                    .toBe(2);\n                expect(table.find('td.pvtVal').length)\n                    .toBe(6);\n                expect(table.find('td.pvtTotal').length)\n                    .toBe(5);\n                expect(table.find('td.pvtGrandTotal').length)\n                    .toBe(1);\n                return done();\n            });\n\n            it('has the correct textual representation', function (done) {\n                expect(table.find('table.pvtTable').text())\n                    .toBe([\n                            'colour', 'blue', 'red', 'yellow', 'Totals',\n                            'gender',\n                            'female', '0.26', '0.14', '0.20',\n                            'male', '0.20', '0.20',\n                            'Totals', '0.20', '0.26', '0.14', '0.20',\n                        ].join(''),\n                    );\n                return done();\n            });\n\n            it('has a correct spot-checked cell with data value', function (done) {\n                expect(table.find('td.col0.row1').text())\n                    .toBe('0.20');\n                expect(table.find('td.col0.row1').data('value'))\n                    .toBe((12 + 30) / (103 + 112));\n                return done();\n            });\n        });\n    });\n\n    describe('with ragged input', function () {\n        const table = $('<div>').pivotUI(raggedFixtureData, {\n            multiple: false,\n            parametersActive: true,\n            rows: ['gender'],\n            cols: ['age'],\n        });\n\n        it('renders a table with the correct textual representation', () => expect(table.find('table.pvtTable').text())\n            .toBe([\n                    'age', '12', '34', 'null', 'Totals',\n                    'gender',\n                    'female', '1', '1',\n                    'male', '1', '1',\n                    'null', '1', '1', '2',\n                    'Totals', '2', '1', '1', '4',\n                ].join(''),\n            ));\n    });\n});\n\ndescribe('$.pivot()', function () {\n\n    describe('with no rows/cols, default count aggregator, default TableRenderer', function () {\n        const table = $('<div>').pivot(fixtureData);\n\n        it('renders a table', () => expect(table.find('table.pvtTable').length)\n            .toBe(1));\n\n        describe('its renderer output', function () {\n\n            it('has the correct textual representation', () => expect(table.find('table.pvtTable').text())\n                .toBe(['Totals', '4'].join('')));\n\n            it('has a correct grand total with data value', function () {\n                expect(table.find('td.pvtGrandTotal').text())\n                    .toBe('4');\n                return expect(table.find('td.pvtGrandTotal').data('value'))\n                    .toBe(4);\n            });\n        });\n    });\n\n    describe('with rows/cols, sum aggregator, derivedAttributes, filter and sorters', function () {\n        const { sortAs, derivers, aggregators } = $.pivotUtilities;\n        const table = $('<div>').pivot(fixtureData, {\n                rows: ['gender'], cols: ['birthyear'], aggregator: aggregators['Sum'](['trialbins']),\n                filter(record) {\n                    return record.name !== 'Nick';\n                },\n                derivedAttributes: {\n                    birthyear: derivers.dateFormat('birthday', '%y'),\n                    trialbins: derivers.bin('trials', 10),\n                },\n                sorters(attr) {\n                    if (attr === 'gender') {\n                        return sortAs(['male', 'female']);\n                    }\n                },\n            },\n        );\n\n        it('renders a table with the correct textual representation', () => expect(table.find('table.pvtTable').text())\n            .toBe([\n                    'birthyear', '1982', '1983', 'Totals',\n                    'gender',\n                    'male', '110.00', '110.00',\n                    'female', '90.00', '100.00', '190.00',\n                    'Totals', '200.00', '100.00', '300.00',\n                ].join(''),\n            ));\n    });\n\n    describe('with rows/cols, fraction-of aggregator', function () {\n        const { aggregators } = $.pivotUtilities;\n        const table = $('<div>').pivot(fixtureData, {\n                rows: ['gender'],\n                aggregator: aggregators['Sum as Fraction of Total'](['trials']),\n            },\n        );\n\n        it('renders a table with the correct textual representation', () => expect(table.find('table.pvtTable').text())\n            .toBe([\n                    'gender', 'Totals',\n                    'female', '47.8%',\n                    'male', '52.2%',\n                    'Totals', '100.0%',\n                ].join(''),\n            ));\n    });\n\n    describe('with rows/cols, custom aggregator, custom renderer with options', function () {\n        let received_PivotData = null;\n        let received_rendererOptions = null;\n\n        const table = $('<div>').pivot(fixtureData, {\n            rows: ['name', 'colour'], cols: ['trials', 'successes'],\n            aggregator() {\n                return {\n                    count2x: 0,\n                    push() {\n                        return this.count2x += 2;\n                    },\n                    value() {\n                        return this.count2x;\n                    },\n                    format(x) {\n                        return 'formatted ' + x;\n                    },\n                };\n            },\n            renderer(a, b) {\n                received_PivotData = a;\n                received_rendererOptions = b;\n                return $('<div>').addClass(b.greeting).text('world');\n            },\n            rendererOptions: { greeting: 'hithere' },\n        });\n\n        it('renders the custom renderer as per options', () => expect(table.find('div.hithere').length)\n            .toBe(1));\n\n        describe('its received PivotData object', () => it('has a correct grand total value and format for custom aggregator', function () {\n            const agg = received_PivotData.getAggregator([], []);\n            const val = agg.value();\n            expect(val).toBe(8);\n            return expect(agg.format(val)).toBe('formatted 8');\n        }));\n    });\n\n\n    describe('with ragged input', function () {\n        const table = $('<div>').pivot(raggedFixtureData, { rows: ['gender'], cols: ['age'] });\n\n        it('renders a table with the correct textual representation', () => expect(table.find('table.pvtTable').text())\n            .toBe([\n                    'age', '12', '34', 'null', 'Totals',\n                    'gender',\n                    'female', '1', '1',\n                    'male', '1', '1',\n                    'null', '1', '1', '2',\n                    'Totals', '2', '1', '1', '4',\n                ].join(''),\n            ));\n    });\n});\n\ndescribe('$.pivot()', function () {\n    var table = $('<div>').pivot(fixtureData, {\n        multiple: false,\n        rows: ['gender'],\n        cols: ['colour'],\n        aggregatorName: ['Count'],\n        rendererOptions: {\n            headCellRenderer: function (value, type) {\n                return document.createTextNode('h_' + type + '_' + value);\n            },\n            dataCellRenderer: function (value) {\n                return document.createTextNode('d_' + value);\n            },\n        },\n    });\n\n    it('renders a table with the correct textual representation', function () {\n        expect(table.find('table.pvtTable').text()).toBe([\n            'colour', 'h_colour_blue', 'h_colour_red', 'h_colour_yellow', 'Totals',\n            'gender',\n            'h_gender_female', 'd_', 'd_1', 'd_1', 'd_2',\n            'h_gender_male', 'd_2', 'd_', 'd_', 'd_2',\n            'Totals', 'd_2', 'd_1', 'd_1', 'd_4',\n        ].join(''));\n    });\n});\n\ndescribe('$.pivotUtilities', function () {\n\n    describe('.PivotData()', function () {\n        const sumOverSumOpts =\n            { aggregator: $.pivotUtilities.aggregators['Sum over Sum'](['a', 'b']) };\n\n        describe('with no options', function () {\n            const aoaInput = [['a', 'b'], [1, 2], [3, 4]];\n            const pd = new $.pivotUtilities.PivotData(aoaInput);\n\n            it('has the correct grand total value', () => expect(pd.getAggregator([], []).value())\n                .toBe(2));\n        });\n\n        describe('with array-of-array input', function () {\n            const aoaInput = [['a', 'b'], [1, 2], [3, 4]];\n            const pd = new $.pivotUtilities.PivotData(aoaInput, sumOverSumOpts);\n\n            it('has the correct grand total value', () => expect(pd.getAggregator([], []).value())\n                .toBe((1 + 3) / (2 + 4)));\n        });\n\n        describe('with array-of-object input', function () {\n            const aosInput = [{ a: 1, b: 2 }, { a: 3, b: 4 }];\n            const pd = new $.pivotUtilities.PivotData(aosInput, sumOverSumOpts);\n\n            it('has the correct grand total value', () => expect(pd.getAggregator([], []).value())\n                .toBe((1 + 3) / (2 + 4)));\n        });\n\n        describe('with ragged array-of-object input', function () {\n            const raggedAosInput = [{ a: 1 }, { b: 4 }, { a: 3, b: 2 }];\n            const pd = new $.pivotUtilities.PivotData(raggedAosInput, sumOverSumOpts);\n\n            it('has the correct grand total value', () => expect(pd.getAggregator([], []).value())\n                .toBe((1 + 3) / (2 + 4)));\n        });\n\n        describe('with function input', function () {\n            const functionInput = function (record) {\n                record({ a: 1, b: 2 });\n                return record({ a: 3, b: 4 });\n            };\n            const pd = new $.pivotUtilities.PivotData(functionInput, sumOverSumOpts);\n\n            it('has the correct grand total value', () => expect(pd.getAggregator([], []).value())\n                .toBe((1 + 3) / (2 + 4)));\n        });\n\n        describe('with jQuery table element input', function () {\n            const tableInput = $(`\\\n<table>\n    <thead>\n        <tr> <th>a</th><th>b</th> </tr>\n    </thead>\n    <tbody>\n        <tr> <td>1</td> <td>2</td> </tr>\n        <tr> <td>3</td> <td>4</td> </tr>\n    </tbody>\n</table>\\\n`,\n            );\n            const pd = new $.pivotUtilities.PivotData(tableInput, sumOverSumOpts);\n\n            it('has the correct grand total value', () => expect(pd.getAggregator([], []).value())\n                .toBe((1 + 3) / (2 + 4)));\n        });\n\n\n        describe('with rows/cols', function () {\n            const pd = new $.pivotUtilities.PivotData(fixtureData, {\n                rows: ['name', 'colour'],\n                cols: ['trials', 'successes'],\n            });\n\n            it('has correctly-ordered row keys', () => expect(pd.getRowKeys())\n                .toEqual([['Carol', 'yellow'], ['Jane', 'red'], ['John', 'blue'], ['Nick', 'blue']]));\n\n            it('has correctly-ordered col keys', () => expect(pd.getColKeys())\n                .toEqual([[95, 25], [102, 14], [103, 12], [112, 30]]));\n\n            it('can be iterated over', function () {\n                let numNotNull = 0;\n                let numNull = 0;\n                for (const r of Array.from(pd.getRowKeys())) {\n                    for (const c of Array.from(pd.getColKeys())) {\n                        if (pd.getAggregator(r, c).value() != null) {\n                            numNotNull++;\n                        } else {\n                            numNull++;\n                        }\n                    }\n                }\n                expect(numNotNull)\n                    .toBe(4);\n                return expect(numNull)\n                    .toBe(12);\n            });\n\n            it('returns matching records', function () {\n                const records = [];\n                pd.forEachMatchingRecord({ gender: 'male' }, x => records.push(x.name));\n                return expect(records)\n                    .toEqual(['Nick', 'John']);\n            });\n\n            it('has a correct spot-checked aggregator', function () {\n                const agg = pd.getAggregator(['Carol', 'yellow'], [102, 14]);\n                const val = agg.value();\n                expect(val).toBe(1);\n                return expect(agg.format(val)).toBe('1');\n            });\n\n            it('has a correct grand total aggregator', function () {\n                const agg = pd.getAggregator([], []);\n                const val = agg.value();\n                expect(val).toBe(4);\n                return expect(agg.format(val)).toBe('4');\n            });\n        });\n    });\n\n    describe('.aggregatorTemplates', function () {\n\n        const getVal = function (aggregator) {\n            const pd = new $.pivotUtilities.PivotData(fixtureData, { aggregator });\n            return pd.getAggregator([], []).value();\n        };\n        const tpl = $.pivotUtilities.aggregatorTemplates;\n\n        describe('.count', () => it('works', () => expect(getVal(tpl.count()()))\n            .toBe(4)));\n\n        describe('.countUnique', () => it('works', () => expect(getVal(tpl.countUnique()(['gender'])))\n            .toBe(2)));\n\n        describe('.listUnique', () => it('works', () => expect(getVal(tpl.listUnique()(['gender'])))\n            .toBe('female,male')));\n\n        describe('.average', () => it('works', () => expect(getVal(tpl.average()(['trials'])))\n            .toBe(103)));\n\n        describe('.sum', () => it('works', () => expect(getVal(tpl.sum()(['trials'])))\n            .toBe(412)));\n\n        describe('.min', () => it('works', () => expect(getVal(tpl.min()(['trials'])))\n            .toBe(95)));\n\n        describe('.max', () => it('works', () => expect(getVal(tpl.max()(['trials'])))\n            .toBe(112)));\n\n        describe('.first', () => it('works', () => expect(getVal(tpl.first()(['name'])))\n            .toBe('Carol')));\n\n        describe('.last', () => it('works', () => expect(getVal(tpl.last()(['name'])))\n            .toBe('Nick')));\n\n        describe('.average', () => it('works', () => expect(getVal(tpl.average()(['trials'])))\n            .toBe(103)));\n\n        describe('.median', () => it('works', () => expect(getVal(tpl.median()(['trials'])))\n            .toBe(102.5)));\n\n        describe('.quantile', () => it('works', function () {\n            expect(getVal(tpl.quantile(0)(['trials'])))\n                .toBe(95);\n            expect(getVal(tpl.quantile(0.1)(['trials'])))\n                .toBe(98.5);\n            expect(getVal(tpl.quantile(0.25)(['trials'])))\n                .toBe(98.5);\n            expect(getVal(tpl.quantile(1 / 3)(['trials'])))\n                .toBe(102);\n            return expect(getVal(tpl.quantile(1)(['trials'])))\n                .toBe(112);\n        }));\n\n        describe('.var', () => it('works', () => expect(getVal(tpl.var()(['trials'])))\n            .toBe(48.666666666666686)));\n\n        describe('.stdev', () => it('works', () => expect(getVal(tpl.stdev()(['trials'])))\n            .toBe(6.976149845485451)));\n\n        describe('.sumOverSum', () => it('works', () => expect(getVal(tpl.sumOverSum()(['successes', 'trials'])))\n            .toBe((12 + 25 + 30 + 14) / (95 + 102 + 103 + 112))));\n    });\n\n    describe('.naturalSort()', function () {\n        const {\n            naturalSort,\n        } = $.pivotUtilities;\n\n        const sortedArr = [\n            null, NaN,\n            -Infinity, '-Infinity', -3, '-3', -2, '-2', -1, '-1',\n            0, '2e-1', 1, '01', '1', 2, '002', '002e0', '02', '2', '2e-0',\n            3, 10, '10', '11', '12', '1e2', '112', Infinity, 'Infinity',\n            '1a', '2a', '12a', '20a',\n            'A', 'A', 'NaN', 'a', 'a',\n            'a01', 'a012', 'a02', 'a1', 'a2', 'a12', 'a12', 'a21', 'a21',\n            'b', 'c', 'd', 'null',\n        ];\n\n        it('sorts naturally (null, NaN, numbers & numbery strings, Alphanum for text strings)', () => expect(sortedArr.slice().sort(naturalSort))\n            .toEqual(sortedArr));\n    });\n\n    describe('.sortAs()', function () {\n        const {\n            sortAs,\n        } = $.pivotUtilities;\n\n        it('sorts with unknown values sorted at the end', () => expect([5, 2, 3, 4, 1].sort(sortAs([4, 3, 2])))\n            .toEqual([4, 3, 2, 1, 5]));\n\n        it('sorts lowercase after uppercase', () => expect(['Ab', 'aA', 'aa', 'ab'].sort(sortAs(['Ab', 'Aa'])))\n            .toEqual(['Ab', 'ab', 'aa', 'aA']));\n    });\n\n    describe('.numberFormat()', function () {\n        const {\n            numberFormat,\n        } = $.pivotUtilities;\n\n        it('formats numbers', function () {\n            const nf = numberFormat();\n            return expect(nf(1234567.89123456))\n                .toEqual('1,234,567.89');\n        });\n\n        it('formats booleans', function () {\n            const nf = numberFormat();\n            return expect(nf(true))\n                .toEqual('1.00');\n        });\n\n        it('formats numbers in strings', function () {\n            const nf = numberFormat();\n            return expect(nf('1234567.89123456'))\n                .toEqual('1,234,567.89');\n        });\n\n        it('doesn\\'t formats strings', function () {\n            const nf = numberFormat();\n            return expect(nf('hi there'))\n                .toEqual('');\n        });\n\n        it('doesn\\'t formats objects', function () {\n            const nf = numberFormat();\n            return expect(nf({ a: 1 }))\n                .toEqual('');\n        });\n\n        it('formats percentages', function () {\n            const nf = numberFormat({ scaler: 100, suffix: '%' });\n            return expect(nf(0.12345))\n                .toEqual('12.35%');\n        });\n\n        it('adds separators', function () {\n            const nf = numberFormat({ thousandsSep: 'a', decimalSep: 'b' });\n            return expect(nf(1234567.89123456))\n                .toEqual('1a234a567b89');\n        });\n\n        it('adds prefixes and suffixes', function () {\n            const nf = numberFormat({ prefix: 'a', suffix: 'b' });\n            return expect(nf(1234567.89123456))\n                .toEqual('a1,234,567.89b');\n        });\n\n        it('scales and rounds', function () {\n            const nf = numberFormat({ digitsAfterDecimal: 3, scaler: 1000 });\n            return expect(nf(1234567.89123456))\n                .toEqual('1,234,567,891.235');\n        });\n\n\n        describe('.date', function () {\n            it('from date', function () {\n                const nf = numberFormat({});\n                return expect(nf(new Date('2024-01-01'), $.pivotUtilities.fieldsType.date))\n                    .toEqual('01/01/2024');\n            });\n\n            it('from ISO string', function () {\n                const nf = numberFormat({});\n                return expect(nf((new Date('2024-01-01')).toISOString(), $.pivotUtilities.fieldsType.date))\n                    .toEqual('01/01/2024');\n            });\n\n            it('to integer', function () {\n                const nf = numberFormat({});\n                return expect(nf(10, $.pivotUtilities.fieldsType.integer))\n                    .toEqual(10);\n            });\n\n            it('to integer', function () {\n                const nf = numberFormat({});\n                return expect(nf(10, (val) => `hello_${val}`))\n                    .toEqual('hello_10');\n            });\n        });\n\n    });\n\n    describe('.derivers', function () {\n        describe('.dateFormat()', function () {\n            const df = $.pivotUtilities.derivers.dateFormat('x', 'abc % %% %%% %a %y %m %n %d %w %x %H %M %S', true);\n\n            it('formats date objects', () => expect(df({ x: new Date('2015-01-02T23:43:11Z') }))\n                .toBe('abc % %% %%% %a 2015 01 Jan 02 Fri 5 23 43 11'));\n\n            it('formats input parsed by Date.parse()', function () {\n                expect(df({ x: '2015-01-02T23:43:11Z' }))\n                    .toBe('abc % %% %%% %a 2015 01 Jan 02 Fri 5 23 43 11');\n\n                return expect(df({ x: 'bla' }))\n                    .toBe('');\n            });\n        });\n\n        describe('.bin()', function () {\n            const binner = $.pivotUtilities.derivers.bin('x', 10);\n\n            it('bins numbers', function () {\n                expect(binner({ x: 11 }))\n                    .toBe(10);\n\n                expect(binner({ x: 9 }))\n                    .toBe(0);\n\n                return expect(binner({ x: 111 }))\n                    .toBe(110);\n            });\n\n            it('bins booleans', () => expect(binner({ x: true }))\n                .toBe(0));\n\n            it('bins negative numbers', () => expect(binner({ x: -12 }))\n                .toBe(-10));\n\n            it('doesn\\'t bin strings', () => expect(binner({ x: 'a' }))\n                .toBeNaN());\n\n            it('doesn\\'t bin objects', () => expect(binner({ x: { a: 1 } }))\n                .toBeNaN());\n        });\n    });\n\n    describe('.cellRenderers', function () {\n        it('cellRenderers string', () => expect($.pivotUtilities.cellRenderers.text.call({}, 'x').data)\n            .toBe('x'));\n\n        it('cellRenderers string', () => expect($.pivotUtilities.cellRenderers.text.call({fieldsType: {fname: $.pivotUtilities.fieldsType.date}}, new Date('2024-01-01'), 'fname').data)\n            .toBe('01/01/2024'));\n\n    });\n\n});\n"],"mappings":"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","ignoreList":[]}