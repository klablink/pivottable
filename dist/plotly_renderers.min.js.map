{"version":3,"sources":["plotly_renderers.js"],"names":["callWithJQueryAndPlotty","pivotModule","exports","module","require","define","amd","jQuery","Plotly","$","makePlotlyChart","traceOptions","layoutOptions","transpose","pivotData","opts","let","groupByTitle","hAxisTitle","extend","localeStrings","vs","by","plotly","plotlyConfig","rowKeys","getRowKeys","colKeys","getColKeys","traceKeys","length","push","datumKeys","fullAggName","aggregatorName","valAttrs","join","data","map","traceKey","datumKey","values","labels","Array","from","val","parseFloat","getAggregator","value","isFinite","trace","name","type","x","y","rowAttrs","colAttrs","titleText","layout","title","hovermode","width","window","innerWidth","height","innerHeight","i","columns","Math","ceil","sqrt","rows","grid","d","domain","row","floor","column","showlegend","xaxis","automargin","yaxis","result","appendTo","newPlot","detach","pivotUtilities","plotly_renderers","Horizontal Bar Chart","orientation","barmode","Horizontal Stacked Bar Chart","Bar Chart","Stacked Bar Chart","Line Chart","Area Chart","stackgroup","Scatter Chart","rowKey","text","mode","colKey","v","renderArea","style","remove","Multiple Pie Chart","scalegroup","hoverinfo","textinfo"],"mappings":"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","file":"plotly_renderers.min.js","sourcesContent":["// TODO: This file was created by bulk-decaffeinate.\n// Sanity-check the conversion and remove this comment.\n/*\n * decaffeinate suggestions:\n * DS101: Remove unnecessary use of Array.from\n * DS102: Remove unnecessary code created because of implicit returns\n * DS207: Consider shorter variations of null checks\n * Full docs: https://github.com/decaffeinate/decaffeinate/blob/main/docs/suggestions.md\n */\n\nconst callWithJQueryAndPlotty = function(pivotModule) {\n    if ((typeof exports === \"object\") && (typeof module === \"object\")) { // CommonJS\n        return pivotModule(require(\"jquery\"), require(\"plotly.js\"));\n    } else if ((typeof define === \"function\") && define.amd) { // AMD\n        return define([\"jquery\", \"plotly.js\"], pivotModule);\n        // Plain browser env\n    } else {\n        return pivotModule(jQuery, Plotly);\n    }\n};\n\ncallWithJQueryAndPlotty(function($, Plotly) {\n\n    const makePlotlyChart = function(traceOptions, layoutOptions, transpose) {\n        if (traceOptions == null) { traceOptions = {}; }\n        if (layoutOptions == null) { layoutOptions = {}; }\n        if (transpose == null) { transpose = false; }\n        return function(pivotData, opts) {\n            let groupByTitle, hAxisTitle;\n            const defaults = {\n                localeStrings: {vs: \"vs\", by: \"by\"},\n                plotly: {},\n                plotlyConfig: {}\n            };\n\n            opts = $.extend(true, {}, defaults, opts);\n\n            const rowKeys = pivotData.getRowKeys();\n            const colKeys = pivotData.getColKeys();\n            const traceKeys = transpose ? colKeys : rowKeys;\n            if (traceKeys.length === 0) { traceKeys.push([]); }\n            const datumKeys = transpose ? rowKeys : colKeys;\n            if (datumKeys.length === 0) { datumKeys.push([]); }\n\n            let fullAggName = pivotData.aggregatorName;\n            if (pivotData.valAttrs.length) {\n                fullAggName += `(${pivotData.valAttrs.join(\", \")})`;\n            }\n\n            const data = traceKeys.map(function(traceKey) {\n                const values = [];\n                const labels = [];\n                for (var datumKey of Array.from(datumKeys)) {\n                    var val = parseFloat(pivotData.getAggregator(\n                        transpose ? datumKey : traceKey,\n                        transpose ? traceKey : datumKey\n                    ).value());\n                    values.push(isFinite(val) ? val : null);\n                    labels.push(datumKey.join('-') || ' ');\n                }\n\n                const trace = {name: traceKey.join('-') || fullAggName};\n                if (traceOptions.type === \"pie\") {\n                    trace.values = values;\n                    trace.labels = labels.length > 1 ? labels : [fullAggName];\n                } else {\n                    trace.x = transpose ? values : labels;\n                    trace.y = transpose ? labels : values;\n                }\n                return $.extend(trace, traceOptions);\n            });\n\n            if (transpose) {\n                hAxisTitle = pivotData.rowAttrs.join(\"-\");\n                groupByTitle = pivotData.colAttrs.join(\"-\");\n            } else {\n                hAxisTitle = pivotData.colAttrs.join(\"-\");\n                groupByTitle = pivotData.rowAttrs.join(\"-\");\n            }\n            let titleText = fullAggName;\n            if (hAxisTitle !== \"\") { titleText += ` ${opts.localeStrings.vs} ${hAxisTitle}`; }\n            if (groupByTitle !== \"\") { titleText += ` ${opts.localeStrings.by} ${groupByTitle}`; }\n\n            const layout = {\n                title: titleText,\n                hovermode: 'closest',\n                width: window.innerWidth / 1.4,\n                height: (window.innerHeight / 1.4) - 50\n            };\n\n            if (traceOptions.type === 'pie') {\n                const columns = Math.ceil(Math.sqrt(data.length));\n                const rows = Math.ceil(data.length / columns);\n                layout.grid = {columns, rows};\n                for (var i in data) {\n                    var d = data[i];\n                    d.domain = {\n                        row: Math.floor(i / columns),\n                        column: i - (columns * Math.floor(i / columns)),\n                    };\n                    if (data.length > 1) {\n                        d.title = d.name;\n                    }\n                }\n                if (data[0].labels.length === 1) { layout.showlegend = false; }\n            } else {\n                layout.xaxis = {\n                    title: transpose ? fullAggName : null,\n                    automargin: true\n                };\n                layout.yaxis = {\n                    title: transpose ? null : fullAggName,\n                    automargin: true\n                };\n            }\n\n\n            const result = $(\"<div>\").appendTo($(\"body\"));\n            Plotly.newPlot(result[0], data, $.extend(layout, layoutOptions, opts.plotly), opts.plotlyConfig);\n            return result.detach();\n        };\n    };\n\n    const makePlotlyScatterChart = () => (function(pivotData, opts) {\n        const defaults = {\n            localeStrings: {vs: \"vs\", by: \"by\"},\n            plotly: {},\n            plotlyConfig: {}\n        };\n\n        opts = $.extend(true, {}, defaults, opts);\n\n        const rowKeys = pivotData.getRowKeys();\n        if (rowKeys.length === 0) { rowKeys.push([]); }\n        const colKeys = pivotData.getColKeys();\n        if (colKeys.length === 0) { colKeys.push([]); }\n\n        const data = {x: [], y: [], text: [], type: 'scatter', mode: 'markers'};\n\n        for (var rowKey of Array.from(rowKeys)) {\n            for (var colKey of Array.from(colKeys)) {\n                var v = pivotData.getAggregator(rowKey, colKey).value();\n                if (v != null) {\n                    data.x.push(colKey.join('-'));\n                    data.y.push(rowKey.join('-'));\n                    data.text.push(v);\n                }\n            }\n        }\n\n        const layout = {\n            title: pivotData.rowAttrs.join(\"-\") + ' vs ' + pivotData.colAttrs.join(\"-\"),\n            hovermode: 'closest',\n            xaxis: {title: pivotData.colAttrs.join('-'), automargin: true},\n            yaxis: {title: pivotData.rowAttrs.join('-'), automargin: true},\n            width: window.innerWidth / 1.5,\n            height: (window.innerHeight / 1.4) - 50\n        };\n\n        const renderArea = $(\"<div>\", {style: \"display:none;\"}).appendTo($(\"body\"));\n        const result = $(\"<div>\").appendTo(renderArea);\n        Plotly.newPlot(result[0], [data], $.extend(layout, opts.plotly), opts.plotlyConfig);\n        result.detach();\n        renderArea.remove();\n        return result;\n    });\n\n    return $.pivotUtilities.plotly_renderers = {\n        \"Horizontal Bar Chart\": makePlotlyChart({type: 'bar', orientation: 'h'},\n            {barmode: 'group'}, true),\n        \"Horizontal Stacked Bar Chart\": makePlotlyChart({type: 'bar', orientation: 'h'},\n            {barmode: 'relative'}, true),\n        \"Bar Chart\": makePlotlyChart({type: 'bar'}, {barmode: 'group'}),\n        \"Stacked Bar Chart\": makePlotlyChart({type: 'bar'}, {barmode: 'relative'}),\n        \"Line Chart\": makePlotlyChart(),\n        \"Area Chart\": makePlotlyChart({stackgroup: 1}),\n        \"Scatter Chart\": makePlotlyScatterChart(),\n        'Multiple Pie Chart': makePlotlyChart(\n            {type: 'pie', scalegroup: 1, hoverinfo: 'label+value', textinfo: 'none'},\n            {}, true)\n    };\n});\n"]}